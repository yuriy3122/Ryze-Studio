// <auto-generated/>

namespace SharpDX.RawInput
{
    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>RAW_DEVICE_FLAGS</unmanaged>
    /// <unmanaged-short>RAW_DEVICE_FLAGS</unmanaged-short>
    public enum DeviceFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIDEV_REMOVE</unmanaged>
        /// <unmanaged-short>RIDEV_REMOVE</unmanaged-short>
        Remove = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIDEV_EXCLUDE</unmanaged>
        /// <unmanaged-short>RIDEV_EXCLUDE</unmanaged-short>
        Exclude = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIDEV_PAGEONLY</unmanaged>
        /// <unmanaged-short>RIDEV_PAGEONLY</unmanaged-short>
        PageOnly = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIDEV_NOLEGACY</unmanaged>
        /// <unmanaged-short>RIDEV_NOLEGACY</unmanaged-short>
        NoLegacy = unchecked ((System.Int32)(48)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIDEV_INPUTSINK</unmanaged>
        /// <unmanaged-short>RIDEV_INPUTSINK</unmanaged-short>
        InputSink = unchecked ((System.Int32)(256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIDEV_CAPTUREMOUSE</unmanaged>
        /// <unmanaged-short>RIDEV_CAPTUREMOUSE</unmanaged-short>
        CaptureMouse = unchecked ((System.Int32)(512)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIDEV_NOHOTKEYS</unmanaged>
        /// <unmanaged-short>RIDEV_NOHOTKEYS</unmanaged-short>
        NoHotKeys = unchecked ((System.Int32)(512)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIDEV_APPKEYS</unmanaged>
        /// <unmanaged-short>RIDEV_APPKEYS</unmanaged-short>
        AppKeys = unchecked ((System.Int32)(1024)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIDEV_EXINPUTSINK</unmanaged>
        /// <unmanaged-short>RIDEV_EXINPUTSINK</unmanaged-short>
        ExclusiveInputSink = unchecked ((System.Int32)(4096)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIDEV_DEVNOTIFY</unmanaged>
        /// <unmanaged-short>RIDEV_DEVNOTIFY</unmanaged-short>
        DeviceNotify = unchecked ((System.Int32)(8192)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>RAW_DEVICE_TYPE</unmanaged>
    /// <unmanaged-short>RAW_DEVICE_TYPE</unmanaged-short>
    public enum DeviceType : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIM_TYPEMOUSE</unmanaged>
        /// <unmanaged-short>RIM_TYPEMOUSE</unmanaged-short>
        Mouse = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIM_TYPEKEYBOARD</unmanaged>
        /// <unmanaged-short>RIM_TYPEKEYBOARD</unmanaged-short>
        Keyboard = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIM_TYPEHID</unmanaged>
        /// <unmanaged-short>RIM_TYPEHID</unmanaged-short>
        HumanInputDevice = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIM_TYPEMAX</unmanaged>
        /// <unmanaged-short>RIM_TYPEMAX</unmanaged-short>
        Maximum = unchecked ((System.Int32)(2))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>RAW_KEY_STATE</unmanaged>
    /// <unmanaged-short>RAW_KEY_STATE</unmanaged-short>
    public enum KeyState : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WM_VKEYTOITEM</unmanaged>
        /// <unmanaged-short>WM_VKEYTOITEM</unmanaged-short>
        VirtualKeyToItem = unchecked ((System.Int32)(46)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WM_SETHOTKEY</unmanaged>
        /// <unmanaged-short>WM_SETHOTKEY</unmanaged-short>
        SetHotKey = unchecked ((System.Int32)(50)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WM_GETHOTKEY</unmanaged>
        /// <unmanaged-short>WM_GETHOTKEY</unmanaged-short>
        GetHotKey = unchecked ((System.Int32)(51)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WM_KEYFIRST</unmanaged>
        /// <unmanaged-short>WM_KEYFIRST</unmanaged-short>
        KeyFirst = unchecked ((System.Int32)(256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WM_KEYDOWN</unmanaged>
        /// <unmanaged-short>WM_KEYDOWN</unmanaged-short>
        KeyDown = unchecked ((System.Int32)(256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WM_KEYUP</unmanaged>
        /// <unmanaged-short>WM_KEYUP</unmanaged-short>
        KeyUp = unchecked ((System.Int32)(257)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WM_SYSKEYDOWN</unmanaged>
        /// <unmanaged-short>WM_SYSKEYDOWN</unmanaged-short>
        SystemKeyDown = unchecked ((System.Int32)(260)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WM_SYSKEYUP</unmanaged>
        /// <unmanaged-short>WM_SYSKEYUP</unmanaged-short>
        SystemKeyUp = unchecked ((System.Int32)(261)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WM_KEYLAST</unmanaged>
        /// <unmanaged-short>WM_KEYLAST</unmanaged-short>
        KeyLast = unchecked ((System.Int32)(265)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WM_IME_KEYLAST</unmanaged>
        /// <unmanaged-short>WM_IME_KEYLAST</unmanaged-short>
        ImeKeyLast = unchecked ((System.Int32)(271)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WM_IME_KEYDOWN</unmanaged>
        /// <unmanaged-short>WM_IME_KEYDOWN</unmanaged-short>
        ImeKeyDown = unchecked ((System.Int32)(656)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WM_IME_KEYUP</unmanaged>
        /// <unmanaged-short>WM_IME_KEYUP</unmanaged-short>
        ImeKeyUp = unchecked ((System.Int32)(657)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>WM_HOTKEY</unmanaged>
        /// <unmanaged-short>WM_HOTKEY</unmanaged-short>
        HotKey = unchecked ((System.Int32)(786))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>RAW_MOUSE_BUTTON_FLAGS</unmanaged>
    /// <unmanaged-short>RAW_MOUSE_BUTTON_FLAGS</unmanaged-short>
    public enum MouseButtonFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_LEFT_BUTTON_DOWN</unmanaged>
        /// <unmanaged-short>RI_MOUSE_LEFT_BUTTON_DOWN</unmanaged-short>
        LeftButtonDown = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_LEFT_BUTTON_UP</unmanaged>
        /// <unmanaged-short>RI_MOUSE_LEFT_BUTTON_UP</unmanaged-short>
        LeftButtonUp = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_RIGHT_BUTTON_DOWN</unmanaged>
        /// <unmanaged-short>RI_MOUSE_RIGHT_BUTTON_DOWN</unmanaged-short>
        RightButtonDown = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_RIGHT_BUTTON_UP</unmanaged>
        /// <unmanaged-short>RI_MOUSE_RIGHT_BUTTON_UP</unmanaged-short>
        RightButtonUp = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_MIDDLE_BUTTON_DOWN</unmanaged>
        /// <unmanaged-short>RI_MOUSE_MIDDLE_BUTTON_DOWN</unmanaged-short>
        MiddleButtonDown = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_MIDDLE_BUTTON_UP</unmanaged>
        /// <unmanaged-short>RI_MOUSE_MIDDLE_BUTTON_UP</unmanaged-short>
        MiddleButtonUp = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_BUTTON_1_DOWN</unmanaged>
        /// <unmanaged-short>RI_MOUSE_BUTTON_1_DOWN</unmanaged-short>
        Button1Down = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_BUTTON_1_UP</unmanaged>
        /// <unmanaged-short>RI_MOUSE_BUTTON_1_UP</unmanaged-short>
        Button1Up = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_BUTTON_2_DOWN</unmanaged>
        /// <unmanaged-short>RI_MOUSE_BUTTON_2_DOWN</unmanaged-short>
        Button2Down = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_BUTTON_2_UP</unmanaged>
        /// <unmanaged-short>RI_MOUSE_BUTTON_2_UP</unmanaged-short>
        Button2Up = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_BUTTON_3_DOWN</unmanaged>
        /// <unmanaged-short>RI_MOUSE_BUTTON_3_DOWN</unmanaged-short>
        Button3Down = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_BUTTON_3_UP</unmanaged>
        /// <unmanaged-short>RI_MOUSE_BUTTON_3_UP</unmanaged-short>
        Button3Up = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_BUTTON_4_DOWN</unmanaged>
        /// <unmanaged-short>RI_MOUSE_BUTTON_4_DOWN</unmanaged-short>
        Button4Down = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_BUTTON_4_UP</unmanaged>
        /// <unmanaged-short>RI_MOUSE_BUTTON_4_UP</unmanaged-short>
        Button4Up = unchecked ((System.Int32)(128)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_BUTTON_5_DOWN</unmanaged>
        /// <unmanaged-short>RI_MOUSE_BUTTON_5_DOWN</unmanaged-short>
        Button5Down = unchecked ((System.Int32)(256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_BUTTON_5_UP</unmanaged>
        /// <unmanaged-short>RI_MOUSE_BUTTON_5_UP</unmanaged-short>
        Button5Up = unchecked ((System.Int32)(512)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_WHEEL</unmanaged>
        /// <unmanaged-short>RI_MOUSE_WHEEL</unmanaged-short>
        MouseWheel = unchecked ((System.Int32)(1024)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_MOUSE_HWHEEL</unmanaged>
        /// <unmanaged-short>RI_MOUSE_HWHEEL</unmanaged-short>
        Hwheel = unchecked ((System.Int32)(2048)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>RAW_MOUSE_MODE</unmanaged>
    /// <unmanaged-short>RAW_MOUSE_MODE</unmanaged-short>
    public enum MouseMode : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>MOUSE_MOVE_RELATIVE</unmanaged>
        /// <unmanaged-short>MOUSE_MOVE_RELATIVE</unmanaged-short>
        MoveRelative = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>MOUSE_MOVE_ABSOLUTE</unmanaged>
        /// <unmanaged-short>MOUSE_MOVE_ABSOLUTE</unmanaged-short>
        MoveAbsolute = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>MOUSE_VIRTUAL_DESKTOP</unmanaged>
        /// <unmanaged-short>MOUSE_VIRTUAL_DESKTOP</unmanaged-short>
        VirtualDesktop = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>MOUSE_ATTRIBUTES_CHANGED</unmanaged>
        /// <unmanaged-short>MOUSE_ATTRIBUTES_CHANGED</unmanaged-short>
        AttributesChanged = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>MOUSE_MOVE_NOCOALESCE</unmanaged>
        /// <unmanaged-short>MOUSE_MOVE_NOCOALESCE</unmanaged-short>
        MoveNoCoalesce = unchecked ((System.Int32)(8))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>RAW_INPUT_DATA_TYPE</unmanaged>
    /// <unmanaged-short>RAW_INPUT_DATA_TYPE</unmanaged-short>
    internal enum RawInputDataType : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RID_INPUT</unmanaged>
        /// <unmanaged-short>RID_INPUT</unmanaged-short>
        Input = unchecked ((System.Int32)(268435459)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RID_HEADER</unmanaged>
        /// <unmanaged-short>RID_HEADER</unmanaged-short>
        Header = unchecked ((System.Int32)(268435461))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>RAW_INPUT_DEVICE_INFO_TYPE</unmanaged>
    /// <unmanaged-short>RAW_INPUT_DEVICE_INFO_TYPE</unmanaged-short>
    internal enum RawInputDeviceInfoType : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIDI_PREPARSEDDATA</unmanaged>
        /// <unmanaged-short>RIDI_PREPARSEDDATA</unmanaged-short>
        PreparsedData = unchecked ((System.Int32)(536870917)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIDI_DEVICENAME</unmanaged>
        /// <unmanaged-short>RIDI_DEVICENAME</unmanaged-short>
        DeviceName = unchecked ((System.Int32)(536870919)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RIDI_DEVICEINFO</unmanaged>
        /// <unmanaged-short>RIDI_DEVICEINFO</unmanaged-short>
        DeviceInfo = unchecked ((System.Int32)(536870923))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>RAW_SCAN_CODE_FLAGS</unmanaged>
    /// <unmanaged-short>RAW_SCAN_CODE_FLAGS</unmanaged-short>
    public enum ScanCodeFlags : System.Int16
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_KEY_MAKE</unmanaged>
        /// <unmanaged-short>RI_KEY_MAKE</unmanaged-short>
        Make = unchecked ((System.Int16)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_KEY_BREAK</unmanaged>
        /// <unmanaged-short>RI_KEY_BREAK</unmanaged-short>
        Break = unchecked ((System.Int16)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_KEY_E0</unmanaged>
        /// <unmanaged-short>RI_KEY_E0</unmanaged-short>
        E0 = unchecked ((System.Int16)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>RI_KEY_E1</unmanaged>
        /// <unmanaged-short>RI_KEY_E1</unmanaged-short>
        E1 = unchecked ((System.Int16)(4))}
}