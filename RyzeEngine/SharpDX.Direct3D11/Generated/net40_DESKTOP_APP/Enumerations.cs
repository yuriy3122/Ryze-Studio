// <auto-generated/>

namespace SharpDX.Direct3D11
{
    [System.FlagsAttribute]
    /// <summary>
    /// <p>Optional flags that control the behavior of <strong>ID3D11DeviceContext::GetData</strong>.</p>
    /// </summary>
    /// <doc-id>ff476084</doc-id>
    /// <unmanaged>D3D11_ASYNC_GETDATA_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_ASYNC_GETDATA_FLAG</unmanaged-short>
    public enum AsynchronousFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476084</doc-id>
        /// <unmanaged>D3D11_ASYNC_GETDATA_DONOTFLUSH</unmanaged>
        /// <unmanaged-short>D3D11_ASYNC_GETDATA_DONOTFLUSH</unmanaged-short>
        DoNotFlush = unchecked ((System.Int32)(1)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Specifies the type of Microsoft Direct3D authenticated channel. </p>
    /// </summary>
    /// <doc-id>hh447599</doc-id>
    /// <unmanaged>D3D11_AUTHENTICATED_CHANNEL_TYPE</unmanaged>
    /// <unmanaged-short>D3D11_AUTHENTICATED_CHANNEL_TYPE</unmanaged-short>
    public enum AuthenticatedChannelType : System.Int32
    {
        /// <summary>
        /// <dd> <p>Direct3D?11 channel. This channel provides communication with the Direct3D runtime. </p> </dd>
        /// </summary>
        /// <doc-id>hh447599</doc-id>
        /// <unmanaged>D3D11_AUTHENTICATED_CHANNEL_D3D11</unmanaged>
        /// <unmanaged-short>D3D11_AUTHENTICATED_CHANNEL_D3D11</unmanaged-short>
        D3D11 = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Software driver channel. This channel provides communication with a driver that implements content protection mechanisms in software.</p> </dd>
        /// </summary>
        /// <doc-id>hh447599</doc-id>
        /// <unmanaged>D3D11_AUTHENTICATED_CHANNEL_DRIVER_SOFTWARE</unmanaged>
        /// <unmanaged-short>D3D11_AUTHENTICATED_CHANNEL_DRIVER_SOFTWARE</unmanaged-short>
        DriverSoftware = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Hardware driver channel. This channel provides communication with a driver that implements content protection mechanisms in the GPU hardware. </p> </dd>
        /// </summary>
        /// <doc-id>hh447599</doc-id>
        /// <unmanaged>D3D11_AUTHENTICATED_CHANNEL_DRIVER_HARDWARE</unmanaged>
        /// <unmanaged-short>D3D11_AUTHENTICATED_CHANNEL_DRIVER_HARDWARE</unmanaged-short>
        DriverHardware = unchecked ((System.Int32)(3))}

    /// <summary>
    /// <p>Specifies the type of process that is identified in the <strong><see cref = "SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessOutput"/></strong> structure.</p>
    /// </summary>
    /// <doc-id>hh447606</doc-id>
    /// <unmanaged>D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE</unmanaged>
    /// <unmanaged-short>D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE</unmanaged-short>
    public enum AuthenticatedProcessIdentifierType : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>hh447606</doc-id>
        /// <unmanaged>D3D11_PROCESSIDTYPE_UNKNOWN</unmanaged>
        /// <unmanaged-short>D3D11_PROCESSIDTYPE_UNKNOWN</unmanaged-short>
        ProcessidtypeUnknown = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>hh447606</doc-id>
        /// <unmanaged>D3D11_PROCESSIDTYPE_DWM</unmanaged>
        /// <unmanaged-short>D3D11_PROCESSIDTYPE_DWM</unmanaged-short>
        ProcessidtypeDwm = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>hh447606</doc-id>
        /// <unmanaged>D3D11_PROCESSIDTYPE_HANDLE</unmanaged>
        /// <unmanaged-short>D3D11_PROCESSIDTYPE_HANDLE</unmanaged-short>
        ProcessidtypeHandle = unchecked ((System.Int32)(2))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Identifies how to bind a resource to the pipeline.</p>
    /// </summary>
    /// <remarks>
    /// <p>In general, binding flags can be combined using a logical OR (except the constant-buffer flag); however, you should use a single flag to allow the device to optimize the resource usage.</p><p>This enumeration is used by a:</p><ul> <li> <strong>Buffer description</strong> when creating a buffer.</li> <li>Texture description when creating a texture (see <strong><see cref = "SharpDX.Direct3D11.Texture1DDescription"/></strong> or <strong><see cref = "SharpDX.Direct3D11.Texture2DDescription"/></strong> or <strong><see cref = "SharpDX.Direct3D11.Texture3DDescription"/></strong>).</li> </ul><p>A shader-resource buffer is NOT a constant buffer; rather, it is a texture or buffer resource that is bound to a shader, that contains texture or buffer data (it is not limited to a single element type in the buffer). A shader-resource buffer is created with the D3D11_BIND_SHADER_RESOURCE flag and is bound to the pipeline using one of these APIs: <strong>ID3D11DeviceContext::GSSetShaderResources</strong>, <strong>ID3D11DeviceContext::PSSetShaderResources</strong>, or <strong>ID3D11DeviceContext::VSSetShaderResources</strong>. Furthermore, a shader-resource buffer cannot use the <strong>D3D11_MAP_WRITE_NO_OVERWRITE</strong> flag.</p><strong>Note</strong>??The Direct3D 11.1 runtime, which is available starting with Windows?8, enables  mapping dynamic constant buffers and shader resource views (SRVs) of dynamic buffers with <strong>D3D11_MAP_WRITE_NO_OVERWRITE</strong>.  The Direct3D 11 and earlier runtimes limited mapping to vertex or index buffers. To determine if a Direct3D device supports these features, call <strong>ID3D11Device::CheckFeatureSupport</strong> with <strong>D3D11_FEATURE_D3D11_OPTIONS</strong>. <strong>CheckFeatureSupport</strong> fills members of a <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options"/></strong> structure with the device's features. The relevant members here are <strong>MapNoOverwriteOnDynamicConstantBuffer</strong> and <strong>MapNoOverwriteOnDynamicBufferSRV</strong>.?
    /// </remarks>
    /// <doc-id>ff476085</doc-id>
    /// <unmanaged>D3D11_BIND_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_BIND_FLAG</unmanaged-short>
    public enum BindFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>Bind a buffer as a vertex buffer to the input-assembler stage.</p> </dd>
        /// </summary>
        /// <doc-id>ff476085</doc-id>
        /// <unmanaged>D3D11_BIND_VERTEX_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_BIND_VERTEX_BUFFER</unmanaged-short>
        VertexBuffer = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Bind a buffer as an index buffer to the input-assembler stage.</p> </dd>
        /// </summary>
        /// <doc-id>ff476085</doc-id>
        /// <unmanaged>D3D11_BIND_INDEX_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_BIND_INDEX_BUFFER</unmanaged-short>
        IndexBuffer = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Bind a buffer as a constant buffer to a shader stage; this flag may NOT be combined with any other bind flag.</p> </dd>
        /// </summary>
        /// <doc-id>ff476085</doc-id>
        /// <unmanaged>D3D11_BIND_CONSTANT_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_BIND_CONSTANT_BUFFER</unmanaged-short>
        ConstantBuffer = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Bind a buffer or texture to a shader stage; this flag cannot be used with the <strong>D3D11_MAP_WRITE_NO_OVERWRITE</strong> flag.</p> <strong>Note</strong>??The Direct3D 11.1 runtime, which is available starting with Windows?8, enables  mapping dynamic constant buffers and shader resource views (SRVs) of dynamic buffers with <strong>D3D11_MAP_WRITE_NO_OVERWRITE</strong>.  The Direct3D 11 and earlier runtimes limited mapping to vertex or index buffers. To determine if a Direct3D device supports these features, call <strong>ID3D11Device::CheckFeatureSupport</strong> with <strong>D3D11_FEATURE_D3D11_OPTIONS</strong>. <strong>CheckFeatureSupport</strong> fills members of a <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options"/></strong> structure with the device's features. The relevant members here are <strong>MapNoOverwriteOnDynamicConstantBuffer</strong> and <strong>MapNoOverwriteOnDynamicBufferSRV</strong>. ? </dd>
        /// </summary>
        /// <doc-id>ff476085</doc-id>
        /// <unmanaged>D3D11_BIND_SHADER_RESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_BIND_SHADER_RESOURCE</unmanaged-short>
        ShaderResource = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p>Bind an output buffer for the stream-output stage.</p> </dd>
        /// </summary>
        /// <doc-id>ff476085</doc-id>
        /// <unmanaged>D3D11_BIND_STREAM_OUTPUT</unmanaged>
        /// <unmanaged-short>D3D11_BIND_STREAM_OUTPUT</unmanaged-short>
        StreamOutput = unchecked ((System.Int32)(16)),
        /// <summary>
        /// <dd> <p>Bind a texture as a render target for the output-merger stage.</p> </dd>
        /// </summary>
        /// <doc-id>ff476085</doc-id>
        /// <unmanaged>D3D11_BIND_RENDER_TARGET</unmanaged>
        /// <unmanaged-short>D3D11_BIND_RENDER_TARGET</unmanaged-short>
        RenderTarget = unchecked ((System.Int32)(32)),
        /// <summary>
        /// <dd> <p>Bind a texture as a depth-stencil target for the output-merger stage.</p> </dd>
        /// </summary>
        /// <doc-id>ff476085</doc-id>
        /// <unmanaged>D3D11_BIND_DEPTH_STENCIL</unmanaged>
        /// <unmanaged-short>D3D11_BIND_DEPTH_STENCIL</unmanaged-short>
        DepthStencil = unchecked ((System.Int32)(64)),
        /// <summary>
        /// <dd> <p>Bind an unordered access resource.</p> </dd>
        /// </summary>
        /// <doc-id>ff476085</doc-id>
        /// <unmanaged>D3D11_BIND_UNORDERED_ACCESS</unmanaged>
        /// <unmanaged-short>D3D11_BIND_UNORDERED_ACCESS</unmanaged-short>
        UnorderedAccess = unchecked ((System.Int32)(128)),
        /// <summary>
        /// <dd> <p>Set this flag to indicate that a  2D texture is used to receive output from the decoder API. The common way to create resources for a decoder output is by calling the  <strong>ID3D11Device::CreateTexture2D</strong> method to create an array of 2D  textures. However, you cannot use texture arrays that are created with this flag in calls to <strong>ID3D11Device::CreateShaderResourceView</strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476085</doc-id>
        /// <unmanaged>D3D11_BIND_DECODER</unmanaged>
        /// <unmanaged-short>D3D11_BIND_DECODER</unmanaged-short>
        Decoder = unchecked ((System.Int32)(512)),
        /// <summary>
        /// <dd> <p>Set this flag to indicate that a  2D texture is used to receive input from the video encoder API. The common way to create resources for a video encoder is by calling the  <strong>ID3D11Device::CreateTexture2D</strong> method to create an array of 2D  textures. However, you cannot use texture arrays that are created with this flag in calls to <strong>ID3D11Device::CreateShaderResourceView</strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476085</doc-id>
        /// <unmanaged>D3D11_BIND_VIDEO_ENCODER</unmanaged>
        /// <unmanaged-short>D3D11_BIND_VIDEO_ENCODER</unmanaged-short>
        VideoEncoder = unchecked ((System.Int32)(1024)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>RGB or alpha blending operation.</p>
    /// </summary>
    /// <remarks>
    /// <p>The runtime implements RGB blending and alpha blending separately. Therefore, blend state requires separate blend operations for RGB data and alpha data. These blend operations are specified in a <strong>blend description</strong>. The two sources ?source 1 and source 2? are shown in the blending block diagram.</p><p>Blend state is used by the output-merger stage to determine how to blend together two RGB pixel values and two alpha values. The two RGB pixel values and two alpha values are the RGB pixel value and alpha value that the pixel shader outputs and the RGB pixel value and alpha value already in the output render target. The <strong>blend option</strong> controls the data source that the blending stage uses to modulate values for the pixel shader, render target, or both. The <strong>blend operation</strong> controls how the blending stage mathematically combines these modulated values.</p>
    /// </remarks>
    /// <doc-id>ff476088</doc-id>
    /// <unmanaged>D3D11_BLEND_OP</unmanaged>
    /// <unmanaged-short>D3D11_BLEND_OP</unmanaged-short>
    public enum BlendOperation : System.Int32
    {
        /// <summary>
        /// <dd> <p>Add source 1 and source 2.</p> </dd>
        /// </summary>
        /// <doc-id>ff476088</doc-id>
        /// <unmanaged>D3D11_BLEND_OP_ADD</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_OP_ADD</unmanaged-short>
        Add = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Subtract source 1 from source 2.</p> </dd>
        /// </summary>
        /// <doc-id>ff476088</doc-id>
        /// <unmanaged>D3D11_BLEND_OP_SUBTRACT</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_OP_SUBTRACT</unmanaged-short>
        Subtract = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Subtract source 2 from source 1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476088</doc-id>
        /// <unmanaged>D3D11_BLEND_OP_REV_SUBTRACT</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_OP_REV_SUBTRACT</unmanaged-short>
        ReverseSubtract = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>Find the minimum of source 1 and source 2.</p> </dd>
        /// </summary>
        /// <doc-id>ff476088</doc-id>
        /// <unmanaged>D3D11_BLEND_OP_MIN</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_OP_MIN</unmanaged-short>
        Minimum = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Find the maximum of source 1 and source 2.</p> </dd>
        /// </summary>
        /// <doc-id>ff476088</doc-id>
        /// <unmanaged>D3D11_BLEND_OP_MAX</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_OP_MAX</unmanaged-short>
        Maximum = unchecked ((System.Int32)(5))}

    /// <summary>
    /// <p>Blend factors, which modulate values for the pixel shader and render target.</p>
    /// </summary>
    /// <remarks>
    /// <p>Blend operations are specified in a <strong>blend description</strong>.</p>
    /// </remarks>
    /// <doc-id>ff476086</doc-id>
    /// <unmanaged>D3D11_BLEND</unmanaged>
    /// <unmanaged-short>D3D11_BLEND</unmanaged-short>
    public enum BlendOption : System.Int32
    {
        /// <summary>
        /// <dd> <p>The blend factor is (0, 0, 0, 0). No pre-blend operation.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_ZERO</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_ZERO</unmanaged-short>
        Zero = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The blend factor is (1, 1, 1, 1). No pre-blend operation.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_ONE</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_ONE</unmanaged-short>
        One = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>The blend factor is (R?, G?, B?, A?), that is color data (RGB) from a pixel shader. No pre-blend operation.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_SRC_COLOR</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_SRC_COLOR</unmanaged-short>
        SourceColor = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>The blend factor is (1 - R?, 1 - G?, 1 - B?, 1 - A?), that is color data (RGB) from a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_INV_SRC_COLOR</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_INV_SRC_COLOR</unmanaged-short>
        InverseSourceColor = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>The blend factor is (A?, A?, A?, A?), that is alpha data (A) from a pixel shader. No pre-blend operation.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_SRC_ALPHA</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_SRC_ALPHA</unmanaged-short>
        SourceAlpha = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p>The blend factor is ( 1 - A?, 1 - A?, 1 - A?, 1 - A?), that is alpha data (A) from a pixel shader. The pre-blend operation inverts the data, generating 1 - A.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_INV_SRC_ALPHA</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_INV_SRC_ALPHA</unmanaged-short>
        InverseSourceAlpha = unchecked ((System.Int32)(6)),
        /// <summary>
        /// <dd> <p>The blend factor is (Ad Ad Ad Ad), that is alpha data from a render target. No pre-blend operation.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_DEST_ALPHA</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_DEST_ALPHA</unmanaged-short>
        DestinationAlpha = unchecked ((System.Int32)(7)),
        /// <summary>
        /// <dd> <p>The blend factor is (1 - Ad 1 - Ad 1 - Ad 1 - Ad), that is alpha data from a render target. The pre-blend operation inverts the data, generating 1 - A.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_INV_DEST_ALPHA</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_INV_DEST_ALPHA</unmanaged-short>
        InverseDestinationAlpha = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p>The blend factor is (Rd, Gd, Bd, Ad), that is color data from a render target. No pre-blend operation.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_DEST_COLOR</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_DEST_COLOR</unmanaged-short>
        DestinationColor = unchecked ((System.Int32)(9)),
        /// <summary>
        /// <dd> <p>The blend factor is (1 - Rd, 1 - Gd, 1 - Bd, 1 - Ad), that is color data from a render target. The pre-blend operation inverts the data, generating 1 - RGB.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_INV_DEST_COLOR</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_INV_DEST_COLOR</unmanaged-short>
        InverseDestinationColor = unchecked ((System.Int32)(10)),
        /// <summary>
        /// <dd> <p>The blend factor is (f, f, f, 1); where f = min(A?, 1 - Ad). The pre-blend operation clamps the data to 1 or less. 
        /// </p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_SRC_ALPHA_SAT</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_SRC_ALPHA_SAT</unmanaged-short>
        SourceAlphaSaturate = unchecked ((System.Int32)(11)),
        /// <summary>
        /// <dd> <p>The blend factor is the blend factor set with <strong>ID3D11DeviceContext::OMSetBlendState</strong>. No pre-blend operation.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_BLEND_FACTOR</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_BLEND_FACTOR</unmanaged-short>
        BlendFactor = unchecked ((System.Int32)(14)),
        /// <summary>
        /// <dd> <p>The blend factor is the blend factor set with <strong>ID3D11DeviceContext::OMSetBlendState</strong>. The pre-blend operation inverts the blend factor, generating 1 - blend_factor.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_INV_BLEND_FACTOR</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_INV_BLEND_FACTOR</unmanaged-short>
        InverseBlendFactor = unchecked ((System.Int32)(15)),
        /// <summary>
        /// <dd> <p>The blend factor is data sources both as color data output by a pixel shader. There is no pre-blend operation. This blend factor supports dual-source color blending.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_SRC1_COLOR</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_SRC1_COLOR</unmanaged-short>
        SecondarySourceColor = unchecked ((System.Int32)(16)),
        /// <summary>
        /// <dd> <p>The blend factor is data sources both as color data output by a pixel shader. The pre-blend operation inverts the data, generating 1 - RGB. This blend factor supports dual-source color blending.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_INV_SRC1_COLOR</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_INV_SRC1_COLOR</unmanaged-short>
        InverseSecondarySourceColor = unchecked ((System.Int32)(17)),
        /// <summary>
        /// <dd> <p>The blend factor is data sources as alpha data output by a pixel shader. There is no pre-blend operation. This blend factor supports dual-source color blending.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_SRC1_ALPHA</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_SRC1_ALPHA</unmanaged-short>
        SecondarySourceAlpha = unchecked ((System.Int32)(18)),
        /// <summary>
        /// <dd> <p>The blend factor is data sources as alpha data output by a pixel shader. The pre-blend operation inverts the data, generating 1 - A. This blend factor supports dual-source color blending.</p> </dd>
        /// </summary>
        /// <doc-id>ff476086</doc-id>
        /// <unmanaged>D3D11_BLEND_INV_SRC1_ALPHA</unmanaged>
        /// <unmanaged-short>D3D11_BLEND_INV_SRC1_ALPHA</unmanaged-short>
        InverseSecondarySourceAlpha = unchecked ((System.Int32)(19))}

    /// <summary>
    /// <p>Specifies the type of I/O bus that is used by the graphics adapter.</p>
    /// </summary>
    /// <doc-id>hh447628</doc-id>
    /// <unmanaged>D3D11_BUS_TYPE</unmanaged>
    /// <unmanaged-short>D3D11_BUS_TYPE</unmanaged-short>
    public enum BusType : System.Int32
    {
        /// <summary>
        /// <dd> <p>Indicates a type of bus other than the types listed here.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447628</doc-id>
        /// <unmanaged>D3D11_BUS_TYPE_OTHER</unmanaged>
        /// <unmanaged-short>D3D11_BUS_TYPE_OTHER</unmanaged-short>
        TypeOther = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>PCI bus.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447628</doc-id>
        /// <unmanaged>D3D11_BUS_TYPE_PCI</unmanaged>
        /// <unmanaged-short>D3D11_BUS_TYPE_PCI</unmanaged-short>
        TypePci = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>PCI-X bus.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447628</doc-id>
        /// <unmanaged>D3D11_BUS_TYPE_PCIX</unmanaged>
        /// <unmanaged-short>D3D11_BUS_TYPE_PCIX</unmanaged-short>
        TypePcix = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>PCI Express bus.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447628</doc-id>
        /// <unmanaged>D3D11_BUS_TYPE_PCIEXPRESS</unmanaged>
        /// <unmanaged-short>D3D11_BUS_TYPE_PCIEXPRESS</unmanaged-short>
        TypePciexpress = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>Accelerated Graphics Port (AGP) bus.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447628</doc-id>
        /// <unmanaged>D3D11_BUS_TYPE_AGP</unmanaged>
        /// <unmanaged-short>D3D11_BUS_TYPE_AGP</unmanaged-short>
        TypeAgp = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>The implementation for the graphics adapter is in a motherboard chipset's north bridge. This flag implies that data never goes over an expansion bus (such as PCI or AGP) when it is transferred from main memory to the graphics adapter.</p> </dd>
        /// </summary>
        /// <doc-id>hh447628</doc-id>
        /// <unmanaged>D3D11_BUS_IMPL_MODIFIER_INSIDE_OF_CHIPSET</unmanaged>
        /// <unmanaged-short>D3D11_BUS_IMPL_MODIFIER_INSIDE_OF_CHIPSET</unmanaged-short>
        ImplModifierInsideOfChipset = unchecked ((System.Int32)(65536)),
        /// <summary>
        /// <dd> <p>Indicates that the graphics adapter is connected to a motherboard chipset's north bridge by tracks on the motherboard, and all of the graphics adapter's chips are soldered to the motherboard. This flag implies that data never goes over an expansion bus (such as PCI or AGP) when it is transferred from main memory to the graphics adapter.</p> </dd>
        /// </summary>
        /// <doc-id>hh447628</doc-id>
        /// <unmanaged>D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP</unmanaged>
        /// <unmanaged-short>D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP</unmanaged-short>
        ImplModifierTracksOnMotherBoardToChip = unchecked ((System.Int32)(131072)),
        /// <summary>
        /// <dd> <p>The graphics adapter is connected to a motherboard chipset's north bridge by tracks on the motherboard, and all of the graphics adapter's chips are connected through sockets to the motherboard.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447628</doc-id>
        /// <unmanaged>D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET</unmanaged>
        /// <unmanaged-short>D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET</unmanaged-short>
        ImplModifierTracksOnMotherBoardToSocket = unchecked ((System.Int32)(196608)),
        /// <summary>
        /// <dd> <p>The graphics adapter is connected to the motherboard through a daughterboard connector.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447628</doc-id>
        /// <unmanaged>D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR</unmanaged>
        /// <unmanaged-short>D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR</unmanaged-short>
        ImplModifierDaughterBoardConnector = unchecked ((System.Int32)(262144)),
        /// <summary>
        /// <dd> <p>The graphics adapter is connected to the motherboard through a daughterboard connector, and the graphics adapter is inside an enclosure that is not user accessible.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447628</doc-id>
        /// <unmanaged>D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE</unmanaged>
        /// <unmanaged-short>D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE</unmanaged-short>
        ImplModifierDaughterBoardConnectorInsideOfNuae = unchecked ((System.Int32)(327680)),
        /// <summary>
        /// <dd> <p>One of the <strong>D3D11_BUS_IMPL_MODIFIER_Xxx</strong> flags is set.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447628</doc-id>
        /// <unmanaged>D3D11_BUS_IMPL_MODIFIER_NON_STANDARD</unmanaged>
        /// <unmanaged-short>D3D11_BUS_IMPL_MODIFIER_NON_STANDARD</unmanaged-short>
        ImplModifierNonStandard = unchecked ((System.Int32)(-2147483648))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Identifies how to check multisample quality levels.</p>
    /// </summary>
    /// <doc-id>dn280374</doc-id>
    /// <unmanaged>D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_FLAG</unmanaged-short>
    public enum CheckMultisampleQualityLevelsFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>Indicates to check the multisample quality levels of a tiled resource.</p> </dd>
        /// </summary>
        /// <doc-id>dn280374</doc-id>
        /// <unmanaged>D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_TILED_RESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_TILED_RESOURCE</unmanaged-short>
        TiledResource = unchecked ((System.Int32)(1)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Identify which components of each pixel of a render target are writable during blending.</p>
    /// </summary>
    /// <remarks>
    /// <p>These flags can be combined with a bitwise OR.</p>
    /// </remarks>
    /// <doc-id>ff476100</doc-id>
    /// <unmanaged>D3D11_COLOR_WRITE_ENABLE</unmanaged>
    /// <unmanaged-short>D3D11_COLOR_WRITE_ENABLE</unmanaged-short>
    public enum ColorWriteMaskFlags : System.Byte
    {
        /// <summary>
        /// <dd> <p>Allow data to be stored in the red component.</p> </dd>
        /// </summary>
        /// <doc-id>ff476100</doc-id>
        /// <unmanaged>D3D11_COLOR_WRITE_ENABLE_RED</unmanaged>
        /// <unmanaged-short>D3D11_COLOR_WRITE_ENABLE_RED</unmanaged-short>
        Red = unchecked ((System.Byte)(1)),
        /// <summary>
        /// <dd> <p>Allow data to be stored in the green component.</p> </dd>
        /// </summary>
        /// <doc-id>ff476100</doc-id>
        /// <unmanaged>D3D11_COLOR_WRITE_ENABLE_GREEN</unmanaged>
        /// <unmanaged-short>D3D11_COLOR_WRITE_ENABLE_GREEN</unmanaged-short>
        Green = unchecked ((System.Byte)(2)),
        /// <summary>
        /// <dd> <p>Allow data to be stored in the blue component.</p> </dd>
        /// </summary>
        /// <doc-id>ff476100</doc-id>
        /// <unmanaged>D3D11_COLOR_WRITE_ENABLE_BLUE</unmanaged>
        /// <unmanaged-short>D3D11_COLOR_WRITE_ENABLE_BLUE</unmanaged-short>
        Blue = unchecked ((System.Byte)(4)),
        /// <summary>
        /// <dd> <p>Allow data to be stored in the alpha component.</p> </dd>
        /// </summary>
        /// <doc-id>ff476100</doc-id>
        /// <unmanaged>D3D11_COLOR_WRITE_ENABLE_ALPHA</unmanaged>
        /// <unmanaged-short>D3D11_COLOR_WRITE_ENABLE_ALPHA</unmanaged-short>
        Alpha = unchecked ((System.Byte)(8)),
        /// <summary>
        /// <dd> <p>Allow data to be stored in all components.</p> </dd>
        /// </summary>
        /// <doc-id>ff476100</doc-id>
        /// <unmanaged>D3D11_COLOR_WRITE_ENABLE_ALL</unmanaged>
        /// <unmanaged-short>D3D11_COLOR_WRITE_ENABLE_ALL</unmanaged-short>
        All = unchecked ((System.Byte)(15))}

    /// <summary>
    /// <p>Comparison options.</p>
    /// </summary>
    /// <remarks>
    /// <p>A comparison option determines whether how the runtime compares source (new) data against destination (existing) data before storing the new data. The comparison option is declared in a description before an object is created. The API allows you to set a comparison option for a depth-stencil buffer (see <strong><see cref = "SharpDX.Direct3D11.DepthStencilStateDescription"/></strong>), depth-stencil operations (see <strong><see cref = "SharpDX.Direct3D11.DepthStencilOperationDescription"/></strong>), or sampler state (see <strong><see cref = "SharpDX.Direct3D11.SamplerStateDescription"/></strong>).</p>
    /// </remarks>
    /// <doc-id>ff476101</doc-id>
    /// <unmanaged>D3D11_COMPARISON_FUNC</unmanaged>
    /// <unmanaged-short>D3D11_COMPARISON_FUNC</unmanaged-short>
    public enum Comparison : System.Int32
    {
        /// <summary>
        /// <dd> <p>Never pass the comparison.</p> </dd>
        /// </summary>
        /// <doc-id>ff476101</doc-id>
        /// <unmanaged>D3D11_COMPARISON_NEVER</unmanaged>
        /// <unmanaged-short>D3D11_COMPARISON_NEVER</unmanaged-short>
        Never = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>If the source data is less than the destination data, the comparison passes.</p> </dd>
        /// </summary>
        /// <doc-id>ff476101</doc-id>
        /// <unmanaged>D3D11_COMPARISON_LESS</unmanaged>
        /// <unmanaged-short>D3D11_COMPARISON_LESS</unmanaged-short>
        Less = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>If the source data is equal to the destination data, the comparison passes.</p> </dd>
        /// </summary>
        /// <doc-id>ff476101</doc-id>
        /// <unmanaged>D3D11_COMPARISON_EQUAL</unmanaged>
        /// <unmanaged-short>D3D11_COMPARISON_EQUAL</unmanaged-short>
        Equal = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>If the source data is less than or equal to the destination data, the comparison passes.</p> </dd>
        /// </summary>
        /// <doc-id>ff476101</doc-id>
        /// <unmanaged>D3D11_COMPARISON_LESS_EQUAL</unmanaged>
        /// <unmanaged-short>D3D11_COMPARISON_LESS_EQUAL</unmanaged-short>
        LessEqual = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>If the source data is greater than the destination data, the comparison passes.</p> </dd>
        /// </summary>
        /// <doc-id>ff476101</doc-id>
        /// <unmanaged>D3D11_COMPARISON_GREATER</unmanaged>
        /// <unmanaged-short>D3D11_COMPARISON_GREATER</unmanaged-short>
        Greater = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p>If the source data is not equal to the destination data, the comparison passes.</p> </dd>
        /// </summary>
        /// <doc-id>ff476101</doc-id>
        /// <unmanaged>D3D11_COMPARISON_NOT_EQUAL</unmanaged>
        /// <unmanaged-short>D3D11_COMPARISON_NOT_EQUAL</unmanaged-short>
        NotEqual = unchecked ((System.Int32)(6)),
        /// <summary>
        /// <dd> <p>If the source data is greater than or equal to the destination data, the comparison passes.</p> </dd>
        /// </summary>
        /// <doc-id>ff476101</doc-id>
        /// <unmanaged>D3D11_COMPARISON_GREATER_EQUAL</unmanaged>
        /// <unmanaged-short>D3D11_COMPARISON_GREATER_EQUAL</unmanaged-short>
        GreaterEqual = unchecked ((System.Int32)(7)),
        /// <summary>
        /// <dd> <p>Always pass the comparison.</p> </dd>
        /// </summary>
        /// <doc-id>ff476101</doc-id>
        /// <unmanaged>D3D11_COMPARISON_ALWAYS</unmanaged>
        /// <unmanaged-short>D3D11_COMPARISON_ALWAYS</unmanaged-short>
        Always = unchecked ((System.Int32)(8))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p> Unordered resource support options for a compute shader resource (see <strong>ID3D11Device::CheckFeatureSupport</strong>). </p>
    /// </summary>
    /// <doc-id>ff476135</doc-id>
    /// <unmanaged>D3D11_FORMAT_SUPPORT2</unmanaged>
    /// <unmanaged-short>D3D11_FORMAT_SUPPORT2</unmanaged-short>
    public enum ComputeShaderFormatSupport : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476135</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_ADD</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_ADD</unmanaged-short>
        AtomicAdd = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476135</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS</unmanaged-short>
        AtomicBitwiseOperations = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476135</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE</unmanaged-short>
        AtomicCompareStoreOrCompareExchange = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476135</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE</unmanaged-short>
        AtomicExchange = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476135</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX</unmanaged-short>
        AtomicSignedMinimumOrMaximum = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476135</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX</unmanaged-short>
        AtomicUnsignedMinimumOrMaximum = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476135</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_TYPED_LOAD</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_TYPED_LOAD</unmanaged-short>
        TypedLoad = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476135</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_TYPED_STORE</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT2_UAV_TYPED_STORE</unmanaged-short>
        TypedStore = unchecked ((System.Int32)(128)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476135</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP</unmanaged-short>
        OutputMergerLogicOperation = unchecked ((System.Int32)(256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476135</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT2_TILED</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT2_TILED</unmanaged-short>
        Tiled = unchecked ((System.Int32)(512)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476135</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT2_SHAREABLE</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT2_SHAREABLE</unmanaged-short>
        Shareable = unchecked ((System.Int32)(1024)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476135</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY</unmanaged-short>
        MultiplaneOverlay = unchecked ((System.Int32)(16384)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Identifies whether conservative rasterization is on or off.</p>
    /// </summary>
    /// <doc-id>dn859360</doc-id>
    /// <unmanaged>D3D11_CONSERVATIVE_RASTERIZATION_MODE</unmanaged>
    /// <unmanaged-short>D3D11_CONSERVATIVE_RASTERIZATION_MODE</unmanaged-short>
    public enum ConservativeRasterizationMode : System.Int32
    {
        /// <summary>
        /// <dd> <p>Conservative rasterization is off.</p> </dd>
        /// </summary>
        /// <doc-id>dn859360</doc-id>
        /// <unmanaged>D3D11_CONSERVATIVE_RASTERIZATION_MODE_OFF</unmanaged>
        /// <unmanaged-short>D3D11_CONSERVATIVE_RASTERIZATION_MODE_OFF</unmanaged-short>
        Off = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Conservative rasterization is on.</p> </dd>
        /// </summary>
        /// <doc-id>dn859360</doc-id>
        /// <unmanaged>D3D11_CONSERVATIVE_RASTERIZATION_MODE_ON</unmanaged>
        /// <unmanaged-short>D3D11_CONSERVATIVE_RASTERIZATION_MODE_ON</unmanaged-short>
        On = unchecked ((System.Int32)(1))}

    /// <summary>
    /// <p>Specifies if the hardware and driver support conservative rasterization and at what tier level.</p>
    /// </summary>
    /// <doc-id>dn859364</doc-id>
    /// <unmanaged>D3D11_CONSERVATIVE_RASTERIZATION_TIER</unmanaged>
    /// <unmanaged-short>D3D11_CONSERVATIVE_RASTERIZATION_TIER</unmanaged-short>
    public enum ConservativeRasterizationTier : System.Int32
    {
        /// <summary>
        /// <dd> <p>Conservative rasterization isn't supported.</p> </dd>
        /// </summary>
        /// <doc-id>dn859364</doc-id>
        /// <unmanaged>D3D11_CONSERVATIVE_RASTERIZATION_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_CONSERVATIVE_RASTERIZATION_NOT_SUPPORTED</unmanaged-short>
        NotSupported = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Tier_1 conservative rasterization is supported.</p> </dd>
        /// </summary>
        /// <doc-id>dn859364</doc-id>
        /// <unmanaged>D3D11_CONSERVATIVE_RASTERIZATION_TIER_1</unmanaged>
        /// <unmanaged-short>D3D11_CONSERVATIVE_RASTERIZATION_TIER_1</unmanaged-short>
        Tier1 = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Tier_2 conservative rasterization is supported.</p> </dd>
        /// </summary>
        /// <doc-id>dn859364</doc-id>
        /// <unmanaged>D3D11_CONSERVATIVE_RASTERIZATION_TIER_2</unmanaged>
        /// <unmanaged-short>D3D11_CONSERVATIVE_RASTERIZATION_TIER_2</unmanaged-short>
        Tier2 = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Tier_3 conservative rasterization is supported.</p> </dd>
        /// </summary>
        /// <doc-id>dn859364</doc-id>
        /// <unmanaged>D3D11_CONSERVATIVE_RASTERIZATION_TIER_3</unmanaged>
        /// <unmanaged-short>D3D11_CONSERVATIVE_RASTERIZATION_TIER_3</unmanaged-short>
        Tier3 = unchecked ((System.Int32)(3))}

    /// <summary>
    /// <p>Contains flags that describe content-protection capabilities.</p>
    /// </summary>
    /// <doc-id>hh447629</doc-id>
    /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS</unmanaged>
    /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS</unmanaged-short>
    public enum ContentProtectionCaps : System.Int32
    {
        /// <summary>
        /// <dd> <p>The content protection is implemented in software by the driver.</p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_SOFTWARE</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_SOFTWARE</unmanaged-short>
        Software = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The content protection is implemented in hardware by the GPU.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE</unmanaged-short>
        Hardware = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Content protection is always applied to a protected surface, regardless of whether the application explicitly enables protection.</p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_PROTECTION_ALWAYS_ON</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_PROTECTION_ALWAYS_ON</unmanaged-short>
        ProtectionAlwaysOn = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>The driver can use partially encrypted buffers. If this capability is not present, the entire buffer must be either encrypted or clear.</p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_PARTIAL_DECRYPTION</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_PARTIAL_DECRYPTION</unmanaged-short>
        PartialDecryption = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p>The driver can encrypt data using a separate content key that is encrypted using the session key.</p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_CONTENT_KEY</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_CONTENT_KEY</unmanaged-short>
        ContentKey = unchecked ((System.Int32)(16)),
        /// <summary>
        /// <dd> <p>The driver can refresh the session key without renegotiating the key.</p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_FRESHEN_SESSION_KEY</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_FRESHEN_SESSION_KEY</unmanaged-short>
        FreshenSessionKey = unchecked ((System.Int32)(32)),
        /// <summary>
        /// <dd> <p>The driver can read back encrypted data from a protected surface. For more information, see <strong>ID3D11VideoContext::EncryptionBlt</strong>.</p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK</unmanaged-short>
        EncryptedReadBack = unchecked ((System.Int32)(64)),
        /// <summary>
        /// <dd> <p>The driver requires a separate key to read encrypted data from a protected surface.</p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK_KEY</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK_KEY</unmanaged-short>
        EncryptedReadBackKey = unchecked ((System.Int32)(128)),
        /// <summary>
        /// <dd> <p>If the encryption type is <strong>D3DCRYPTOTYPE_AES128_CTR</strong>, the application must use a sequential count in the <strong><see cref = "SharpDX.Direct3D11.AesCtrIv"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_SEQUENTIAL_CTR_IV</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_SEQUENTIAL_CTR_IV</unmanaged-short>
        SequentialCtrIv = unchecked ((System.Int32)(256)),
        /// <summary>
        /// <dd> <p>The driver supports encrypted slice data, but does not support any other encrypted data in the compressed buffer.  The caller should not encrypt any data within the buffer other than the slice data.</p> <strong>Note</strong>??The driver should only report this flag for the specific profiles that have this limitation. ? </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPT_SLICEDATA_ONLY</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPT_SLICEDATA_ONLY</unmanaged-short>
        EncryptSlicedataOnly = unchecked ((System.Int32)(512)),
        /// <summary>
        /// <dd> <p>The driver can copy encrypted data from one resource to another, decrypting the data as part of the process.</p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_DECRYPTION_BLT</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_DECRYPTION_BLT</unmanaged-short>
        DecryptionBlit = unchecked ((System.Int32)(1024)),
        /// <summary>
        /// <dd> <p>The hardware supports the protection of specific resources. This means that:</p> <ul> <li>The contents of a protected allocation can never be read by the CPU.</li> <li>The hardware can ensure a protected resource cannot be copied to an unprotected resource.</li> </ul> <p><strong>Note</strong>??This enumeration value is supported starting with Windows?10.</p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECT_UNCOMPRESSED</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECT_UNCOMPRESSED</unmanaged-short>
        HardwareProtectUncompressed = unchecked ((System.Int32)(2048)),
        /// <summary>
        /// <dd> <p>Physical pages of a protected resource can be evicted and potentially paged to disk in low memory conditions without losing the contents of the resource when paged back in. </p> <p><strong>Note</strong>??This enumeration value is supported starting with Windows?10.</p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECTED_MEMORY_PAGEABLE</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECTED_MEMORY_PAGEABLE</unmanaged-short>
        HardwareProtectedMemoryPageable = unchecked ((System.Int32)(4096)),
        /// <summary>
        /// <dd> <p>The hardware supports an automatic teardown mechanism that could trigger hardware keys or protected content to become lost in some conditions.  The application can register to be notified when these events occur.</p> <p><strong>Note</strong>??This enumeration value is supported starting with Windows?10.</p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_TEARDOWN</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_TEARDOWN</unmanaged-short>
        HardwareTeardown = unchecked ((System.Int32)(8192)),
        /// <summary>
        /// <dd> <p>The secure environment is tightly coupled with the GPU and an <strong><see cref = "SharpDX.Direct3D11.CryptoSession"/></strong> should be used for communication between the user mode DRM component and the secure execution environment.</p> <p><strong>Note</strong>??This enumeration value is supported starting with Windows?10.</p> </dd>
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_DRM_COMMUNICATION</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_DRM_COMMUNICATION</unmanaged-short>
        HardwareDrmCommunication = unchecked ((System.Int32)(16384)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>hh447629</doc-id>
        /// <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_DRM_COMMUNICATION_MULTI_THREADED</unmanaged>
        /// <unmanaged-short>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_DRM_COMMUNICATION_MULTI_THREADED</unmanaged-short>
        HardwareDrmCommunicationMultiThreaded = unchecked ((System.Int32)(32768))}

    /// <summary>
    /// <p>Specifies the context in which a query occurs.</p>
    /// </summary>
    /// <remarks>
    /// <p> This enum is used by the following: </p><ul> <li> <strong><see cref = "SharpDX.Direct3D11.QueryDescription1"/></strong> structure </li> <li> A CD3D11_QUERY_DESC1 constructor.</li> <li> <strong>ID3D11DeviceContext3::Flush1</strong> method </li> </ul>
    /// </remarks>
    /// <doc-id>dn859366</doc-id>
    /// <unmanaged>D3D11_CONTEXT_TYPE</unmanaged>
    /// <unmanaged-short>D3D11_CONTEXT_TYPE</unmanaged-short>
    public enum ContextType : System.Int32
    {
        /// <summary>
        /// <dd> <p>The query can occur in all contexts.</p> </dd>
        /// </summary>
        /// <doc-id>dn859366</doc-id>
        /// <unmanaged>D3D11_CONTEXT_TYPE_ALL</unmanaged>
        /// <unmanaged-short>D3D11_CONTEXT_TYPE_ALL</unmanaged-short>
        All = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>The query occurs in the context of a 3D command queue.</p> </dd>
        /// </summary>
        /// <doc-id>dn859366</doc-id>
        /// <unmanaged>D3D11_CONTEXT_TYPE_3D</unmanaged>
        /// <unmanaged-short>D3D11_CONTEXT_TYPE_3D</unmanaged-short>
        ThreeDimensions = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The query occurs in the context of a 3D compute queue.</p> </dd>
        /// </summary>
        /// <doc-id>dn859366</doc-id>
        /// <unmanaged>D3D11_CONTEXT_TYPE_COMPUTE</unmanaged>
        /// <unmanaged-short>D3D11_CONTEXT_TYPE_COMPUTE</unmanaged-short>
        Compute = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>The query occurs in the context of a 3D copy queue.</p> </dd>
        /// </summary>
        /// <doc-id>dn859366</doc-id>
        /// <unmanaged>D3D11_CONTEXT_TYPE_COPY</unmanaged>
        /// <unmanaged-short>D3D11_CONTEXT_TYPE_COPY</unmanaged-short>
        Copy = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>The query occurs in the context of video.</p> </dd>
        /// </summary>
        /// <doc-id>dn859366</doc-id>
        /// <unmanaged>D3D11_CONTEXT_TYPE_VIDEO</unmanaged>
        /// <unmanaged-short>D3D11_CONTEXT_TYPE_VIDEO</unmanaged-short>
        Video = unchecked ((System.Int32)(4))}

    [System.FlagsAttribute]
    /// <summary>
    /// <strong>Note</strong>??This enumeration is supported by the Direct3D 11.1 runtime, which is available on Windows?8 and later operating systems.?<p>Specifies how to handle the existing contents of a resource during a copy or update operation of a region within that resource.</p>
    /// </summary>
    /// <doc-id>hh404451</doc-id>
    /// <unmanaged>D3D11_COPY_FLAGS</unmanaged>
    /// <unmanaged-short>D3D11_COPY_FLAGS</unmanaged-short>
    public enum CopyFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>The existing contents of the resource cannot be overwritten.</p> </dd>
        /// </summary>
        /// <doc-id>hh404451</doc-id>
        /// <unmanaged>D3D11_COPY_NO_OVERWRITE</unmanaged>
        /// <unmanaged-short>D3D11_COPY_NO_OVERWRITE</unmanaged-short>
        NoOverwrite = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The existing contents of the resource are undefined and can be discarded.</p> </dd>
        /// </summary>
        /// <doc-id>hh404451</doc-id>
        /// <unmanaged>D3D11_COPY_DISCARD</unmanaged>
        /// <unmanaged-short>D3D11_COPY_DISCARD</unmanaged-short>
        Discard = unchecked ((System.Int32)(2)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Options for performance counters.</p>
    /// </summary>
    /// <remarks>
    /// <p>Independent hardware vendors may define their own set of performance counters for their devices, by giving the enumeration value a number that is greater than the value for D3D11_COUNTER_DEVICE_DEPENDENT_0.</p><p>This enumeration is used by <strong><see cref = "SharpDX.Direct3D11.CounterDescription"/></strong> and <strong><see cref = "SharpDX.Direct3D11.CounterCapabilities"/></strong>.</p>
    /// </remarks>
    /// <doc-id>ff476102</doc-id>
    /// <unmanaged>D3D11_COUNTER</unmanaged>
    /// <unmanaged-short>D3D11_COUNTER</unmanaged-short>
    public enum CounterKind : System.Int32
    {
        /// <summary>
        /// <dd> <p>Define a performance counter that is dependent on the hardware device.</p> </dd>
        /// </summary>
        /// <doc-id>ff476102</doc-id>
        /// <unmanaged>D3D11_COUNTER_DEVICE_DEPENDENT_0</unmanaged>
        /// <unmanaged-short>D3D11_COUNTER_DEVICE_DEPENDENT_0</unmanaged-short>
        DeviceDependent0 = unchecked ((System.Int32)(1073741824))}

    /// <summary>
    /// <p>Data type of a performance counter.</p>
    /// </summary>
    /// <remarks>
    /// <p>These flags are an output parameter in <strong>ID3D11Device::CheckCounter</strong>.</p>
    /// </remarks>
    /// <doc-id>ff476105</doc-id>
    /// <unmanaged>D3D11_COUNTER_TYPE</unmanaged>
    /// <unmanaged-short>D3D11_COUNTER_TYPE</unmanaged-short>
    public enum CounterType : System.Int32
    {
        /// <summary>
        /// <dd> <p>32-bit floating point.</p> </dd>
        /// </summary>
        /// <doc-id>ff476105</doc-id>
        /// <unmanaged>D3D11_COUNTER_TYPE_FLOAT32</unmanaged>
        /// <unmanaged-short>D3D11_COUNTER_TYPE_FLOAT32</unmanaged-short>
        Float32 = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>16-bit unsigned integer.</p> </dd>
        /// </summary>
        /// <doc-id>ff476105</doc-id>
        /// <unmanaged>D3D11_COUNTER_TYPE_UINT16</unmanaged>
        /// <unmanaged-short>D3D11_COUNTER_TYPE_UINT16</unmanaged-short>
        UInt16 = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>32-bit unsigned integer.</p> </dd>
        /// </summary>
        /// <doc-id>ff476105</doc-id>
        /// <unmanaged>D3D11_COUNTER_TYPE_UINT32</unmanaged>
        /// <unmanaged-short>D3D11_COUNTER_TYPE_UINT32</unmanaged-short>
        UInt32 = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>64-bit unsigned integer.</p> </dd>
        /// </summary>
        /// <doc-id>ff476105</doc-id>
        /// <unmanaged>D3D11_COUNTER_TYPE_UINT64</unmanaged>
        /// <unmanaged-short>D3D11_COUNTER_TYPE_UINT64</unmanaged-short>
        UInt64 = unchecked ((System.Int32)(3))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Specifies the types of CPU access allowed for a resource.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is used in <strong><see cref = "SharpDX.Direct3D11.BufferDescription"/></strong>, <strong><see cref = "SharpDX.Direct3D11.Texture1DDescription"/></strong>, <strong><see cref = "SharpDX.Direct3D11.Texture2DDescription"/></strong>, <strong><see cref = "SharpDX.Direct3D11.Texture3DDescription"/></strong>. </p><p>Applications may combine one or more of these flags with a logical OR. When possible, create resources with no CPU access flags, as this enables better resource optimization.</p><p>The <strong><see cref = "SharpDX.Direct3D11.ResourceOptionFlags"/></strong> cannot be used when creating resources with <strong>D3D11_CPU_ACCESS</strong> flags.</p>
    /// </remarks>
    /// <doc-id>ff476106</doc-id>
    /// <unmanaged>D3D11_CPU_ACCESS_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_CPU_ACCESS_FLAG</unmanaged-short>
    public enum CpuAccessFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>The resource is to be mappable so that the CPU can change its contents. Resources created with this flag cannot be set as outputs of the pipeline and must be created with either dynamic or staging usage (see <strong><see cref = "SharpDX.Direct3D11.ResourceUsage"/></strong>).</p> </dd>
        /// </summary>
        /// <doc-id>ff476106</doc-id>
        /// <unmanaged>D3D11_CPU_ACCESS_WRITE</unmanaged>
        /// <unmanaged-short>D3D11_CPU_ACCESS_WRITE</unmanaged-short>
        Write = unchecked ((System.Int32)(65536)),
        /// <summary>
        /// <dd> <p>The resource is to be mappable so that the CPU can read its contents. Resources created with this flag cannot be set as either inputs or outputs to the pipeline and must be created with staging usage (see <strong><see cref = "SharpDX.Direct3D11.ResourceUsage"/></strong>).</p> </dd>
        /// </summary>
        /// <doc-id>ff476106</doc-id>
        /// <unmanaged>D3D11_CPU_ACCESS_READ</unmanaged>
        /// <unmanaged-short>D3D11_CPU_ACCESS_READ</unmanaged-short>
        Read = unchecked ((System.Int32)(131072)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Describes flags that are used to create a device context state object (<strong><see cref = "SharpDX.Direct3D11.DeviceContextState"/></strong>) with the <strong>ID3D11Device1::CreateDeviceContextState</strong> method.</p>
    /// </summary>
    /// <doc-id>hh404432</doc-id>
    /// <unmanaged>D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG</unmanaged-short>
    public enum CreateDeviceContextStateFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>hh404432</doc-id>
        /// <unmanaged>D3D11_1_CREATE_DEVICE_CONTEXT_STATE_SINGLETHREADED</unmanaged>
        /// <unmanaged-short>D3D11_1_CREATE_DEVICE_CONTEXT_STATE_SINGLETHREADED</unmanaged-short>
        SingleThreaded = unchecked ((System.Int32)(1)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS</unmanaged>
    /// <unmanaged-short>D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS</unmanaged-short>
    public enum CryptoSessionKeyExchangeFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAG_NONE</unmanaged>
        /// <unmanaged-short>D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAG_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Represents the status of an <strong><see cref = "SharpDX.Direct3D11.CryptoSession"/></strong> interface.</p>
    /// </summary>
    /// <doc-id>dn894114</doc-id>
    /// <unmanaged>D3D11_CRYPTO_SESSION_STATUS</unmanaged>
    /// <unmanaged-short>D3D11_CRYPTO_SESSION_STATUS</unmanaged-short>
    public enum CryptoSessionStatus : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>dn894114</doc-id>
        /// <unmanaged>D3D11_CRYPTO_SESSION_STATUS_OK</unmanaged>
        /// <unmanaged-short>D3D11_CRYPTO_SESSION_STATUS_OK</unmanaged-short>
        Ok = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>dn894114</doc-id>
        /// <unmanaged>D3D11_CRYPTO_SESSION_STATUS_KEY_LOST</unmanaged>
        /// <unmanaged-short>D3D11_CRYPTO_SESSION_STATUS_KEY_LOST</unmanaged-short>
        KeyLost = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>dn894114</doc-id>
        /// <unmanaged>D3D11_CRYPTO_SESSION_STATUS_KEY_AND_CONTENT_LOST</unmanaged>
        /// <unmanaged-short>D3D11_CRYPTO_SESSION_STATUS_KEY_AND_CONTENT_LOST</unmanaged-short>
        KeyAndContentLost = unchecked ((System.Int32)(2))}

    /// <summary>
    /// <p>Indicates triangles facing a particular direction are not drawn.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is part of a rasterizer-state object description (see <strong><see cref = "SharpDX.Direct3D11.RasterizerStateDescription"/></strong>).</p>
    /// </remarks>
    /// <doc-id>ff476108</doc-id>
    /// <unmanaged>D3D11_CULL_MODE</unmanaged>
    /// <unmanaged-short>D3D11_CULL_MODE</unmanaged-short>
    public enum CullMode : System.Int32
    {
        /// <summary>
        /// <dd> <p>Always draw all triangles.</p> </dd>
        /// </summary>
        /// <doc-id>ff476108</doc-id>
        /// <unmanaged>D3D11_CULL_NONE</unmanaged>
        /// <unmanaged-short>D3D11_CULL_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Do not draw triangles that are front-facing.</p> </dd>
        /// </summary>
        /// <doc-id>ff476108</doc-id>
        /// <unmanaged>D3D11_CULL_FRONT</unmanaged>
        /// <unmanaged-short>D3D11_CULL_FRONT</unmanaged-short>
        Front = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Do not draw triangles that are back-facing.</p> </dd>
        /// </summary>
        /// <doc-id>ff476108</doc-id>
        /// <unmanaged>D3D11_CULL_BACK</unmanaged>
        /// <unmanaged-short>D3D11_CULL_BACK</unmanaged-short>
        Back = unchecked ((System.Int32)(3))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>D3D11_DEBUG_FEATURE_FLAGS</unmanaged>
    /// <unmanaged-short>D3D11_DEBUG_FEATURE_FLAGS</unmanaged-short>
    public enum DebugFeatureFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_DEBUG_FEATURE_FLUSH_PER_RENDER_OP</unmanaged>
        /// <unmanaged-short>D3D11_DEBUG_FEATURE_FLUSH_PER_RENDER_OP</unmanaged-short>
        FlushPerRender = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_DEBUG_FEATURE_FINISH_PER_RENDER_OP</unmanaged>
        /// <unmanaged-short>D3D11_DEBUG_FEATURE_FINISH_PER_RENDER_OP</unmanaged-short>
        FinishPerRender = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_DEBUG_FEATURE_PRESENT_PER_RENDER_OP</unmanaged>
        /// <unmanaged-short>D3D11_DEBUG_FEATURE_PRESENT_PER_RENDER_OP</unmanaged-short>
        PresentPerRender = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_DEBUG_FEATURE_ALWAYS_DISCARD_OFFERED_RESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_DEBUG_FEATURE_ALWAYS_DISCARD_OFFERED_RESOURCE</unmanaged-short>
        AlwaysDiscardOfferedResource = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_DEBUG_FEATURE_NEVER_DISCARD_OFFERED_RESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_DEBUG_FEATURE_NEVER_DISCARD_OFFERED_RESOURCE</unmanaged-short>
        NeverDiscardOfferedResource = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_DEBUG_FEATURE_AVOID_BEHAVIOR_CHANGING_DEBUG_AIDS</unmanaged>
        /// <unmanaged-short>D3D11_DEBUG_FEATURE_AVOID_BEHAVIOR_CHANGING_DEBUG_AIDS</unmanaged-short>
        AvoidBehaviorChangingDebugAids = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_DEBUG_FEATURE_DISABLE_TILED_RESOURCE_MAPPING_TRACKING_AND_VALIDATION</unmanaged>
        /// <unmanaged-short>D3D11_DEBUG_FEATURE_DISABLE_TILED_RESOURCE_MAPPING_TRACKING_AND_VALIDATION</unmanaged-short>
        DisableTiledResourceMappingTrackingAndValidation = unchecked ((System.Int32)(128))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p> Specifies the parts of the depth stencil to clear. </p>
    /// </summary>
    /// <remarks>
    /// <p> These flags are used when calling <strong>ID3D11DeviceContext::ClearDepthStencilView</strong>; the flags can be combined with a bitwise OR. </p>
    /// </remarks>
    /// <doc-id>ff476099</doc-id>
    /// <unmanaged>D3D11_CLEAR_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_CLEAR_FLAG</unmanaged-short>
    public enum DepthStencilClearFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>Clear the depth buffer, using fast clear if possible, then place the resource in a compressed state.</p> </dd>
        /// </summary>
        /// <doc-id>ff476099</doc-id>
        /// <unmanaged>D3D11_CLEAR_DEPTH</unmanaged>
        /// <unmanaged-short>D3D11_CLEAR_DEPTH</unmanaged-short>
        Depth = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Clear the stencil buffer, using fast clear if possible, then place the resource in a compressed state.</p> </dd>
        /// </summary>
        /// <doc-id>ff476099</doc-id>
        /// <unmanaged>D3D11_CLEAR_STENCIL</unmanaged>
        /// <unmanaged-short>D3D11_CLEAR_STENCIL</unmanaged-short>
        Stencil = unchecked ((System.Int32)(2))}

    /// <summary>
    /// <p>Specifies how to access a resource used in a depth-stencil view.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is used in <strong><see cref = "SharpDX.Direct3D11.DepthStencilViewDescription"/></strong> to create a depth-stencil view.</p>
    /// </remarks>
    /// <doc-id>ff476115</doc-id>
    /// <unmanaged>D3D11_DSV_DIMENSION</unmanaged>
    /// <unmanaged-short>D3D11_DSV_DIMENSION</unmanaged-short>
    public enum DepthStencilViewDimension : System.Int32
    {
        /// <summary>
        /// <dd> <p><em>D3D11_DSV_DIMENSION_UNKNOWN</em> is not a valid value for <strong><see cref = "SharpDX.Direct3D11.DepthStencilViewDescription"/></strong> and is not used.</p> </dd>
        /// </summary>
        /// <doc-id>ff476115</doc-id>
        /// <unmanaged>D3D11_DSV_DIMENSION_UNKNOWN</unmanaged>
        /// <unmanaged-short>D3D11_DSV_DIMENSION_UNKNOWN</unmanaged-short>
        Unknown = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as a 1D texture.</p> </dd>
        /// </summary>
        /// <doc-id>ff476115</doc-id>
        /// <unmanaged>D3D11_DSV_DIMENSION_TEXTURE1D</unmanaged>
        /// <unmanaged-short>D3D11_DSV_DIMENSION_TEXTURE1D</unmanaged-short>
        Texture1D = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as an array of 1D textures.</p> </dd>
        /// </summary>
        /// <doc-id>ff476115</doc-id>
        /// <unmanaged>D3D11_DSV_DIMENSION_TEXTURE1DARRAY</unmanaged>
        /// <unmanaged-short>D3D11_DSV_DIMENSION_TEXTURE1DARRAY</unmanaged-short>
        Texture1DArray = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as a 2D texture.</p> </dd>
        /// </summary>
        /// <doc-id>ff476115</doc-id>
        /// <unmanaged>D3D11_DSV_DIMENSION_TEXTURE2D</unmanaged>
        /// <unmanaged-short>D3D11_DSV_DIMENSION_TEXTURE2D</unmanaged-short>
        Texture2D = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as an array of 2D textures.</p> </dd>
        /// </summary>
        /// <doc-id>ff476115</doc-id>
        /// <unmanaged>D3D11_DSV_DIMENSION_TEXTURE2DARRAY</unmanaged>
        /// <unmanaged-short>D3D11_DSV_DIMENSION_TEXTURE2DARRAY</unmanaged-short>
        Texture2DArray = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as a 2D texture with multisampling.</p> </dd>
        /// </summary>
        /// <doc-id>ff476115</doc-id>
        /// <unmanaged>D3D11_DSV_DIMENSION_TEXTURE2DMS</unmanaged>
        /// <unmanaged-short>D3D11_DSV_DIMENSION_TEXTURE2DMS</unmanaged-short>
        Texture2DMultisampled = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as an array of 2D textures with multisampling.</p> </dd>
        /// </summary>
        /// <doc-id>ff476115</doc-id>
        /// <unmanaged>D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY</unmanaged>
        /// <unmanaged-short>D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY</unmanaged-short>
        Texture2DMultisampledArray = unchecked ((System.Int32)(6))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Depth-stencil view options.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is used by <strong><see cref = "SharpDX.Direct3D11.DepthStencilViewDescription"/></strong>.</p><p>Limiting a depth-stencil buffer to read-only access allows more than one depth-stencil view to be bound to the pipeline simultaneously, since it is not possible to have a read/write conflicts between separate views.</p>
    /// </remarks>
    /// <doc-id>ff476116</doc-id>
    /// <unmanaged>D3D11_DSV_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_DSV_FLAG</unmanaged-short>
    public enum DepthStencilViewFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>Indicates that depth values are read only.</p> </dd>
        /// </summary>
        /// <doc-id>ff476116</doc-id>
        /// <unmanaged>D3D11_DSV_READ_ONLY_DEPTH</unmanaged>
        /// <unmanaged-short>D3D11_DSV_READ_ONLY_DEPTH</unmanaged-short>
        ReadOnlyDepth = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Indicates that stencil values are read only.</p> </dd>
        /// </summary>
        /// <doc-id>ff476116</doc-id>
        /// <unmanaged>D3D11_DSV_READ_ONLY_STENCIL</unmanaged>
        /// <unmanaged-short>D3D11_DSV_READ_ONLY_STENCIL</unmanaged-short>
        ReadOnlyStencil = unchecked ((System.Int32)(2)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Identify the portion of a depth-stencil buffer for writing depth data.</p>
    /// </summary>
    /// <doc-id>ff476113</doc-id>
    /// <unmanaged>D3D11_DEPTH_WRITE_MASK</unmanaged>
    /// <unmanaged-short>D3D11_DEPTH_WRITE_MASK</unmanaged-short>
    public enum DepthWriteMask : System.Int32
    {
        /// <summary>
        /// <dd> <p>Turn off writes to the depth-stencil buffer.</p> </dd>
        /// </summary>
        /// <doc-id>ff476113</doc-id>
        /// <unmanaged>D3D11_DEPTH_WRITE_MASK_ZERO</unmanaged>
        /// <unmanaged-short>D3D11_DEPTH_WRITE_MASK_ZERO</unmanaged-short>
        Zero = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Turn on writes to the depth-stencil buffer.</p> </dd>
        /// </summary>
        /// <doc-id>ff476113</doc-id>
        /// <unmanaged>D3D11_DEPTH_WRITE_MASK_ALL</unmanaged>
        /// <unmanaged-short>D3D11_DEPTH_WRITE_MASK_ALL</unmanaged-short>
        All = unchecked ((System.Int32)(1))}

    /// <summary>
    /// <p>Device context options.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is used by <strong>ID3D11DeviceContext::GetType</strong>.</p>
    /// </remarks>
    /// <doc-id>ff476114</doc-id>
    /// <unmanaged>D3D11_DEVICE_CONTEXT_TYPE</unmanaged>
    /// <unmanaged-short>D3D11_DEVICE_CONTEXT_TYPE</unmanaged-short>
    public enum DeviceContextType : System.Int32
    {
        /// <summary>
        /// <dd> <p>The device context is an immediate context.</p> </dd>
        /// </summary>
        /// <doc-id>ff476114</doc-id>
        /// <unmanaged>D3D11_DEVICE_CONTEXT_IMMEDIATE</unmanaged>
        /// <unmanaged-short>D3D11_DEVICE_CONTEXT_IMMEDIATE</unmanaged-short>
        Immediate = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>The device context is a deferred context.</p> </dd>
        /// </summary>
        /// <doc-id>ff476114</doc-id>
        /// <unmanaged>D3D11_DEVICE_CONTEXT_DEFERRED</unmanaged>
        /// <unmanaged-short>D3D11_DEVICE_CONTEXT_DEFERRED</unmanaged-short>
        Deferred = unchecked ((System.Int32)(1))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Describes parameters that are used to create a device.</p>
    /// </summary>
    /// <remarks>
    /// <p>Device creation flags are used by <strong>D3D11CreateDevice</strong> and <strong>D3D11CreateDeviceAndSwapChain</strong>.</p><p>An application might dynamically create (and destroy) threads to improve performance especially on a machine with multiple CPU cores. There may be cases, however, when an application needs to prevent extra threads from being created. This can happen when you want to simplify debugging, profile code or develop a tool for instance. For these cases, use <strong>D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS</strong> to request that the runtime and video driver not create any additional threads that might interfere with the application.</p>
    /// </remarks>
    /// <doc-id>ff476107</doc-id>
    /// <unmanaged>D3D11_CREATE_DEVICE_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_CREATE_DEVICE_FLAG</unmanaged-short>
    public enum DeviceCreationFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>Use this flag if your application will only call methods of Direct3D?11 interfaces from a single thread. By default, the <strong><see cref = "SharpDX.Direct3D11.Device"/></strong> object is  thread-safe.  By using this flag, you can increase performance. However, if you use this flag and your application calls methods of Direct3D?11 interfaces from multiple threads, undefined behavior might result.</p> </dd>
        /// </summary>
        /// <doc-id>ff476107</doc-id>
        /// <unmanaged>D3D11_CREATE_DEVICE_SINGLETHREADED</unmanaged>
        /// <unmanaged-short>D3D11_CREATE_DEVICE_SINGLETHREADED</unmanaged-short>
        SingleThreaded = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Creates a device that supports the debug layer. </p> <p>To use this flag, you must have D3D11*SDKLayers.dll installed; otherwise, device creation fails. To get D3D11_1SDKLayers.dll, install the SDK for Windows?8.</p> </dd>
        /// </summary>
        /// <doc-id>ff476107</doc-id>
        /// <unmanaged>D3D11_CREATE_DEVICE_DEBUG</unmanaged>
        /// <unmanaged-short>D3D11_CREATE_DEVICE_DEBUG</unmanaged-short>
        Debug = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <strong>Note</strong>??This flag is not supported in Direct3D?11. ? </dd>
        /// </summary>
        /// <doc-id>ff476107</doc-id>
        /// <unmanaged>D3D11_CREATE_DEVICE_SWITCH_TO_REF</unmanaged>
        /// <unmanaged-short>D3D11_CREATE_DEVICE_SWITCH_TO_REF</unmanaged-short>
        SwitchToRef = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Prevents multiple threads from being created. When this flag is used with a Windows Advanced Rasterization Platform (WARP) device, no additional threads will be created by WARP  and all rasterization will occur on the calling thread. This flag is not recommended for general use. See remarks.</p> </dd>
        /// </summary>
        /// <doc-id>ff476107</doc-id>
        /// <unmanaged>D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS</unmanaged>
        /// <unmanaged-short>D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS</unmanaged-short>
        PreventThreadingOptimizations = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p>Creates a device that supports BGRA formats (<strong>DXGI_FORMAT_B8G8R8A8_UNORM</strong> and <strong>DXGI_FORMAT_B8G8R8A8_UNORM_SRGB</strong>). All 10level9 and higher hardware with WDDM 1.1+ drivers support BGRA formats. </p> <strong>Note</strong>??Required for Direct2D interoperability with Direct3D resources. ? </dd>
        /// </summary>
        /// <doc-id>ff476107</doc-id>
        /// <unmanaged>D3D11_CREATE_DEVICE_BGRA_SUPPORT</unmanaged>
        /// <unmanaged-short>D3D11_CREATE_DEVICE_BGRA_SUPPORT</unmanaged-short>
        BgraSupport = unchecked ((System.Int32)(32)),
        /// <summary>
        /// <dd> <p>Causes the device and driver to keep information that you can use for shader debugging.  The exact impact from this flag will vary from driver to driver.  </p> <p>To use this flag, you must have D3D11_1SDKLayers.dll installed; otherwise, device creation fails. The created device supports the debug layer. To get D3D11_1SDKLayers.dll, install the SDK for Windows?8.</p> <p>If you use this flag and the current driver does not support shader debugging, device creation fails. Shader debugging requires a driver that is implemented to the WDDM for Windows?8 (WDDM 1.2).</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476107</doc-id>
        /// <unmanaged>D3D11_CREATE_DEVICE_DEBUGGABLE</unmanaged>
        /// <unmanaged-short>D3D11_CREATE_DEVICE_DEBUGGABLE</unmanaged-short>
        Debuggable = unchecked ((System.Int32)(64)),
        /// <summary>
        /// <dd> <p>Causes the Direct3D runtime to ignore registry settings that turn on the debug layer. You can turn on the debug layer by using the DirectX Control Panel that was included as part of the DirectX SDK. We shipped the last version of the DirectX SDK in June 2010; you can download it from the Microsoft Download Center. You can set this flag in your app, typically in release builds only, to prevent end users from using the DirectX Control Panel to monitor how the app uses Direct3D.</p> <strong>Note</strong>??You can also set this flag in your app to prevent Direct3D debugging tools, such as Visual Studio Ultimate?2012, from hooking your app. ? <p><strong>Windows?8.1:??</strong>This flag doesn't prevent Visual Studio?2013 and later running on Windows?8.1 and later from hooking your app; instead use <strong>ID3D11DeviceContext2::IsAnnotationEnabled</strong>. This flag still prevents Visual Studio?2013 and later running on Windows?8 and earlier from hooking your app. </p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476107</doc-id>
        /// <unmanaged>D3D11_CREATE_DEVICE_PREVENT_ALTERING_LAYER_SETTINGS_FROM_REGISTRY</unmanaged>
        /// <unmanaged-short>D3D11_CREATE_DEVICE_PREVENT_ALTERING_LAYER_SETTINGS_FROM_REGISTRY</unmanaged-short>
        PreventAlteringLayerSettingsFromRegistry = unchecked ((System.Int32)(128)),
        /// <summary>
        /// <dd> <p>Use this flag if the device will produce GPU workloads that take more than two seconds to complete, and you want the operating system to allow them to successfully finish. If this flag is not set, the operating system performs timeout detection and recovery when it detects a GPU packet that took more than two seconds to execute. If this flag is set, the operating system allows such a long running packet to execute without resetting the GPU. We recommend not to set this flag if your device needs to be highly responsive so that the operating system can detect and recover from GPU timeouts. We recommend to set this flag if your device needs to perform time consuming background tasks such as compute, image recognition, and video encoding to allow such tasks to successfully finish.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476107</doc-id>
        /// <unmanaged>D3D11_CREATE_DEVICE_DISABLE_GPU_TIMEOUT</unmanaged>
        /// <unmanaged-short>D3D11_CREATE_DEVICE_DISABLE_GPU_TIMEOUT</unmanaged-short>
        DisableGpuTimeout = unchecked ((System.Int32)(256)),
        /// <summary>
        /// <dd> <p>Forces the creation of the Direct3D device to fail if the display driver is not implemented to the WDDM for Windows?8 (WDDM 1.2). When the display driver is not implemented to WDDM 1.2, only a Direct3D device that is created with feature level 9.1, 9.2, or 9.3 supports video; therefore, if this flag is set, the runtime creates the Direct3D device only for feature level 9.1, 9.2, or 9.3. We recommend not to specify this flag for applications that want to favor Direct3D capability over video. If feature level 10 and higher is available, the runtime will use that feature level regardless of video support.</p> <p>If this flag is set, device creation on the Basic Render Device (BRD) will succeed regardless of the BRD's missing support for video decode. This is because the Media Foundation video stack operates in software mode on BRD. In this situation, if you force the video stack to create the Direct3D device twice (create the device once with this flag, next discover BRD, then again create the device without the flag), you actually degrade performance.</p> <p>If you attempt to create a Direct3D device with driver type <strong>D3D_DRIVER_TYPE_NULL</strong>, <strong>D3D_DRIVER_TYPE_REFERENCE</strong>, or <strong>D3D_DRIVER_TYPE_SOFTWARE</strong>, device creation fails at any feature level because none of the associated drivers provide video capability. If you attempt to create a Direct3D device with driver type <strong>D3D_DRIVER_TYPE_WARP</strong>, device creation succeeds to allow software fallback for video.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476107</doc-id>
        /// <unmanaged>D3D11_CREATE_DEVICE_VIDEO_SUPPORT</unmanaged>
        /// <unmanaged-short>D3D11_CREATE_DEVICE_VIDEO_SUPPORT</unmanaged-short>
        VideoSupport = unchecked ((System.Int32)(2048)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Direct3D 11 feature options.</p>
    /// </summary>
    /// <remarks>
    /// <p> This enumeration is used when querying a driver about support for these features by calling <strong>ID3D11Device::CheckFeatureSupport</strong>. Each value in this enumeration has a corresponding data structure that is required to be passed to the <em>pFeatureSupportData</em> parameter of <strong>ID3D11Device::CheckFeatureSupport</strong>. </p>
    /// </remarks>
    /// <doc-id>ff476124</doc-id>
    /// <unmanaged>D3D11_FEATURE</unmanaged>
    /// <unmanaged-short>D3D11_FEATURE</unmanaged-short>
    public enum Feature : System.Int32
    {
        /// <summary>
        /// <dd> <p> The driver supports multithreading. To see an example of testing a driver for multithread support, see How To: Check for Driver Support. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataThreading"/></strong>.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_THREADING</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_THREADING</unmanaged-short>
        Threading = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Supports the use of the double-precision shaders in HLSL. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataDoubles"/></strong>.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_DOUBLES</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_DOUBLES</unmanaged-short>
        ShaderDoubles = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p> Supports the formats in <strong><see cref = "SharpDX.Direct3D11.FormatSupport"/></strong>. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataFormatSupport"/></strong>.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_FORMAT_SUPPORT</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_FORMAT_SUPPORT</unmanaged-short>
        FormatSupport = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p> Supports the formats in <strong><see cref = "SharpDX.Direct3D11.ComputeShaderFormatSupport"/></strong>. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataFormatSupport2"/></strong>.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_FORMAT_SUPPORT2</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_FORMAT_SUPPORT2</unmanaged-short>
        ComputeShaders = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>Supports compute shaders and raw and structured buffers. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D10XHardwareOptions"/></strong>.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS</unmanaged-short>
        D3D10XHardwareOptions = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Supports Direct3D 11.1 feature options. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options"/></strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_D3D11_OPTIONS</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_D3D11_OPTIONS</unmanaged-short>
        D3D11Options = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p>Supports specific adapter architecture. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataArchitectureInformation"/></strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_ARCHITECTURE_INFO</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_ARCHITECTURE_INFO</unmanaged-short>
        ArchitectureInformation = unchecked ((System.Int32)(6)),
        /// <summary>
        /// <dd> <p> Supports Direct3D?9 feature options. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D9Options"/></strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_D3D9_OPTIONS</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_D3D9_OPTIONS</unmanaged-short>
        D3D9Options = unchecked ((System.Int32)(7)),
        /// <summary>
        /// <dd> <p> Supports minimum precision of shaders. For more info about HLSL minimum precision, see using HLSL minimum precision. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataShaderMinimumPrecisionSupport"/></strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_SHADER_MIN_PRECISION_SUPPORT</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_SHADER_MIN_PRECISION_SUPPORT</unmanaged-short>
        ShaderMinimumPrecisionSupport = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p> Supports Direct3D?9 shadowing feature. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D9ShadowSupport"/></strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_D3D9_SHADOW_SUPPORT</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_D3D9_SHADOW_SUPPORT</unmanaged-short>
        D3D9ShadowSupport = unchecked ((System.Int32)(9)),
        /// <summary>
        /// <dd> <p>Supports Direct3D 11.2 feature options. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.2.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_D3D11_OPTIONS1</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_D3D11_OPTIONS1</unmanaged-short>
        D3D11Options1 = unchecked ((System.Int32)(10)),
        /// <summary>
        /// <dd> <p>Supports Direct3D 11.2 instancing options. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D9SimpleInstancingSupport"/></strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.2.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_D3D9_SIMPLE_INSTANCING_SUPPORT</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_D3D9_SIMPLE_INSTANCING_SUPPORT</unmanaged-short>
        D3D9SimpleInstancingSupport = unchecked ((System.Int32)(11)),
        /// <summary>
        /// <dd> <p>Supports Direct3D 11.2 marker options. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataMarkerSupport"/></strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.2.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_MARKER_SUPPORT</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_MARKER_SUPPORT</unmanaged-short>
        MarkerSupport = unchecked ((System.Int32)(12)),
        /// <summary>
        /// <dd> <p> Supports Direct3D?9 feature options, which includes the Direct3D?9 shadowing feature and instancing support. Refer to  <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D9Options1"/></strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.2.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_D3D9_OPTIONS1</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_D3D9_OPTIONS1</unmanaged-short>
        D3D9Options1 = unchecked ((System.Int32)(13)),
        /// <summary>
        /// <dd> <p> Supports Direct3D 11.3 conservative rasterization feature options. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options2"/></strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.3.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_D3D11_OPTIONS2</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_D3D11_OPTIONS2</unmanaged-short>
        D3D11Options2 = unchecked ((System.Int32)(14)),
        /// <summary>
        /// <dd> <p> Supports Direct3D 11.4 conservative rasterization feature options. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options3"/></strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.4.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_D3D11_OPTIONS3</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_D3D11_OPTIONS3</unmanaged-short>
        D3D11Options3 = unchecked ((System.Int32)(15)),
        /// <summary>
        /// <dd> <p> Supports GPU virtual addresses. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataGpuVirtualAddressSupport"/></strong>.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT</unmanaged-short>
        GpuVirtualAddressSupport = unchecked ((System.Int32)(16)),
        /// <summary>
        /// <dd> <p> Supports a single boolean for NV12 shared textures. Refer to <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options4"/></strong>.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.4.</p> </dd>
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_D3D11_OPTIONS4</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_D3D11_OPTIONS4</unmanaged-short>
        D3D11Options4 = unchecked ((System.Int32)(17)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_SHADER_CACHE</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_SHADER_CACHE</unmanaged-short>
        ShaderCache = unchecked ((System.Int32)(18)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476124</doc-id>
        /// <unmanaged>D3D11_FEATURE_D3D11_OPTIONS5</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_D3D11_OPTIONS5</unmanaged-short>
        D3D11Options5 = unchecked ((System.Int32)(19))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>D3D11_FEATURE_VIDEO</unmanaged>
    /// <unmanaged-short>D3D11_FEATURE_VIDEO</unmanaged-short>
    public enum FeatureVideo : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_FEATURE_VIDEO_DECODER_HISTOGRAM</unmanaged>
        /// <unmanaged-short>D3D11_FEATURE_VIDEO_DECODER_HISTOGRAM</unmanaged-short>
        DecoderHistogram = unchecked ((System.Int32)(0))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Device context options.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is used by <strong>ID3D11DeviceContext::GetType</strong>.</p>
    /// </remarks>
    /// <doc-id>ff476114</doc-id>
    /// <unmanaged>D3D11_FENCE_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_FENCE_FLAG</unmanaged-short>
    public enum FenceFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>The device context is an immediate context.</p> </dd>
        /// </summary>
        /// <doc-id>ff476114</doc-id>
        /// <unmanaged>D3D11_FENCE_FLAG_NONE</unmanaged>
        /// <unmanaged-short>D3D11_FENCE_FLAG_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>The device context is a deferred context.</p> </dd>
        /// </summary>
        /// <doc-id>ff476114</doc-id>
        /// <unmanaged>D3D11_FENCE_FLAG_SHARED</unmanaged>
        /// <unmanaged-short>D3D11_FENCE_FLAG_SHARED</unmanaged-short>
        Shared = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476114</doc-id>
        /// <unmanaged>D3D11_FENCE_FLAG_SHARED_CROSS_ADAPTER</unmanaged>
        /// <unmanaged-short>D3D11_FENCE_FLAG_SHARED_CROSS_ADAPTER</unmanaged-short>
        SharedCrossAdapter = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476114</doc-id>
        /// <unmanaged>D3D11_FENCE_FLAG_NON_MONITORED</unmanaged>
        /// <unmanaged-short>D3D11_FENCE_FLAG_NON_MONITORED</unmanaged-short>
        NonMonitored = unchecked ((System.Int32)(8))}

    /// <summary>
    /// <p>Determines the fill mode to use when rendering triangles.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is part of a rasterizer-state object description (see <strong><see cref = "SharpDX.Direct3D11.RasterizerStateDescription"/></strong>).</p>
    /// </remarks>
    /// <doc-id>ff476131</doc-id>
    /// <unmanaged>D3D11_FILL_MODE</unmanaged>
    /// <unmanaged-short>D3D11_FILL_MODE</unmanaged-short>
    public enum FillMode : System.Int32
    {
        /// <summary>
        /// <dd> <p>Draw lines connecting the vertices. Adjacent vertices are not drawn.</p> </dd>
        /// </summary>
        /// <doc-id>ff476131</doc-id>
        /// <unmanaged>D3D11_FILL_WIREFRAME</unmanaged>
        /// <unmanaged-short>D3D11_FILL_WIREFRAME</unmanaged-short>
        Wireframe = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Fill the triangles formed by the vertices. Adjacent vertices are not drawn.</p> </dd>
        /// </summary>
        /// <doc-id>ff476131</doc-id>
        /// <unmanaged>D3D11_FILL_SOLID</unmanaged>
        /// <unmanaged-short>D3D11_FILL_SOLID</unmanaged-short>
        Solid = unchecked ((System.Int32)(3))}

    /// <summary>
    /// <p>Filtering options during texture sampling.</p>
    /// </summary>
    /// <remarks>
    /// <strong>Note</strong>??If you use different filter types for min versus mag filter, undefined behavior occurs in certain cases where the choice between whether magnification or minification happens is ambiguous.  To prevent this undefined behavior, use filter modes that use similar filter operations for both min and mag (or use anisotropic filtering, which avoids the issue as well).?<p>During texture sampling, one or more texels are read and combined (this is calling filtering) to produce a single value. Point sampling reads a single texel while linear sampling reads two texels (endpoints) and linearly interpolates a third value between the endpoints.</p><p>HLSL texture-sampling functions also support comparison filtering during texture sampling. Comparison filtering compares each sampled texel against a comparison value. The boolean result is blended the same way that normal texture filtering is blended.</p><p>You can use HLSL intrinsic texture-sampling functions that implement texture filtering only or companion functions that use texture filtering with comparison filtering.</p><table> <tr><th>Texture Sampling Function</th><th>Texture Sampling Function with Comparison Filtering</th></tr> <tr><td>sample</td><td>samplecmp or samplecmplevelzero</td></tr> </table><p>?</p><p>Comparison filters only work with textures that have the following DXGI formats: R32_FLOAT_X8X24_TYPELESS, R32_FLOAT, R24_UNORM_X8_TYPELESS, R16_UNORM.</p>
    /// </remarks>
    /// <doc-id>ff476132</doc-id>
    /// <unmanaged>D3D11_FILTER</unmanaged>
    /// <unmanaged-short>D3D11_FILTER</unmanaged-short>
    public enum Filter : System.Int32
    {
        /// <summary>
        /// <dd> <p>Use point sampling for minification, magnification, and mip-level sampling.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MIN_MAG_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MIN_MAG_MIP_POINT</unmanaged-short>
        MinMagMipPoint = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR</unmanaged-short>
        MinMagPointMipLinear = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged-short>
        MinPointMagLinearMipPoint = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR</unmanaged-short>
        MinPointMagMipLinear = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT</unmanaged-short>
        MinLinearMagMipPoint = unchecked ((System.Int32)(16)),
        /// <summary>
        /// <dd> <p>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged-short>
        MinLinearMagPointMipLinear = unchecked ((System.Int32)(17)),
        /// <summary>
        /// <dd> <p>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT</unmanaged-short>
        MinMagLinearMipPoint = unchecked ((System.Int32)(20)),
        /// <summary>
        /// <dd> <p>Use linear interpolation for minification, magnification, and mip-level sampling.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MIN_MAG_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MIN_MAG_MIP_LINEAR</unmanaged-short>
        MinMagMipLinear = unchecked ((System.Int32)(21)),
        /// <summary>
        /// <dd> <p>Use anisotropic interpolation for minification, magnification, and mip-level sampling.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_ANISOTROPIC</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_ANISOTROPIC</unmanaged-short>
        Anisotropic = unchecked ((System.Int32)(85)),
        /// <summary>
        /// <dd> <p>Use point sampling for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT</unmanaged-short>
        ComparisonMinMagMipPoint = unchecked ((System.Int32)(128)),
        /// <summary>
        /// <dd> <p>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR</unmanaged-short>
        ComparisonMinMagPointMipLinear = unchecked ((System.Int32)(129)),
        /// <summary>
        /// <dd> <p>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged-short>
        ComparisonMinPointMagLinearMipPoint = unchecked ((System.Int32)(132)),
        /// <summary>
        /// <dd> <p>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling. Compare the result to the comparison value.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR</unmanaged-short>
        ComparisonMinPointMagMipLinear = unchecked ((System.Int32)(133)),
        /// <summary>
        /// <dd> <p>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling. Compare the result to the comparison value.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT</unmanaged-short>
        ComparisonMinLinearMagMipPoint = unchecked ((System.Int32)(144)),
        /// <summary>
        /// <dd> <p>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling. Compare the result to the comparison value.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged-short>
        ComparisonMinLinearMagPointMipLinear = unchecked ((System.Int32)(145)),
        /// <summary>
        /// <dd> <p>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling. Compare the result to the comparison value.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT</unmanaged-short>
        ComparisonMinMagLinearMipPoint = unchecked ((System.Int32)(148)),
        /// <summary>
        /// <dd> <p>Use linear interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR</unmanaged-short>
        ComparisonMinMagMipLinear = unchecked ((System.Int32)(149)),
        /// <summary>
        /// <dd> <p>Use anisotropic interpolation for minification, magnification, and mip-level sampling. Compare the result to the comparison value.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_COMPARISON_ANISOTROPIC</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_COMPARISON_ANISOTROPIC</unmanaged-short>
        ComparisonAnisotropic = unchecked ((System.Int32)(213)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_MIP_POINT and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MINIMUM_MIN_MAG_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MINIMUM_MIN_MAG_MIP_POINT</unmanaged-short>
        MinimumMinMagMipPoint = unchecked ((System.Int32)(256)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR</unmanaged-short>
        MinimumMinMagPointMipLinear = unchecked ((System.Int32)(257)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged-short>
        MinimumMinPointMagLinearMipPoint = unchecked ((System.Int32)(260)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR</unmanaged-short>
        MinimumMinPointMagMipLinear = unchecked ((System.Int32)(261)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT</unmanaged-short>
        MinimumMinLinearMagMipPoint = unchecked ((System.Int32)(272)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged-short>
        MinimumMinLinearMagPointMipLinear = unchecked ((System.Int32)(273)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT</unmanaged-short>
        MinimumMinMagLinearMipPoint = unchecked ((System.Int32)(276)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_MIP_LINEAR and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR</unmanaged-short>
        MinimumMinMagMipLinear = unchecked ((System.Int32)(277)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_ANISOTROPIC and instead of filtering them return the minimum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the minimum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MINIMUM_ANISOTROPIC</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MINIMUM_ANISOTROPIC</unmanaged-short>
        MinimumAnisotropic = unchecked ((System.Int32)(341)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_MIP_POINT and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_POINT</unmanaged-short>
        MaximumMinMagMipPoint = unchecked ((System.Int32)(384)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR</unmanaged-short>
        MaximumMinMagPointMipLinear = unchecked ((System.Int32)(385)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged-short>
        MaximumMinPointMagLinearMipPoint = unchecked ((System.Int32)(388)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR</unmanaged-short>
        MaximumMinPointMagMipLinear = unchecked ((System.Int32)(389)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT</unmanaged-short>
        MaximumMinLinearMagMipPoint = unchecked ((System.Int32)(400)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged-short>
        MaximumMinLinearMagPointMipLinear = unchecked ((System.Int32)(401)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT</unmanaged-short>
        MaximumMinMagLinearMipPoint = unchecked ((System.Int32)(404)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_MIN_MAG_MIP_LINEAR and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR</unmanaged-short>
        MaximumMinMagMipLinear = unchecked ((System.Int32)(405)),
        /// <summary>
        /// <dd> <p>Fetch the same set of texels as D3D11_FILTER_ANISOTROPIC and instead of filtering them return the maximum of the texels.  Texels that are weighted 0 during filtering aren't counted towards the maximum.  You can query support for this filter type from the <strong>MinMaxFiltering</strong> member in the <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options1"/></strong> structure.</p> </dd>
        /// </summary>
        /// <doc-id>ff476132</doc-id>
        /// <unmanaged>D3D11_FILTER_MAXIMUM_ANISOTROPIC</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_MAXIMUM_ANISOTROPIC</unmanaged-short>
        MaximumAnisotropic = unchecked ((System.Int32)(469))}

    /// <summary>
    /// <p> Specifies the type of sampler filter reduction. </p>
    /// </summary>
    /// <remarks>
    /// <p> This enum is used by the <strong><see cref = "SharpDX.Direct3D11.SamplerStateDescription"/></strong> structure. </p>
    /// </remarks>
    /// <doc-id>dn912870</doc-id>
    /// <unmanaged>D3D11_FILTER_REDUCTION_TYPE</unmanaged>
    /// <unmanaged-short>D3D11_FILTER_REDUCTION_TYPE</unmanaged-short>
    public enum FilterReductionType : System.Int32
    {
        /// <summary>
        /// <dd> <p> Indicates standard (default) filter reduction. </p> </dd>
        /// </summary>
        /// <doc-id>dn912870</doc-id>
        /// <unmanaged>D3D11_FILTER_REDUCTION_TYPE_STANDARD</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_REDUCTION_TYPE_STANDARD</unmanaged-short>
        Standard = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p> Indicates a comparison filter reduction. </p> </dd>
        /// </summary>
        /// <doc-id>dn912870</doc-id>
        /// <unmanaged>D3D11_FILTER_REDUCTION_TYPE_COMPARISON</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_REDUCTION_TYPE_COMPARISON</unmanaged-short>
        Comparison = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p> Indicates minimum filter reduction. </p> </dd>
        /// </summary>
        /// <doc-id>dn912870</doc-id>
        /// <unmanaged>D3D11_FILTER_REDUCTION_TYPE_MINIMUM</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_REDUCTION_TYPE_MINIMUM</unmanaged-short>
        Minimum = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p> Indicates maximum filter reduction. </p> </dd>
        /// </summary>
        /// <doc-id>dn912870</doc-id>
        /// <unmanaged>D3D11_FILTER_REDUCTION_TYPE_MAXIMUM</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_REDUCTION_TYPE_MAXIMUM</unmanaged-short>
        Maximum = unchecked ((System.Int32)(3))}

    /// <summary>
    /// <p>Types of magnification or minification sampler filters.</p>
    /// </summary>
    /// <doc-id>ff476133</doc-id>
    /// <unmanaged>D3D11_FILTER_TYPE</unmanaged>
    /// <unmanaged-short>D3D11_FILTER_TYPE</unmanaged-short>
    public enum FilterType : System.Int32
    {
        /// <summary>
        /// <dd> <p>Point filtering used as a texture magnification or minification filter. The texel with coordinates nearest to the desired pixel value is used. The texture filter to be used between mipmap levels is nearest-point mipmap filtering. The rasterizer uses the color from the texel of the nearest mipmap texture. </p> </dd>
        /// </summary>
        /// <doc-id>ff476133</doc-id>
        /// <unmanaged>D3D11_FILTER_TYPE_POINT</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_TYPE_POINT</unmanaged-short>
        Point = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Bilinear interpolation filtering used as a texture magnification or minification filter. A weighted average of a 2 x 2 area of texels surrounding the desired pixel is used. The texture filter to use between mipmap levels is trilinear mipmap interpolation. The rasterizer linearly interpolates pixel color, using the texels of the two nearest mipmap textures. </p> </dd>
        /// </summary>
        /// <doc-id>ff476133</doc-id>
        /// <unmanaged>D3D11_FILTER_TYPE_LINEAR</unmanaged>
        /// <unmanaged-short>D3D11_FILTER_TYPE_LINEAR</unmanaged-short>
        Linear = unchecked ((System.Int32)(1))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Which resources are supported for a given format and given device (see <strong>ID3D11Device::CheckFormatSupport</strong> and <strong>ID3D11Device::CheckFeatureSupport</strong>).</p>
    /// </summary>
    /// <doc-id>ff476134</doc-id>
    /// <unmanaged>D3D11_FORMAT_SUPPORT</unmanaged>
    /// <unmanaged-short>D3D11_FORMAT_SUPPORT</unmanaged-short>
    public enum FormatSupport : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_BUFFER</unmanaged-short>
        Buffer = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_IA_VERTEX_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_IA_VERTEX_BUFFER</unmanaged-short>
        InputAssemblyVertexBuffer = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_IA_INDEX_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_IA_INDEX_BUFFER</unmanaged-short>
        InputAssemblyIndexBuffer = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_SO_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_SO_BUFFER</unmanaged-short>
        StreamOutputBuffer = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_TEXTURE1D</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_TEXTURE1D</unmanaged-short>
        Texture1D = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_TEXTURE2D</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_TEXTURE2D</unmanaged-short>
        Texture2D = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_TEXTURE3D</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_TEXTURE3D</unmanaged-short>
        Texture3D = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_TEXTURECUBE</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_TEXTURECUBE</unmanaged-short>
        TextureCube = unchecked ((System.Int32)(128)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_LOAD</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_SHADER_LOAD</unmanaged-short>
        ShaderLoad = unchecked ((System.Int32)(256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE</unmanaged-short>
        ShaderSample = unchecked ((System.Int32)(512)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON</unmanaged-short>
        ShaderSampleComparison = unchecked ((System.Int32)(1024)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT</unmanaged-short>
        ShaderSampleMonoText = unchecked ((System.Int32)(2048)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_MIP</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_MIP</unmanaged-short>
        Mip = unchecked ((System.Int32)(4096)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_MIP_AUTOGEN</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_MIP_AUTOGEN</unmanaged-short>
        MipAutogen = unchecked ((System.Int32)(8192)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_RENDER_TARGET</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_RENDER_TARGET</unmanaged-short>
        RenderTarget = unchecked ((System.Int32)(16384)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_BLENDABLE</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_BLENDABLE</unmanaged-short>
        Blendable = unchecked ((System.Int32)(32768)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_DEPTH_STENCIL</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_DEPTH_STENCIL</unmanaged-short>
        DepthStencil = unchecked ((System.Int32)(65536)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_CPU_LOCKABLE</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_CPU_LOCKABLE</unmanaged-short>
        CpuLockable = unchecked ((System.Int32)(131072)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE</unmanaged-short>
        MultisampleResolve = unchecked ((System.Int32)(262144)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_DISPLAY</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_DISPLAY</unmanaged-short>
        Display = unchecked ((System.Int32)(524288)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT</unmanaged-short>
        CastWithinBitLayout = unchecked ((System.Int32)(1048576)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET</unmanaged-short>
        MultisampleRenderTarget = unchecked ((System.Int32)(2097152)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_MULTISAMPLE_LOAD</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_MULTISAMPLE_LOAD</unmanaged-short>
        MultisampleLoad = unchecked ((System.Int32)(4194304)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_GATHER</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_SHADER_GATHER</unmanaged-short>
        ShaderGather = unchecked ((System.Int32)(8388608)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_BACK_BUFFER_CAST</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_BACK_BUFFER_CAST</unmanaged-short>
        BackBufferCast = unchecked ((System.Int32)(16777216)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_TYPED_UNORDERED_ACCESS_VIEW</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_TYPED_UNORDERED_ACCESS_VIEW</unmanaged-short>
        TypedUnorderedAccessView = unchecked ((System.Int32)(33554432)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_GATHER_COMPARISON</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_SHADER_GATHER_COMPARISON</unmanaged-short>
        ShaderGatherComparison = unchecked ((System.Int32)(67108864)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_DECODER_OUTPUT</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_DECODER_OUTPUT</unmanaged-short>
        DecoderOutput = unchecked ((System.Int32)(134217728)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_OUTPUT</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_OUTPUT</unmanaged-short>
        VideoProcessorOutput = unchecked ((System.Int32)(268435456)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_INPUT</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_INPUT</unmanaged-short>
        VideoProcessorInput = unchecked ((System.Int32)(536870912)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476134</doc-id>
        /// <unmanaged>D3D11_FORMAT_SUPPORT_VIDEO_ENCODER</unmanaged>
        /// <unmanaged-short>D3D11_FORMAT_SUPPORT_VIDEO_ENCODER</unmanaged-short>
        VideoEncoder = unchecked ((System.Int32)(1073741824)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Type of data contained in an input slot.</p>
    /// </summary>
    /// <remarks>
    /// <p>Use these values to specify the type of data for a particular input element (see <strong><see cref = "SharpDX.Direct3D11.InputElement"/></strong>) of an input-layout object.</p>
    /// </remarks>
    /// <doc-id>ff476179</doc-id>
    /// <unmanaged>D3D11_INPUT_CLASSIFICATION</unmanaged>
    /// <unmanaged-short>D3D11_INPUT_CLASSIFICATION</unmanaged-short>
    public enum InputClassification : System.Int32
    {
        /// <summary>
        /// <dd> <p>Input data is per-vertex data.</p> </dd>
        /// </summary>
        /// <doc-id>ff476179</doc-id>
        /// <unmanaged>D3D11_INPUT_PER_VERTEX_DATA</unmanaged>
        /// <unmanaged-short>D3D11_INPUT_PER_VERTEX_DATA</unmanaged-short>
        PerVertexData = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Input data is per-instance data.</p> </dd>
        /// </summary>
        /// <doc-id>ff476179</doc-id>
        /// <unmanaged>D3D11_INPUT_PER_INSTANCE_DATA</unmanaged>
        /// <unmanaged-short>D3D11_INPUT_PER_INSTANCE_DATA</unmanaged-short>
        PerInstanceData = unchecked ((System.Int32)(1))}

    /// <summary>
    /// <strong>Note</strong>??This enumeration is supported by the Direct3D 11.1 runtime, which is available on Windows?8 and later operating systems.?<p>Specifies logical operations to configure for a render target.</p>
    /// </summary>
    /// <doc-id>hh404484</doc-id>
    /// <unmanaged>D3D11_LOGIC_OP</unmanaged>
    /// <unmanaged-short>D3D11_LOGIC_OP</unmanaged-short>
    public enum LogicOperation : System.Int32
    {
        /// <summary>
        /// <dd> <p>Clears the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_CLEAR</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_CLEAR</unmanaged-short>
        Clear = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Sets the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_SET</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_SET</unmanaged-short>
        Set = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Copys the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_COPY</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_COPY</unmanaged-short>
        Copy = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Performs an inverted-copy of the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_COPY_INVERTED</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_COPY_INVERTED</unmanaged-short>
        CopyInverted = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>No operation is performed on the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_NOOP</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_NOOP</unmanaged-short>
        Noop = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Inverts the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_INVERT</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_INVERT</unmanaged-short>
        Invert = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p>Performs a logical AND operation on the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_AND</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_AND</unmanaged-short>
        And = unchecked ((System.Int32)(6)),
        /// <summary>
        /// <dd> <p>Performs a logical NAND operation on the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_NAND</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_NAND</unmanaged-short>
        Nand = unchecked ((System.Int32)(7)),
        /// <summary>
        /// <dd> <p>Performs a logical OR operation on the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_OR</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_OR</unmanaged-short>
        Or = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p>Performs a logical NOR operation on the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_NOR</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_NOR</unmanaged-short>
        Nor = unchecked ((System.Int32)(9)),
        /// <summary>
        /// <dd> <p>Performs a logical XOR operation on the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_XOR</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_XOR</unmanaged-short>
        Xor = unchecked ((System.Int32)(10)),
        /// <summary>
        /// <dd> <p>Performs a logical equal operation on the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_EQUIV</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_EQUIV</unmanaged-short>
        Equiv = unchecked ((System.Int32)(11)),
        /// <summary>
        /// <dd> <p>Performs a logical AND and reverse operation on the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_AND_REVERSE</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_AND_REVERSE</unmanaged-short>
        AndReverse = unchecked ((System.Int32)(12)),
        /// <summary>
        /// <dd> <p>Performs a logical AND and invert operation on the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_AND_INVERTED</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_AND_INVERTED</unmanaged-short>
        AndInverted = unchecked ((System.Int32)(13)),
        /// <summary>
        /// <dd> <p>Performs a logical OR and reverse operation on the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_OR_REVERSE</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_OR_REVERSE</unmanaged-short>
        OrReverse = unchecked ((System.Int32)(14)),
        /// <summary>
        /// <dd> <p>Performs a logical OR and invert operation on the render target.</p> </dd>
        /// </summary>
        /// <doc-id>hh404484</doc-id>
        /// <unmanaged>D3D11_LOGIC_OP_OR_INVERTED</unmanaged>
        /// <unmanaged-short>D3D11_LOGIC_OP_OR_INVERTED</unmanaged-short>
        OrInverted = unchecked ((System.Int32)(15))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Specifies how the CPU should respond when an application calls the <strong>ID3D11DeviceContext::Map</strong> method on a resource that is being used by the GPU.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is used by <strong>ID3D11DeviceContext::Map</strong>.</p><p>D3D11_MAP_FLAG_DO_NOT_WAIT cannot be used with <strong>D3D11_MAP_WRITE_DISCARD</strong> or <strong>D3D11_MAP_WRITE_NOOVERWRITE</strong>.</p>
    /// </remarks>
    /// <doc-id>ff476183</doc-id>
    /// <unmanaged>D3D11_MAP_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_MAP_FLAG</unmanaged-short>
    public enum MapFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476183</doc-id>
        /// <unmanaged>D3D11_MAP_FLAG_DO_NOT_WAIT</unmanaged>
        /// <unmanaged-short>D3D11_MAP_FLAG_DO_NOT_WAIT</unmanaged-short>
        DoNotWait = unchecked ((System.Int32)(1048576)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Identifies a resource to be accessed for reading and writing by the CPU. Applications may combine one or more of these flags.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is used in <strong>ID3D11DeviceContext::Map</strong>.</p><p>These remarks are divided into the following topics:</p><p> </p><ul> <li>Meaning</li> <li>Common</li> </ul>
    /// </remarks>
    /// <doc-id>ff476181</doc-id>
    /// <unmanaged>D3D11_MAP</unmanaged>
    /// <unmanaged-short>D3D11_MAP</unmanaged-short>
    public enum MapMode : System.Int32
    {
        /// <summary>
        /// <dd> <p>Resource is mapped for reading. The resource must have been created with read access  (see <strong>D3D11_CPU_ACCESS_READ</strong>).</p> </dd>
        /// </summary>
        /// <doc-id>ff476181</doc-id>
        /// <unmanaged>D3D11_MAP_READ</unmanaged>
        /// <unmanaged-short>D3D11_MAP_READ</unmanaged-short>
        Read = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Resource is mapped for writing. The resource must have been created with write  access (see <strong>D3D11_CPU_ACCESS_WRITE</strong>).</p> </dd>
        /// </summary>
        /// <doc-id>ff476181</doc-id>
        /// <unmanaged>D3D11_MAP_WRITE</unmanaged>
        /// <unmanaged-short>D3D11_MAP_WRITE</unmanaged-short>
        Write = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Resource is mapped for reading and writing. The resource must have been created with read and write  access (see <strong>D3D11_CPU_ACCESS_READ and D3D11_CPU_ACCESS_WRITE</strong>).</p> </dd>
        /// </summary>
        /// <doc-id>ff476181</doc-id>
        /// <unmanaged>D3D11_MAP_READ_WRITE</unmanaged>
        /// <unmanaged-short>D3D11_MAP_READ_WRITE</unmanaged-short>
        ReadWrite = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>Resource is mapped for writing; the previous contents of the resource will be undefined. The resource must have been created with write access  and dynamic usage (See <strong>D3D11_CPU_ACCESS_WRITE</strong> and <strong>D3D11_USAGE_DYNAMIC</strong>).</p> </dd>
        /// </summary>
        /// <doc-id>ff476181</doc-id>
        /// <unmanaged>D3D11_MAP_WRITE_DISCARD</unmanaged>
        /// <unmanaged-short>D3D11_MAP_WRITE_DISCARD</unmanaged-short>
        WriteDiscard = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Resource is mapped for writing; the existing contents of the resource cannot be overwritten (see Remarks). This flag is only valid on vertex and  index buffers. The resource must have been created with write access (see <strong>D3D11_CPU_ACCESS_WRITE</strong>).  Cannot be used on a resource created with the <strong>D3D11_BIND_CONSTANT_BUFFER</strong> flag.</p> <strong>Note</strong>??The Direct3D 11.1 runtime, which is available starting with Windows?8, enables  mapping dynamic constant buffers and shader resource views (SRVs) of dynamic buffers with <strong>D3D11_MAP_WRITE_NO_OVERWRITE</strong>.  The Direct3D 11 and earlier runtimes limited mapping to vertex or index buffers. To determine if a Direct3D device supports these features, call <strong>ID3D11Device::CheckFeatureSupport</strong> with <strong>D3D11_FEATURE_D3D11_OPTIONS</strong>. <strong>CheckFeatureSupport</strong> fills members of a <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options"/></strong> structure with the device's features. The relevant members here are <strong>MapNoOverwriteOnDynamicConstantBuffer</strong> and <strong>MapNoOverwriteOnDynamicBufferSRV</strong>. ? </dd>
        /// </summary>
        /// <doc-id>ff476181</doc-id>
        /// <unmanaged>D3D11_MAP_WRITE_NO_OVERWRITE</unmanaged>
        /// <unmanaged-short>D3D11_MAP_WRITE_NO_OVERWRITE</unmanaged-short>
        WriteNoOverwrite = unchecked ((System.Int32)(5))}

    /// <summary>
    /// <p>Categories of debug messages. This will identify the category of a message when retrieving a message with <strong>ID3D11InfoQueue::GetMessage</strong> and when adding a message with <strong>ID3D11InfoQueue::AddMessage</strong>. When creating an <strong>info queue filter</strong>, these values can be used to allow or deny any categories of messages to pass through the storage and retrieval filters.</p>
    /// </summary>
    /// <remarks>
    /// <p>This is part of the Information Queue feature. See <strong><see cref = "SharpDX.Direct3D11.InfoQueue"/> Interface</strong>.</p>
    /// </remarks>
    /// <doc-id>ff476185</doc-id>
    /// <unmanaged>D3D11_MESSAGE_CATEGORY</unmanaged>
    /// <unmanaged-short>D3D11_MESSAGE_CATEGORY</unmanaged-short>
    public enum MessageCategory : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476185</doc-id>
        /// <unmanaged>D3D11_MESSAGE_CATEGORY_APPLICATION_DEFINED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_CATEGORY_APPLICATION_DEFINED</unmanaged-short>
        ApplicationDefined = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476185</doc-id>
        /// <unmanaged>D3D11_MESSAGE_CATEGORY_MISCELLANEOUS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_CATEGORY_MISCELLANEOUS</unmanaged-short>
        Miscellaneous = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476185</doc-id>
        /// <unmanaged>D3D11_MESSAGE_CATEGORY_INITIALIZATION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_CATEGORY_INITIALIZATION</unmanaged-short>
        Initialization = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476185</doc-id>
        /// <unmanaged>D3D11_MESSAGE_CATEGORY_CLEANUP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_CATEGORY_CLEANUP</unmanaged-short>
        Cleanup = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476185</doc-id>
        /// <unmanaged>D3D11_MESSAGE_CATEGORY_COMPILATION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_CATEGORY_COMPILATION</unmanaged-short>
        Compilation = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476185</doc-id>
        /// <unmanaged>D3D11_MESSAGE_CATEGORY_STATE_CREATION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_CATEGORY_STATE_CREATION</unmanaged-short>
        StateCreation = unchecked ((System.Int32)(5)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476185</doc-id>
        /// <unmanaged>D3D11_MESSAGE_CATEGORY_STATE_SETTING</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_CATEGORY_STATE_SETTING</unmanaged-short>
        StateSetting = unchecked ((System.Int32)(6)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476185</doc-id>
        /// <unmanaged>D3D11_MESSAGE_CATEGORY_STATE_GETTING</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_CATEGORY_STATE_GETTING</unmanaged-short>
        StateGetting = unchecked ((System.Int32)(7)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476185</doc-id>
        /// <unmanaged>D3D11_MESSAGE_CATEGORY_RESOURCE_MANIPULATION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_CATEGORY_RESOURCE_MANIPULATION</unmanaged-short>
        ResourceManipulation = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476185</doc-id>
        /// <unmanaged>D3D11_MESSAGE_CATEGORY_EXECUTION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_CATEGORY_EXECUTION</unmanaged-short>
        Execution = unchecked ((System.Int32)(9)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>ff476185</doc-id>
        /// <unmanaged>D3D11_MESSAGE_CATEGORY_SHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_CATEGORY_SHADER</unmanaged-short>
        Shader = unchecked ((System.Int32)(10))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>D3D11_MESSAGE_ID</unmanaged>
    /// <unmanaged-short>D3D11_MESSAGE_ID</unmanaged-short>
    public enum MessageId : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_UNKNOWN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_UNKNOWN</unmanaged-short>
        MessageIdUnknown = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_HAZARD</unmanaged-short>
        MessageIdDeviceInputAssemblySetVertexBuffersHazard = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_HAZARD</unmanaged-short>
        MessageIdDeviceInputAssemblySetIndexBufferHazard = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_VSSETSHADERRESOURCES_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_VSSETSHADERRESOURCES_HAZARD</unmanaged-short>
        MessageIdDeviceVertexShaderSetShaderResourcesHazard = unchecked ((System.Int32)(3)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_VSSETCONSTANTBUFFERS_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_VSSETCONSTANTBUFFERS_HAZARD</unmanaged-short>
        MessageIdDeviceVertexShaderSetConstantBuffersHazard = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_GSSETSHADERRESOURCES_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_GSSETSHADERRESOURCES_HAZARD</unmanaged-short>
        MessageIdDeviceGeometryShaderSetShaderResourcesHazard = unchecked ((System.Int32)(5)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_GSSETCONSTANTBUFFERS_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_GSSETCONSTANTBUFFERS_HAZARD</unmanaged-short>
        MessageIdDeviceGeometryShaderSetConstantBuffersHazard = unchecked ((System.Int32)(6)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_PSSETSHADERRESOURCES_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_PSSETSHADERRESOURCES_HAZARD</unmanaged-short>
        MessageIdDevicePixelShaderSetShaderResourcesHazard = unchecked ((System.Int32)(7)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_PSSETCONSTANTBUFFERS_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_PSSETCONSTANTBUFFERS_HAZARD</unmanaged-short>
        MessageIdDevicePixelShaderSetConstantBuffersHazard = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETS_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETS_HAZARD</unmanaged-short>
        MessageIdDeviceOutputMergerSetRenderTargetsHazard = unchecked ((System.Int32)(9)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SOSETTARGETS_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SOSETTARGETS_HAZARD</unmanaged-short>
        MessageIdDeviceStreamOutputSetTargetsHazard = unchecked ((System.Int32)(10)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_STRING_FROM_APPLICATION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_STRING_FROM_APPLICATION</unmanaged-short>
        MessageIdStringFromApplication = unchecked ((System.Int32)(11)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_THIS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_THIS</unmanaged-short>
        MessageIdCorruptedThis = unchecked ((System.Int32)(12)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER1</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER1</unmanaged-short>
        MessageIdCorruptedParameter1 = unchecked ((System.Int32)(13)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER2</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER2</unmanaged-short>
        MessageIdCorruptedParameter2 = unchecked ((System.Int32)(14)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER3</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER3</unmanaged-short>
        MessageIdCorruptedParameter3 = unchecked ((System.Int32)(15)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER4</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER4</unmanaged-short>
        MessageIdCorruptedParameter4 = unchecked ((System.Int32)(16)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER5</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER5</unmanaged-short>
        MessageIdCorruptedParameter5 = unchecked ((System.Int32)(17)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER6</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER6</unmanaged-short>
        MessageIdCorruptedParameter6 = unchecked ((System.Int32)(18)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER7</unmanaged-short>
        MessageIdCorruptedParameter7 = unchecked ((System.Int32)(19)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER8</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER8</unmanaged-short>
        MessageIdCorruptedParameter8 = unchecked ((System.Int32)(20)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER9</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER9</unmanaged-short>
        MessageIdCorruptedParameter9 = unchecked ((System.Int32)(21)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER10</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER10</unmanaged-short>
        MessageIdCorruptedParameter10 = unchecked ((System.Int32)(22)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER11</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER11</unmanaged-short>
        MessageIdCorruptedParameter11 = unchecked ((System.Int32)(23)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER12</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER12</unmanaged-short>
        MessageIdCorruptedParameter12 = unchecked ((System.Int32)(24)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER13</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER13</unmanaged-short>
        MessageIdCorruptedParameter13 = unchecked ((System.Int32)(25)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER14</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER14</unmanaged-short>
        MessageIdCorruptedParameter14 = unchecked ((System.Int32)(26)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER15</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_PARAMETER15</unmanaged-short>
        MessageIdCorruptedParameter15 = unchecked ((System.Int32)(27)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CORRUPTED_MULTITHREADING</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CORRUPTED_MULTITHREADING</unmanaged-short>
        MessageIdCorruptedMultithreading = unchecked ((System.Int32)(28)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_MESSAGE_REPORTING_OUTOFMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_MESSAGE_REPORTING_OUTOFMEMORY</unmanaged-short>
        MessageIdMessageReportingOufOfMemory = unchecked ((System.Int32)(29)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_IASETINPUTLAYOUT_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_IASETINPUTLAYOUT_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdInputAssemblySetInputLayoutUnbindDeletingObject = unchecked ((System.Int32)(30)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdInputAssemblySetVertexBuffersUnbindDeletingObject = unchecked ((System.Int32)(31)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_IASETINDEXBUFFER_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_IASETINDEXBUFFER_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdInputAssemblySetIndexBufferUnbindDeletingObject = unchecked ((System.Int32)(32)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VSSETSHADER_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VSSETSHADER_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdVertexShaderSetShaderUnbindDeletingObject = unchecked ((System.Int32)(33)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VSSETSHADERRESOURCES_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VSSETSHADERRESOURCES_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdVertexShaderSetShaderResourcesUnbindDeletingObject = unchecked ((System.Int32)(34)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdVertexShaderSetConstantBuffersUnbindDeletingObject = unchecked ((System.Int32)(35)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VSSETSAMPLERS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VSSETSAMPLERS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdVertexShaderSetSamplersUnbindDeletingObject = unchecked ((System.Int32)(36)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GSSETSHADER_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GSSETSHADER_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdGeometryShaderSetShaderUnbindDeletingObject = unchecked ((System.Int32)(37)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GSSETSHADERRESOURCES_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GSSETSHADERRESOURCES_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdGeometryShaderSetShaderResourcesUnbindDeletingObject = unchecked ((System.Int32)(38)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdGeometryShaderSetConstantBuffersUnbindDeletingObject = unchecked ((System.Int32)(39)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GSSETSAMPLERS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GSSETSAMPLERS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdGeometryShaderSetSamplersUnbindDeletingObject = unchecked ((System.Int32)(40)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SOSETTARGETS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SOSETTARGETS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdStreamOutputSetTargetsUnbindDeletingObject = unchecked ((System.Int32)(41)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_PSSETSHADER_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_PSSETSHADER_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdPixelShaderSetShaderUnbindDeletingObject = unchecked ((System.Int32)(42)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_PSSETSHADERRESOURCES_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_PSSETSHADERRESOURCES_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdPixelShaderSetShaderResourcesUnbindDeletingObject = unchecked ((System.Int32)(43)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdPixelShaderSetConstantBuffersUnbindDeletingObject = unchecked ((System.Int32)(44)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_PSSETSAMPLERS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_PSSETSAMPLERS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdPixelShaderSetSamplersUnbindDeletingObject = unchecked ((System.Int32)(45)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RSSETSTATE_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RSSETSTATE_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdRasterizerSetStateUnbindDeletingObject = unchecked ((System.Int32)(46)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_OMSETBLENDSTATE_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_OMSETBLENDSTATE_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdOutputMergerSetBlendStateUnbindDeletingObject = unchecked ((System.Int32)(47)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_OMSETDEPTHSTENCILSTATE_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_OMSETDEPTHSTENCILSTATE_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdOutputMergerSetDepthStencilStateUnbindDeletingObject = unchecked ((System.Int32)(48)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_OMSETRENDERTARGETS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_OMSETRENDERTARGETS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdOutputMergerSetRenderTargetsUnbindDeletingObject = unchecked ((System.Int32)(49)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SETPREDICATION_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SETPREDICATION_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdSetPredicationUnbindDeletingObject = unchecked ((System.Int32)(50)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETPRIVATEDATA_MOREDATA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETPRIVATEDATA_MOREDATA</unmanaged-short>
        MessageIdGetPrivateDataMoreData = unchecked ((System.Int32)(51)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDFREEDATA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDFREEDATA</unmanaged-short>
        MessageIdSetPrivateDataInvalidFreeData = unchecked ((System.Int32)(52)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDIUNKNOWN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDIUNKNOWN</unmanaged-short>
        MessageIdSetPrivateDataInvalidIUnknown = unchecked ((System.Int32)(53)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDFLAGS</unmanaged-short>
        MessageIdSetPrivateDataInvalidFlags = unchecked ((System.Int32)(54)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SETPRIVATEDATA_CHANGINGPARAMS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SETPRIVATEDATA_CHANGINGPARAMS</unmanaged-short>
        MessageIdSetPrivateDataChangingparams = unchecked ((System.Int32)(55)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SETPRIVATEDATA_OUTOFMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SETPRIVATEDATA_OUTOFMEMORY</unmanaged-short>
        MessageIdSetPrivateDataOufOfMemory = unchecked ((System.Int32)(56)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDFORMAT</unmanaged-short>
        MessageIdCreateBufferUnrecognizedFormat = unchecked ((System.Int32)(57)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDSAMPLES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDSAMPLES</unmanaged-short>
        MessageIdCreateBufferInvalidSamples = unchecked ((System.Int32)(58)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDUSAGE</unmanaged-short>
        MessageIdCreateBufferUnrecognizedUsage = unchecked ((System.Int32)(59)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDBINDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDBINDFLAGS</unmanaged-short>
        MessageIdCreateBufferUnrecognizedBindFlags = unchecked ((System.Int32)(60)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDCPUACCESSFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDCPUACCESSFLAGS</unmanaged-short>
        MessageIdCreateBufferUnrecognizedCpuAccessFlags = unchecked ((System.Int32)(61)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDMISCFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDMISCFLAGS</unmanaged-short>
        MessageIdCreateBufferUnrecognizedMiscFlags = unchecked ((System.Int32)(62)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDCPUACCESSFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDCPUACCESSFLAGS</unmanaged-short>
        MessageIdCreateBufferInvalidCpuAccessFlags = unchecked ((System.Int32)(63)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDBINDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDBINDFLAGS</unmanaged-short>
        MessageIdCreateBufferInvalidBindFlags = unchecked ((System.Int32)(64)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDINITIALDATA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDINITIALDATA</unmanaged-short>
        MessageIdCreateBufferInvalidInitialData = unchecked ((System.Int32)(65)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDDIMENSIONS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDDIMENSIONS</unmanaged-short>
        MessageIdCreateBufferInvalidDimensions = unchecked ((System.Int32)(66)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDMIPLEVELS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDMIPLEVELS</unmanaged-short>
        MessageIdCreateBufferInvalidMipLevels = unchecked ((System.Int32)(67)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDMISCFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDMISCFLAGS</unmanaged-short>
        MessageIdCreateBufferInvalidMiscFlags = unchecked ((System.Int32)(68)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDARG_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDARG_RETURN</unmanaged-short>
        MessageIdCreateBufferInvalidArgumentReturn = unchecked ((System.Int32)(69)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateBufferOufOfMemoryReturn = unchecked ((System.Int32)(70)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_NULLDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_NULLDESC</unmanaged-short>
        MessageIdCreateBufferNullDescription = unchecked ((System.Int32)(71)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDCONSTANTBUFFERBINDINGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDCONSTANTBUFFERBINDINGS</unmanaged-short>
        MessageIdCreateBufferInvalidConstantBufferBindingS = unchecked ((System.Int32)(72)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_LARGEALLOCATION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_LARGEALLOCATION</unmanaged-short>
        MessageIdCreateBufferLargeAllocation = unchecked ((System.Int32)(73)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDFORMAT</unmanaged-short>
        MessageIdCreateTexture1DUnrecognizedFormat = unchecked ((System.Int32)(74)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_UNSUPPORTEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_UNSUPPORTEDFORMAT</unmanaged-short>
        MessageIdCreateTexture1DUnsupportedFormat = unchecked ((System.Int32)(75)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDSAMPLES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDSAMPLES</unmanaged-short>
        MessageIdCreateTexture1DInvalidSamples = unchecked ((System.Int32)(76)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDUSAGE</unmanaged-short>
        MessageIdCreateTexture1DUnrecognizedUsage = unchecked ((System.Int32)(77)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDBINDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDBINDFLAGS</unmanaged-short>
        MessageIdCreateTexture1DUnrecognizedBindFlags = unchecked ((System.Int32)(78)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDCPUACCESSFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDCPUACCESSFLAGS</unmanaged-short>
        MessageIdCreateTexture1DUnrecognizedCpuAccessFlags = unchecked ((System.Int32)(79)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDMISCFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDMISCFLAGS</unmanaged-short>
        MessageIdCreateTexture1DUnrecognizedMiscFlags = unchecked ((System.Int32)(80)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDCPUACCESSFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDCPUACCESSFLAGS</unmanaged-short>
        MessageIdCreateTexture1DInvalidCpuAccessFlags = unchecked ((System.Int32)(81)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDBINDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDBINDFLAGS</unmanaged-short>
        MessageIdCreateTexture1DInvalidBindFlags = unchecked ((System.Int32)(82)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDINITIALDATA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDINITIALDATA</unmanaged-short>
        MessageIdCreateTexture1DInvalidInitialData = unchecked ((System.Int32)(83)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDDIMENSIONS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDDIMENSIONS</unmanaged-short>
        MessageIdCreateTexture1DInvalidDimensions = unchecked ((System.Int32)(84)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDMIPLEVELS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDMIPLEVELS</unmanaged-short>
        MessageIdCreateTexture1DInvalidMipLevels = unchecked ((System.Int32)(85)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDMISCFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDMISCFLAGS</unmanaged-short>
        MessageIdCreateTexture1DInvalidMiscFlags = unchecked ((System.Int32)(86)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDARG_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDARG_RETURN</unmanaged-short>
        MessageIdCreateTexture1DInvalidArgumentReturn = unchecked ((System.Int32)(87)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateTexture1DOufOfMemoryReturn = unchecked ((System.Int32)(88)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_NULLDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_NULLDESC</unmanaged-short>
        MessageIdCreateTexture1DNullDescription = unchecked ((System.Int32)(89)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_LARGEALLOCATION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_LARGEALLOCATION</unmanaged-short>
        MessageIdCreateTexture1DLargeAllocation = unchecked ((System.Int32)(90)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDFORMAT</unmanaged-short>
        MessageIdCreateTexture2DUnrecognizedFormat = unchecked ((System.Int32)(91)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_UNSUPPORTEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_UNSUPPORTEDFORMAT</unmanaged-short>
        MessageIdCreateTexture2DUnsupportedFormat = unchecked ((System.Int32)(92)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDSAMPLES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDSAMPLES</unmanaged-short>
        MessageIdCreateTexture2DInvalidSamples = unchecked ((System.Int32)(93)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDUSAGE</unmanaged-short>
        MessageIdCreateTexture2DUnrecognizedUsage = unchecked ((System.Int32)(94)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDBINDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDBINDFLAGS</unmanaged-short>
        MessageIdCreateTexture2DUnrecognizedBindFlags = unchecked ((System.Int32)(95)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDCPUACCESSFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDCPUACCESSFLAGS</unmanaged-short>
        MessageIdCreateTexture2DUnrecognizedCpuAccessFlags = unchecked ((System.Int32)(96)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDMISCFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDMISCFLAGS</unmanaged-short>
        MessageIdCreateTexture2DUnrecognizedMiscFlags = unchecked ((System.Int32)(97)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDCPUACCESSFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDCPUACCESSFLAGS</unmanaged-short>
        MessageIdCreateTexture2DInvalidCpuAccessFlags = unchecked ((System.Int32)(98)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDBINDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDBINDFLAGS</unmanaged-short>
        MessageIdCreateTexture2DInvalidBindFlags = unchecked ((System.Int32)(99)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDINITIALDATA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDINITIALDATA</unmanaged-short>
        MessageIdCreateTexture2DInvalidInitialData = unchecked ((System.Int32)(100)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDDIMENSIONS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDDIMENSIONS</unmanaged-short>
        MessageIdCreateTexture2DInvalidDimensions = unchecked ((System.Int32)(101)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDMIPLEVELS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDMIPLEVELS</unmanaged-short>
        MessageIdCreateTexture2DInvalidMipLevels = unchecked ((System.Int32)(102)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDMISCFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDMISCFLAGS</unmanaged-short>
        MessageIdCreateTexture2DInvalidMiscFlags = unchecked ((System.Int32)(103)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDARG_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDARG_RETURN</unmanaged-short>
        MessageIdCreateTexture2DInvalidArgumentReturn = unchecked ((System.Int32)(104)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateTexture2DOufOfMemoryReturn = unchecked ((System.Int32)(105)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_NULLDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_NULLDESC</unmanaged-short>
        MessageIdCreateTexture2DNullDescription = unchecked ((System.Int32)(106)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_LARGEALLOCATION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_LARGEALLOCATION</unmanaged-short>
        MessageIdCreateTexture2DLargeAllocation = unchecked ((System.Int32)(107)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDFORMAT</unmanaged-short>
        MessageIdCreateTexture3DUnrecognizedFormat = unchecked ((System.Int32)(108)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_UNSUPPORTEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_UNSUPPORTEDFORMAT</unmanaged-short>
        MessageIdCreateTexture3DUnsupportedFormat = unchecked ((System.Int32)(109)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDSAMPLES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDSAMPLES</unmanaged-short>
        MessageIdCreateTexture3DInvalidSamples = unchecked ((System.Int32)(110)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDUSAGE</unmanaged-short>
        MessageIdCreateTexture3DUnrecognizedUsage = unchecked ((System.Int32)(111)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDBINDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDBINDFLAGS</unmanaged-short>
        MessageIdCreateTexture3DUnrecognizedBindFlags = unchecked ((System.Int32)(112)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDCPUACCESSFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDCPUACCESSFLAGS</unmanaged-short>
        MessageIdCreateTexture3DUnrecognizedCpuAccessFlags = unchecked ((System.Int32)(113)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDMISCFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDMISCFLAGS</unmanaged-short>
        MessageIdCreateTexture3DUnrecognizedMiscFlags = unchecked ((System.Int32)(114)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDCPUACCESSFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDCPUACCESSFLAGS</unmanaged-short>
        MessageIdCreateTexture3DInvalidCpuAccessFlags = unchecked ((System.Int32)(115)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDBINDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDBINDFLAGS</unmanaged-short>
        MessageIdCreateTexture3DInvalidBindFlags = unchecked ((System.Int32)(116)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDINITIALDATA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDINITIALDATA</unmanaged-short>
        MessageIdCreateTexture3DInvalidInitialData = unchecked ((System.Int32)(117)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDDIMENSIONS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDDIMENSIONS</unmanaged-short>
        MessageIdCreateTexture3DInvalidDimensions = unchecked ((System.Int32)(118)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDMIPLEVELS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDMIPLEVELS</unmanaged-short>
        MessageIdCreateTexture3DInvalidMipLevels = unchecked ((System.Int32)(119)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDMISCFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDMISCFLAGS</unmanaged-short>
        MessageIdCreateTexture3DInvalidMiscFlags = unchecked ((System.Int32)(120)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDARG_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDARG_RETURN</unmanaged-short>
        MessageIdCreateTexture3DInvalidArgumentReturn = unchecked ((System.Int32)(121)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateTexture3DOufOfMemoryReturn = unchecked ((System.Int32)(122)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_NULLDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_NULLDESC</unmanaged-short>
        MessageIdCreateTexture3DNullDescription = unchecked ((System.Int32)(123)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE3D_LARGEALLOCATION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE3D_LARGEALLOCATION</unmanaged-short>
        MessageIdCreateTexture3DLargeAllocation = unchecked ((System.Int32)(124)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_UNRECOGNIZEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_UNRECOGNIZEDFORMAT</unmanaged-short>
        MessageIdCreateShaderResourceViewUnrecognizedFormat = unchecked ((System.Int32)(125)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDESC</unmanaged-short>
        MessageIdCreateShaderResourceViewInvalidDescription = unchecked ((System.Int32)(126)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFORMAT</unmanaged-short>
        MessageIdCreateShaderResourceViewInvalidFormat = unchecked ((System.Int32)(127)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDIMENSIONS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDIMENSIONS</unmanaged-short>
        MessageIdCreateShaderResourceViewInvalidDimensions = unchecked ((System.Int32)(128)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDRESOURCE</unmanaged-short>
        MessageIdCreateShaderResourceViewInvalidResource = unchecked ((System.Int32)(129)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_TOOMANYOBJECTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_TOOMANYOBJECTS</unmanaged-short>
        MessageIdCreateShaderResourceViewTooManyObjects = unchecked ((System.Int32)(130)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDARG_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDARG_RETURN</unmanaged-short>
        MessageIdCreateShaderResourceViewInvalidArgumentReturn = unchecked ((System.Int32)(131)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateShaderResourceViewOufOfMemoryReturn = unchecked ((System.Int32)(132)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_UNRECOGNIZEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_UNRECOGNIZEDFORMAT</unmanaged-short>
        MessageIdCreateRenderTargetViewUnrecognizedFormat = unchecked ((System.Int32)(133)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_UNSUPPORTEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_UNSUPPORTEDFORMAT</unmanaged-short>
        MessageIdCreateRenderTargetViewUnsupportedFormat = unchecked ((System.Int32)(134)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDESC</unmanaged-short>
        MessageIdCreateRenderTargetViewInvalidDescription = unchecked ((System.Int32)(135)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDFORMAT</unmanaged-short>
        MessageIdCreateRenderTargetViewInvalidFormat = unchecked ((System.Int32)(136)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDIMENSIONS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDIMENSIONS</unmanaged-short>
        MessageIdCreateRenderTargetViewInvalidDimensions = unchecked ((System.Int32)(137)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDRESOURCE</unmanaged-short>
        MessageIdCreateRenderTargetViewInvalidResource = unchecked ((System.Int32)(138)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_TOOMANYOBJECTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_TOOMANYOBJECTS</unmanaged-short>
        MessageIdCreateRenderTargetViewTooManyObjects = unchecked ((System.Int32)(139)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDARG_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDARG_RETURN</unmanaged-short>
        MessageIdCreateRenderTargetViewInvalidArgumentReturn = unchecked ((System.Int32)(140)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateRenderTargetViewOufOfMemoryReturn = unchecked ((System.Int32)(141)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_UNRECOGNIZEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_UNRECOGNIZEDFORMAT</unmanaged-short>
        MessageIdCreateDepthStencilViewUnrecognizedFormat = unchecked ((System.Int32)(142)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDESC</unmanaged-short>
        MessageIdCreateDepthStencilViewInvalidDescription = unchecked ((System.Int32)(143)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFORMAT</unmanaged-short>
        MessageIdCreateDepthStencilViewInvalidFormat = unchecked ((System.Int32)(144)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDIMENSIONS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDIMENSIONS</unmanaged-short>
        MessageIdCreateDepthStencilViewInvalidDimensions = unchecked ((System.Int32)(145)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDRESOURCE</unmanaged-short>
        MessageIdCreateDepthStencilViewInvalidResource = unchecked ((System.Int32)(146)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_TOOMANYOBJECTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_TOOMANYOBJECTS</unmanaged-short>
        MessageIdCreateDepthStencilViewTooManyObjects = unchecked ((System.Int32)(147)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDARG_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDARG_RETURN</unmanaged-short>
        MessageIdCreateDepthStencilViewInvalidArgumentReturn = unchecked ((System.Int32)(148)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateDepthStencilViewOufOfMemoryReturn = unchecked ((System.Int32)(149)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_OUTOFMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_OUTOFMEMORY</unmanaged-short>
        MessageIdCreateInputLayoutOufOfMemory = unchecked ((System.Int32)(150)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TOOMANYELEMENTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TOOMANYELEMENTS</unmanaged-short>
        MessageIdCreateInputLayoutTooManyElements = unchecked ((System.Int32)(151)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDFORMAT</unmanaged-short>
        MessageIdCreateInputLayoutInvalidFormat = unchecked ((System.Int32)(152)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INCOMPATIBLEFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INCOMPATIBLEFORMAT</unmanaged-short>
        MessageIdCreateInputLayoutIncompatibleformat = unchecked ((System.Int32)(153)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOT</unmanaged-short>
        MessageIdCreateInputLayoutInvalidSlot = unchecked ((System.Int32)(154)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDINPUTSLOTCLASS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDINPUTSLOTCLASS</unmanaged-short>
        MessageIdCreateInputLayoutInvalidInputsLotclass = unchecked ((System.Int32)(155)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_STEPRATESLOTCLASSMISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_STEPRATESLOTCLASSMISMATCH</unmanaged-short>
        MessageIdCreateInputLayoutSteprateslotclassmismatch = unchecked ((System.Int32)(156)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOTCLASSCHANGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOTCLASSCHANGE</unmanaged-short>
        MessageIdCreateInputLayoutInvalidSlotClassChange = unchecked ((System.Int32)(157)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSTEPRATECHANGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSTEPRATECHANGE</unmanaged-short>
        MessageIdCreateInputLayoutInvalidStepratechange = unchecked ((System.Int32)(158)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDALIGNMENT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDALIGNMENT</unmanaged-short>
        MessageIdCreateInputLayoutInvalidAlignment = unchecked ((System.Int32)(159)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_DUPLICATESEMANTIC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_DUPLICATESEMANTIC</unmanaged-short>
        MessageIdCreateInputLayoutDuplicatesemantic = unchecked ((System.Int32)(160)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_UNPARSEABLEINPUTSIGNATURE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_UNPARSEABLEINPUTSIGNATURE</unmanaged-short>
        MessageIdCreateInputLayoutUnparseableinputsignature = unchecked ((System.Int32)(161)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_NULLSEMANTIC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_NULLSEMANTIC</unmanaged-short>
        MessageIdCreateInputLayoutNullSemantic = unchecked ((System.Int32)(162)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_MISSINGELEMENT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_MISSINGELEMENT</unmanaged-short>
        MessageIdCreateInputLayoutMissingElement = unchecked ((System.Int32)(163)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_NULLDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_NULLDESC</unmanaged-short>
        MessageIdCreateInputLayoutNullDescription = unchecked ((System.Int32)(164)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVERTEXSHADER_OUTOFMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVERTEXSHADER_OUTOFMEMORY</unmanaged-short>
        MessageIdCreateVertexShaderOufOfMemory = unchecked ((System.Int32)(165)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERBYTECODE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERBYTECODE</unmanaged-short>
        MessageIdCreateVertexShaderInvalidShaderBytecode = unchecked ((System.Int32)(166)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERTYPE</unmanaged-short>
        MessageIdCreateVertexShaderInvalidShaderType = unchecked ((System.Int32)(167)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_OUTOFMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_OUTOFMEMORY</unmanaged-short>
        MessageIdCreateGeometryShaderOufOfMemory = unchecked ((System.Int32)(168)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERBYTECODE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERBYTECODE</unmanaged-short>
        MessageIdCreateGeometryShaderInvalidShaderBytecode = unchecked ((System.Int32)(169)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERTYPE</unmanaged-short>
        MessageIdCreateGeometryShaderInvalidShaderType = unchecked ((System.Int32)(170)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTOFMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTOFMEMORY</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputOufOfMemory = unchecked ((System.Int32)(171)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERBYTECODE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERBYTECODE</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputInvalidShaderBytecode = unchecked ((System.Int32)(172)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputInvalidShaderType = unchecked ((System.Int32)(173)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMENTRIES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMENTRIES</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputInvalidNumentries = unchecked ((System.Int32)(174)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSTREAMSTRIDEUNUSED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSTREAMSTRIDEUNUSED</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputOutputStreamsTrideunused = unchecked ((System.Int32)(175)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDDECL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDDECL</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputUnexpectedDeclaration = unchecked ((System.Int32)(176)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_EXPECTEDDECL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_EXPECTEDDECL</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputExpectedDeclaration = unchecked ((System.Int32)(177)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSLOT0EXPECTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSLOT0EXPECTED</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputOutputSlot0expected = unchecked ((System.Int32)(178)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSLOT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSLOT</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputInvalidOutputSlot = unchecked ((System.Int32)(179)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_ONLYONEELEMENTPERSLOT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_ONLYONEELEMENTPERSLOT</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputOnlyoneelementperslot = unchecked ((System.Int32)(180)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCOMPONENTCOUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCOMPONENTCOUNT</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputInvalidComponentcount = unchecked ((System.Int32)(181)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTARTCOMPONENTANDCOMPONENTCOUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTARTCOMPONENTANDCOMPONENTCOUNT</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputInvalidStartcomponentandcomponentcount = unchecked ((System.Int32)(182)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDGAPDEFINITION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDGAPDEFINITION</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputInvalidGapdefinition = unchecked ((System.Int32)(183)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_REPEATEDOUTPUT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_REPEATEDOUTPUT</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputRepeatedoutput = unchecked ((System.Int32)(184)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSTREAMSTRIDE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSTREAMSTRIDE</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputInvalidOutputStreamsTride = unchecked ((System.Int32)(185)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGSEMANTIC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGSEMANTIC</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputMissingSemantic = unchecked ((System.Int32)(186)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MASKMISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MASKMISMATCH</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputMaskmismatch = unchecked ((System.Int32)(187)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_CANTHAVEONLYGAPS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_CANTHAVEONLYGAPS</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputCanthaveonlygaps = unchecked ((System.Int32)(188)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DECLTOOCOMPLEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DECLTOOCOMPLEX</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputDeclarationTooComplex = unchecked ((System.Int32)(189)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGOUTPUTSIGNATURE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGOUTPUTSIGNATURE</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputMissingOutputSignature = unchecked ((System.Int32)(190)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEPIXELSHADER_OUTOFMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEPIXELSHADER_OUTOFMEMORY</unmanaged-short>
        MessageIdCreatePixelShaderOufOfMemory = unchecked ((System.Int32)(191)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERBYTECODE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERBYTECODE</unmanaged-short>
        MessageIdCreatePixelShaderInvalidShaderBytecode = unchecked ((System.Int32)(192)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERTYPE</unmanaged-short>
        MessageIdCreatePixelShaderInvalidShaderType = unchecked ((System.Int32)(193)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFILLMODE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFILLMODE</unmanaged-short>
        MessageIdCreateRasterizerstateInvalidFillmode = unchecked ((System.Int32)(194)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDCULLMODE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDCULLMODE</unmanaged-short>
        MessageIdCreateRasterizerstateInvalidCullmode = unchecked ((System.Int32)(195)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDDEPTHBIASCLAMP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDDEPTHBIASCLAMP</unmanaged-short>
        MessageIdCreateRasterizerstateInvalidDepthBiasclamp = unchecked ((System.Int32)(196)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDSLOPESCALEDDEPTHBIAS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDSLOPESCALEDDEPTHBIAS</unmanaged-short>
        MessageIdCreateRasterizerstateInvalidSlopescaleddepthbias = unchecked ((System.Int32)(197)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_TOOMANYOBJECTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_TOOMANYOBJECTS</unmanaged-short>
        MessageIdCreateRasterizerstateTooManyObjects = unchecked ((System.Int32)(198)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_NULLDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_NULLDESC</unmanaged-short>
        MessageIdCreateRasterizerstateNullDescription = unchecked ((System.Int32)(199)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHWRITEMASK</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHWRITEMASK</unmanaged-short>
        MessageIdCreateDepthStencilStateInvalidDepthWriteMask = unchecked ((System.Int32)(200)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHFUNC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHFUNC</unmanaged-short>
        MessageIdCreateDepthStencilStateInvalidDepthFunction = unchecked ((System.Int32)(201)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFAILOP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFAILOP</unmanaged-short>
        MessageIdCreateDepthStencilStateInvalidFrontfacestencilfailop = unchecked ((System.Int32)(202)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILZFAILOP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILZFAILOP</unmanaged-short>
        MessageIdCreateDepthStencilStateInvalidFrontfacestencilzfailop = unchecked ((System.Int32)(203)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILPASSOP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILPASSOP</unmanaged-short>
        MessageIdCreateDepthStencilStateInvalidFrontfacestencilpassop = unchecked ((System.Int32)(204)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFUNC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFUNC</unmanaged-short>
        MessageIdCreateDepthStencilStateInvalidFrontfacestencilfunc = unchecked ((System.Int32)(205)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFAILOP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFAILOP</unmanaged-short>
        MessageIdCreateDepthStencilStateInvalidBackfaceStencilFailop = unchecked ((System.Int32)(206)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILZFAILOP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILZFAILOP</unmanaged-short>
        MessageIdCreateDepthStencilStateInvalidBackfaceStencilZfailop = unchecked ((System.Int32)(207)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILPASSOP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILPASSOP</unmanaged-short>
        MessageIdCreateDepthStencilStateInvalidBackfaceStencilPassop = unchecked ((System.Int32)(208)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFUNC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFUNC</unmanaged-short>
        MessageIdCreateDepthStencilStateInvalidBackfaceStencilFunction = unchecked ((System.Int32)(209)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_TOOMANYOBJECTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_TOOMANYOBJECTS</unmanaged-short>
        MessageIdCreateDepthStencilStateTooManyObjects = unchecked ((System.Int32)(210)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_NULLDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_NULLDESC</unmanaged-short>
        MessageIdCreateDepthStencilStateNullDescription = unchecked ((System.Int32)(211)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLEND</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLEND</unmanaged-short>
        MessageIdCreateBlendStateInvalidSourceBlend = unchecked ((System.Int32)(212)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLEND</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLEND</unmanaged-short>
        MessageIdCreateBlendStateInvalidDestinationBlend = unchecked ((System.Int32)(213)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOP</unmanaged-short>
        MessageIdCreateBlendStateInvalidBlendOperation = unchecked ((System.Int32)(214)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLENDALPHA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLENDALPHA</unmanaged-short>
        MessageIdCreateBlendStateInvalidSourceBlendAlpha = unchecked ((System.Int32)(215)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLENDALPHA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLENDALPHA</unmanaged-short>
        MessageIdCreateBlendStateInvalidDestinationBlendAlpha = unchecked ((System.Int32)(216)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOPALPHA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOPALPHA</unmanaged-short>
        MessageIdCreateBlendStateInvalidBlendOperationAlpha = unchecked ((System.Int32)(217)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDRENDERTARGETWRITEMASK</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDRENDERTARGETWRITEMASK</unmanaged-short>
        MessageIdCreateBlendStateInvalidRenderTargetWriteMask = unchecked ((System.Int32)(218)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_TOOMANYOBJECTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_TOOMANYOBJECTS</unmanaged-short>
        MessageIdCreateBlendStateTooManyObjects = unchecked ((System.Int32)(219)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_NULLDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_NULLDESC</unmanaged-short>
        MessageIdCreateBlendStateNullDescription = unchecked ((System.Int32)(220)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDFILTER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDFILTER</unmanaged-short>
        MessageIdCreateSamplerStateInvalidFilter = unchecked ((System.Int32)(221)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSU</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSU</unmanaged-short>
        MessageIdCreateSamplerStateInvalidAddressU = unchecked ((System.Int32)(222)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSV</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSV</unmanaged-short>
        MessageIdCreateSamplerStateInvalidAddressV = unchecked ((System.Int32)(223)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSW</unmanaged-short>
        MessageIdCreateSamplerStateInvalidAddressW = unchecked ((System.Int32)(224)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMIPLODBIAS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMIPLODBIAS</unmanaged-short>
        MessageIdCreateSamplerStateInvalidMiplodbias = unchecked ((System.Int32)(225)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXANISOTROPY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXANISOTROPY</unmanaged-short>
        MessageIdCreateSamplerStateInvalidMaximumAnisotropy = unchecked ((System.Int32)(226)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDCOMPARISONFUNC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDCOMPARISONFUNC</unmanaged-short>
        MessageIdCreateSamplerStateInvalidComparisonfunc = unchecked ((System.Int32)(227)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMINLOD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMINLOD</unmanaged-short>
        MessageIdCreateSamplerStateInvalidMinimumLod = unchecked ((System.Int32)(228)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXLOD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXLOD</unmanaged-short>
        MessageIdCreateSamplerStateInvalidMaximumLod = unchecked ((System.Int32)(229)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_TOOMANYOBJECTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_TOOMANYOBJECTS</unmanaged-short>
        MessageIdCreateSamplerStateTooManyObjects = unchecked ((System.Int32)(230)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NULLDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NULLDESC</unmanaged-short>
        MessageIdCreateSamplerStateNullDescription = unchecked ((System.Int32)(231)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDQUERY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDQUERY</unmanaged-short>
        MessageIdCreateQueryOrpredicateInvalidQuery = unchecked ((System.Int32)(232)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDMISCFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDMISCFLAGS</unmanaged-short>
        MessageIdCreateQueryOrpredicateInvalidMiscFlags = unchecked ((System.Int32)(233)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_UNEXPECTEDMISCFLAG</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_UNEXPECTEDMISCFLAG</unmanaged-short>
        MessageIdCreateQueryOrpredicateUnexpectedMiscFlags = unchecked ((System.Int32)(234)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_NULLDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_NULLDESC</unmanaged-short>
        MessageIdCreateQueryOrpredicateNullDescription = unchecked ((System.Int32)(235)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNRECOGNIZED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNRECOGNIZED</unmanaged-short>
        MessageIdDeviceInputAssemblySetPrimitivetopologyTopologyUnrecognized = unchecked ((System.Int32)(236)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNDEFINED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNDEFINED</unmanaged-short>
        MessageIdDeviceInputAssemblySetPrimitivetopologyTopologyUndefined = unchecked ((System.Int32)(237)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_INVALIDBUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_INVALIDBUFFER</unmanaged-short>
        MessageIdInputAssemblySetVertexBuffersInvalidBuffer = unchecked ((System.Int32)(238)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_OFFSET_TOO_LARGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_OFFSET_TOO_LARGE</unmanaged-short>
        MessageIdDeviceInputAssemblySetVertexBuffersOffsetTooLarge = unchecked ((System.Int32)(239)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDeviceInputAssemblySetVertexBuffersBuffersEmpty = unchecked ((System.Int32)(240)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_IASETINDEXBUFFER_INVALIDBUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_IASETINDEXBUFFER_INVALIDBUFFER</unmanaged-short>
        MessageIdInputAssemblySetIndexBufferInvalidBuffer = unchecked ((System.Int32)(241)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_FORMAT_INVALID</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_FORMAT_INVALID</unmanaged-short>
        MessageIdDeviceInputAssemblySetIndexBufferFormatInvalid = unchecked ((System.Int32)(242)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_OFFSET_TOO_LARGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_OFFSET_TOO_LARGE</unmanaged-short>
        MessageIdDeviceInputAssemblySetIndexBufferOffsetTooLarge = unchecked ((System.Int32)(243)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_OFFSET_UNALIGNED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_OFFSET_UNALIGNED</unmanaged-short>
        MessageIdDeviceInputAssemblySetIndexBufferOffsetUnaligned = unchecked ((System.Int32)(244)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_VSSETSHADERRESOURCES_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_VSSETSHADERRESOURCES_VIEWS_EMPTY</unmanaged-short>
        MessageIdDeviceVertexShaderSetShaderResourcesViewsEmpty = unchecked ((System.Int32)(245)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_INVALIDBUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_INVALIDBUFFER</unmanaged-short>
        MessageIdVertexShaderSetConstantBuffersInvalidBuffer = unchecked ((System.Int32)(246)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_VSSETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_VSSETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDeviceVertexShaderSetConstantBuffersBuffersEmpty = unchecked ((System.Int32)(247)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_VSSETSAMPLERS_SAMPLERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_VSSETSAMPLERS_SAMPLERS_EMPTY</unmanaged-short>
        MessageIdDeviceVertexShaderSetSamplersSamplersEmpty = unchecked ((System.Int32)(248)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_GSSETSHADERRESOURCES_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_GSSETSHADERRESOURCES_VIEWS_EMPTY</unmanaged-short>
        MessageIdDeviceGeometryShaderSetShaderResourcesViewsEmpty = unchecked ((System.Int32)(249)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_INVALIDBUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_INVALIDBUFFER</unmanaged-short>
        MessageIdGeometryShaderSetConstantBuffersInvalidBuffer = unchecked ((System.Int32)(250)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_GSSETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_GSSETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDeviceGeometryShaderSetConstantBuffersBuffersEmpty = unchecked ((System.Int32)(251)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_GSSETSAMPLERS_SAMPLERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_GSSETSAMPLERS_SAMPLERS_EMPTY</unmanaged-short>
        MessageIdDeviceGeometryShaderSetSamplersSamplersEmpty = unchecked ((System.Int32)(252)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SOSETTARGETS_INVALIDBUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SOSETTARGETS_INVALIDBUFFER</unmanaged-short>
        MessageIdStreamOutputSetTargetsInvalidBuffer = unchecked ((System.Int32)(253)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SOSETTARGETS_OFFSET_UNALIGNED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SOSETTARGETS_OFFSET_UNALIGNED</unmanaged-short>
        MessageIdDeviceStreamOutputSetTargetsOffsetUnaligned = unchecked ((System.Int32)(254)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_PSSETSHADERRESOURCES_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_PSSETSHADERRESOURCES_VIEWS_EMPTY</unmanaged-short>
        MessageIdDevicePixelShaderSetShaderResourcesViewsEmpty = unchecked ((System.Int32)(255)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_INVALIDBUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_INVALIDBUFFER</unmanaged-short>
        MessageIdPixelShaderSetConstantBuffersInvalidBuffer = unchecked ((System.Int32)(256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_PSSETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_PSSETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDevicePixelShaderSetConstantBuffersBuffersEmpty = unchecked ((System.Int32)(257)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_PSSETSAMPLERS_SAMPLERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_PSSETSAMPLERS_SAMPLERS_EMPTY</unmanaged-short>
        MessageIdDevicePixelShaderSetSamplersSamplersEmpty = unchecked ((System.Int32)(258)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_INVALIDVIEWPORT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_INVALIDVIEWPORT</unmanaged-short>
        MessageIdDeviceRasterizerSetViewportsInvalidViewport = unchecked ((System.Int32)(259)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_INVALIDSCISSOR</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_INVALIDSCISSOR</unmanaged-short>
        MessageIdDeviceRasterizerSetScissorRectanglesInvalidScissor = unchecked ((System.Int32)(260)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CLEARRENDERTARGETVIEW_DENORMFLUSH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CLEARRENDERTARGETVIEW_DENORMFLUSH</unmanaged-short>
        MessageIdClearrendertargetviewDenormflush = unchecked ((System.Int32)(261)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DENORMFLUSH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DENORMFLUSH</unmanaged-short>
        MessageIdCleardepthstencilviewDenormflush = unchecked ((System.Int32)(262)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALID</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALID</unmanaged-short>
        MessageIdCleardepthstencilviewInvalid = unchecked ((System.Int32)(263)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IAGETVERTEXBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IAGETVERTEXBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDeviceInputAssemblyGetVertexBuffersBuffersEmpty = unchecked ((System.Int32)(264)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_VSGETSHADERRESOURCES_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_VSGETSHADERRESOURCES_VIEWS_EMPTY</unmanaged-short>
        MessageIdDeviceVertexShaderGetShaderResourcesViewsEmpty = unchecked ((System.Int32)(265)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_VSGETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_VSGETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDeviceVertexShaderGetConstantBuffersBuffersEmpty = unchecked ((System.Int32)(266)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_VSGETSAMPLERS_SAMPLERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_VSGETSAMPLERS_SAMPLERS_EMPTY</unmanaged-short>
        MessageIdDeviceVertexShaderGetSamplersSamplersEmpty = unchecked ((System.Int32)(267)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_GSGETSHADERRESOURCES_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_GSGETSHADERRESOURCES_VIEWS_EMPTY</unmanaged-short>
        MessageIdDeviceGeometryShaderGetShaderResourcesViewsEmpty = unchecked ((System.Int32)(268)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_GSGETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_GSGETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDeviceGeometryShaderGetConstantBuffersBuffersEmpty = unchecked ((System.Int32)(269)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_GSGETSAMPLERS_SAMPLERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_GSGETSAMPLERS_SAMPLERS_EMPTY</unmanaged-short>
        MessageIdDeviceGeometryShaderGetSamplersSamplersEmpty = unchecked ((System.Int32)(270)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SOGETTARGETS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SOGETTARGETS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDeviceStreamOutputGetTargetsBuffersEmpty = unchecked ((System.Int32)(271)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_PSGETSHADERRESOURCES_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_PSGETSHADERRESOURCES_VIEWS_EMPTY</unmanaged-short>
        MessageIdDevicePixelShaderGetShaderResourcesViewsEmpty = unchecked ((System.Int32)(272)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_PSGETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_PSGETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDevicePixelShaderGetConstantBuffersBuffersEmpty = unchecked ((System.Int32)(273)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_PSGETSAMPLERS_SAMPLERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_PSGETSAMPLERS_SAMPLERS_EMPTY</unmanaged-short>
        MessageIdDevicePixelShaderGetSamplersSamplersEmpty = unchecked ((System.Int32)(274)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_RSGETVIEWPORTS_VIEWPORTS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_RSGETVIEWPORTS_VIEWPORTS_EMPTY</unmanaged-short>
        MessageIdDeviceRasterizerGetViewportsViewportsEmpty = unchecked ((System.Int32)(275)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_RSGETSCISSORRECTS_RECTS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_RSGETSCISSORRECTS_RECTS_EMPTY</unmanaged-short>
        MessageIdDeviceRasterizerGetScissorRectanglesRectanglesEmpty = unchecked ((System.Int32)(276)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_GENERATEMIPS_RESOURCE_INVALID</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_GENERATEMIPS_RESOURCE_INVALID</unmanaged-short>
        MessageIdDeviceGeneratemipsResourceInvalid = unchecked ((System.Int32)(277)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDDESTINATIONSUBRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDDESTINATIONSUBRESOURCE</unmanaged-short>
        MessageIdCopySubResourceRegionInvalidDestinationSubResource = unchecked ((System.Int32)(278)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCESUBRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCESUBRESOURCE</unmanaged-short>
        MessageIdCopySubResourceRegionInvalidSourceSubResource = unchecked ((System.Int32)(279)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCEBOX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCEBOX</unmanaged-short>
        MessageIdCopySubResourceRegionInvalidSourceBox = unchecked ((System.Int32)(280)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCE</unmanaged-short>
        MessageIdCopySubResourceRegionInvalidSource = unchecked ((System.Int32)(281)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDDESTINATIONSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDDESTINATIONSTATE</unmanaged-short>
        MessageIdCopySubResourceRegionInvalidDestinationState = unchecked ((System.Int32)(282)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCESTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCESTATE</unmanaged-short>
        MessageIdCopySubResourceRegionInvalidSourceState = unchecked ((System.Int32)(283)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCE</unmanaged-short>
        MessageIdCopyResourceInvalidSource = unchecked ((System.Int32)(284)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDDESTINATIONSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDDESTINATIONSTATE</unmanaged-short>
        MessageIdCopyResourceInvalidDestinationState = unchecked ((System.Int32)(285)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCESTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCESTATE</unmanaged-short>
        MessageIdCopyResourceInvalidSourceState = unchecked ((System.Int32)(286)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSUBRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSUBRESOURCE</unmanaged-short>
        MessageIdUpdatesUbresourceInvalidDestinationSubResource = unchecked ((System.Int32)(287)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONBOX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONBOX</unmanaged-short>
        MessageIdUpdatesUbresourceInvalidDestinationBox = unchecked ((System.Int32)(288)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSTATE</unmanaged-short>
        MessageIdUpdatesUbresourceInvalidDestinationState = unchecked ((System.Int32)(289)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_INVALID</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_INVALID</unmanaged-short>
        MessageIdDeviceResolvesubresourceDestinationInvalid = unchecked ((System.Int32)(290)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_SUBRESOURCE_INVALID</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_SUBRESOURCE_INVALID</unmanaged-short>
        MessageIdDeviceResolvesubresourceDestinationSubResourceInvalid = unchecked ((System.Int32)(291)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_INVALID</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_INVALID</unmanaged-short>
        MessageIdDeviceResolvesubresourceSourceInvalid = unchecked ((System.Int32)(292)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_SUBRESOURCE_INVALID</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_SUBRESOURCE_INVALID</unmanaged-short>
        MessageIdDeviceResolvesubresourceSourceSubResourceInvalid = unchecked ((System.Int32)(293)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_FORMAT_INVALID</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_FORMAT_INVALID</unmanaged-short>
        MessageIdDeviceResolvesubresourceFormatInvalid = unchecked ((System.Int32)(294)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_BUFFER_MAP_INVALIDMAPTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_BUFFER_MAP_INVALIDMAPTYPE</unmanaged-short>
        MessageIdBufferMapInvalidMaptype = unchecked ((System.Int32)(295)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_BUFFER_MAP_INVALIDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_BUFFER_MAP_INVALIDFLAGS</unmanaged-short>
        MessageIdBufferMapInvalidFlags = unchecked ((System.Int32)(296)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_BUFFER_MAP_ALREADYMAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_BUFFER_MAP_ALREADYMAPPED</unmanaged-short>
        MessageIdBufferMapAlreadymapped = unchecked ((System.Int32)(297)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_BUFFER_MAP_DEVICEREMOVED_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_BUFFER_MAP_DEVICEREMOVED_RETURN</unmanaged-short>
        MessageIdBufferMapDeviceremovedReturn = unchecked ((System.Int32)(298)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_BUFFER_UNMAP_NOTMAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_BUFFER_UNMAP_NOTMAPPED</unmanaged-short>
        MessageIdBufferUnmapNotMapped = unchecked ((System.Int32)(299)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDMAPTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDMAPTYPE</unmanaged-short>
        MessageIdTexture1DMapInvalidMaptype = unchecked ((System.Int32)(300)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDSUBRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDSUBRESOURCE</unmanaged-short>
        MessageIdTexture1DMapInvalidSubResource = unchecked ((System.Int32)(301)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDFLAGS</unmanaged-short>
        MessageIdTexture1DMapInvalidFlags = unchecked ((System.Int32)(302)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE1D_MAP_ALREADYMAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE1D_MAP_ALREADYMAPPED</unmanaged-short>
        MessageIdTexture1DMapAlreadymapped = unchecked ((System.Int32)(303)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE1D_MAP_DEVICEREMOVED_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE1D_MAP_DEVICEREMOVED_RETURN</unmanaged-short>
        MessageIdTexture1DMapDeviceremovedReturn = unchecked ((System.Int32)(304)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE1D_UNMAP_INVALIDSUBRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE1D_UNMAP_INVALIDSUBRESOURCE</unmanaged-short>
        MessageIdTexture1DUnmapInvalidSubResource = unchecked ((System.Int32)(305)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE1D_UNMAP_NOTMAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE1D_UNMAP_NOTMAPPED</unmanaged-short>
        MessageIdTexture1DUnmapNotMapped = unchecked ((System.Int32)(306)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDMAPTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDMAPTYPE</unmanaged-short>
        MessageIdTexture2DMapInvalidMaptype = unchecked ((System.Int32)(307)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDSUBRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDSUBRESOURCE</unmanaged-short>
        MessageIdTexture2DMapInvalidSubResource = unchecked ((System.Int32)(308)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDFLAGS</unmanaged-short>
        MessageIdTexture2DMapInvalidFlags = unchecked ((System.Int32)(309)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE2D_MAP_ALREADYMAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE2D_MAP_ALREADYMAPPED</unmanaged-short>
        MessageIdTexture2DMapAlreadymapped = unchecked ((System.Int32)(310)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE2D_MAP_DEVICEREMOVED_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE2D_MAP_DEVICEREMOVED_RETURN</unmanaged-short>
        MessageIdTexture2DMapDeviceremovedReturn = unchecked ((System.Int32)(311)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE2D_UNMAP_INVALIDSUBRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE2D_UNMAP_INVALIDSUBRESOURCE</unmanaged-short>
        MessageIdTexture2DUnmapInvalidSubResource = unchecked ((System.Int32)(312)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE2D_UNMAP_NOTMAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE2D_UNMAP_NOTMAPPED</unmanaged-short>
        MessageIdTexture2DUnmapNotMapped = unchecked ((System.Int32)(313)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDMAPTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDMAPTYPE</unmanaged-short>
        MessageIdTexture3DMapInvalidMaptype = unchecked ((System.Int32)(314)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDSUBRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDSUBRESOURCE</unmanaged-short>
        MessageIdTexture3DMapInvalidSubResource = unchecked ((System.Int32)(315)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDFLAGS</unmanaged-short>
        MessageIdTexture3DMapInvalidFlags = unchecked ((System.Int32)(316)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE3D_MAP_ALREADYMAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE3D_MAP_ALREADYMAPPED</unmanaged-short>
        MessageIdTexture3DMapAlreadymapped = unchecked ((System.Int32)(317)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE3D_MAP_DEVICEREMOVED_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE3D_MAP_DEVICEREMOVED_RETURN</unmanaged-short>
        MessageIdTexture3DMapDeviceremovedReturn = unchecked ((System.Int32)(318)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE3D_UNMAP_INVALIDSUBRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE3D_UNMAP_INVALIDSUBRESOURCE</unmanaged-short>
        MessageIdTexture3DUnmapInvalidSubResource = unchecked ((System.Int32)(319)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXTURE3D_UNMAP_NOTMAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXTURE3D_UNMAP_NOTMAPPED</unmanaged-short>
        MessageIdTexture3DUnmapNotMapped = unchecked ((System.Int32)(320)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_DEPRECATED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_DEPRECATED</unmanaged-short>
        MessageIdCheckFormatSupportFormatDeprecated = unchecked ((System.Int32)(321)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_FORMAT_DEPRECATED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_FORMAT_DEPRECATED</unmanaged-short>
        MessageIdCheckMultisamplequalitylevelsFormatDeprecated = unchecked ((System.Int32)(322)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SETEXCEPTIONMODE_UNRECOGNIZEDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SETEXCEPTIONMODE_UNRECOGNIZEDFLAGS</unmanaged-short>
        MessageIdSetExceptionmodeUnrecognizedFlags = unchecked ((System.Int32)(323)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SETEXCEPTIONMODE_INVALIDARG_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SETEXCEPTIONMODE_INVALIDARG_RETURN</unmanaged-short>
        MessageIdSetExceptionmodeInvalidArgumentReturn = unchecked ((System.Int32)(324)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SETEXCEPTIONMODE_DEVICEREMOVED_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SETEXCEPTIONMODE_DEVICEREMOVED_RETURN</unmanaged-short>
        MessageIdSetExceptionmodeDeviceremovedReturn = unchecked ((System.Int32)(325)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_SIMULATING_INFINITELY_FAST_HARDWARE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_SIMULATING_INFINITELY_FAST_HARDWARE</unmanaged-short>
        MessageIdRefSimulatingInfinitelyFastHardware = unchecked ((System.Int32)(326)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_THREADING_MODE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_THREADING_MODE</unmanaged-short>
        MessageIdRefThreadingMode = unchecked ((System.Int32)(327)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_UMDRIVER_EXCEPTION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_UMDRIVER_EXCEPTION</unmanaged-short>
        MessageIdRefUmdriverException = unchecked ((System.Int32)(328)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_KMDRIVER_EXCEPTION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_KMDRIVER_EXCEPTION</unmanaged-short>
        MessageIdRefKmdriverException = unchecked ((System.Int32)(329)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_HARDWARE_EXCEPTION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_HARDWARE_EXCEPTION</unmanaged-short>
        MessageIdRefHardwareException = unchecked ((System.Int32)(330)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_ACCESSING_INDEXABLE_TEMP_OUT_OF_RANGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_ACCESSING_INDEXABLE_TEMP_OUT_OF_RANGE</unmanaged-short>
        MessageIdRefAccessIngIndexAbleTempOutOfRange = unchecked ((System.Int32)(331)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_PROBLEM_PARSING_SHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_PROBLEM_PARSING_SHADER</unmanaged-short>
        MessageIdRefProblemParsingShader = unchecked ((System.Int32)(332)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_OUT_OF_MEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_OUT_OF_MEMORY</unmanaged-short>
        MessageIdRefOutOfMemory = unchecked ((System.Int32)(333)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_INFO</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_INFO</unmanaged-short>
        MessageIdRefInformation = unchecked ((System.Int32)(334)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEXPOS_OVERFLOW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEXPOS_OVERFLOW</unmanaged-short>
        MessageIdDeviceDrawVertexPosOverflow = unchecked ((System.Int32)(335)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAWINDEXED_INDEXPOS_OVERFLOW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAWINDEXED_INDEXPOS_OVERFLOW</unmanaged-short>
        MessageIdDeviceDrawIndexedIndexPosOverflow = unchecked ((System.Int32)(336)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAWINSTANCED_VERTEXPOS_OVERFLOW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAWINSTANCED_VERTEXPOS_OVERFLOW</unmanaged-short>
        MessageIdDeviceDrawInstancedVertexPosOverflow = unchecked ((System.Int32)(337)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAWINSTANCED_INSTANCEPOS_OVERFLOW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAWINSTANCED_INSTANCEPOS_OVERFLOW</unmanaged-short>
        MessageIdDeviceDrawInstancedInstancePosOverflow = unchecked ((System.Int32)(338)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INSTANCEPOS_OVERFLOW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INSTANCEPOS_OVERFLOW</unmanaged-short>
        MessageIdDeviceDrawIndexedInstancedInstancePosOverflow = unchecked ((System.Int32)(339)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INDEXPOS_OVERFLOW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INDEXPOS_OVERFLOW</unmanaged-short>
        MessageIdDeviceDrawIndexedInstancedIndexPosOverflow = unchecked ((System.Int32)(340)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_SHADER_NOT_SET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_SHADER_NOT_SET</unmanaged-short>
        MessageIdDeviceDrawVertexShaderNotSet = unchecked ((System.Int32)(341)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND</unmanaged-short>
        MessageIdDeviceShaderLinkageSemanticnameNotFound = unchecked ((System.Int32)(342)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERINDEX</unmanaged-short>
        MessageIdDeviceShaderLinkageRegisterindex = unchecked ((System.Int32)(343)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_COMPONENTTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_COMPONENTTYPE</unmanaged-short>
        MessageIdDeviceShaderLinkageComponenttype = unchecked ((System.Int32)(344)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERMASK</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERMASK</unmanaged-short>
        MessageIdDeviceShaderLinkageRegistermask = unchecked ((System.Int32)(345)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SYSTEMVALUE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SYSTEMVALUE</unmanaged-short>
        MessageIdDeviceShaderLinkageSystemvalue = unchecked ((System.Int32)(346)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS</unmanaged-short>
        MessageIdDeviceShaderLinkageNeverwrittenAlwaysreads = unchecked ((System.Int32)(347)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_NOT_SET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_NOT_SET</unmanaged-short>
        MessageIdDeviceDrawVertexBufferNotSet = unchecked ((System.Int32)(348)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_INPUTLAYOUT_NOT_SET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_INPUTLAYOUT_NOT_SET</unmanaged-short>
        MessageIdDeviceDrawInputLayoutNotSet = unchecked ((System.Int32)(349)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_CONSTANT_BUFFER_NOT_SET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_CONSTANT_BUFFER_NOT_SET</unmanaged-short>
        MessageIdDeviceDrawConstantBufferNotSet = unchecked ((System.Int32)(350)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_CONSTANT_BUFFER_TOO_SMALL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_CONSTANT_BUFFER_TOO_SMALL</unmanaged-short>
        MessageIdDeviceDrawConstantBufferTooSmall = unchecked ((System.Int32)(351)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLER_NOT_SET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLER_NOT_SET</unmanaged-short>
        MessageIdDeviceDrawSamplerNotSet = unchecked ((System.Int32)(352)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_SHADERRESOURCEVIEW_NOT_SET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_SHADERRESOURCEVIEW_NOT_SET</unmanaged-short>
        MessageIdDeviceDrawShaderResourceViewNotSet = unchecked ((System.Int32)(353)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_VIEW_DIMENSION_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_VIEW_DIMENSION_MISMATCH</unmanaged-short>
        MessageIdDeviceDrawViewDimensionMismatch = unchecked ((System.Int32)(354)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_STRIDE_TOO_SMALL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_STRIDE_TOO_SMALL</unmanaged-short>
        MessageIdDeviceDrawVertexBufferStrideTooSmall = unchecked ((System.Int32)(355)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_TOO_SMALL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_TOO_SMALL</unmanaged-short>
        MessageIdDeviceDrawVertexBufferTooSmall = unchecked ((System.Int32)(356)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_NOT_SET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_NOT_SET</unmanaged-short>
        MessageIdDeviceDrawIndexBufferNotSet = unchecked ((System.Int32)(357)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_FORMAT_INVALID</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_FORMAT_INVALID</unmanaged-short>
        MessageIdDeviceDrawIndexBufferFormatInvalid = unchecked ((System.Int32)(358)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_TOO_SMALL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_TOO_SMALL</unmanaged-short>
        MessageIdDeviceDrawIndexBufferTooSmall = unchecked ((System.Int32)(359)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_GS_INPUT_PRIMITIVE_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_GS_INPUT_PRIMITIVE_MISMATCH</unmanaged-short>
        MessageIdDeviceDrawGeometryShaderInputPrimitiveMismatch = unchecked ((System.Int32)(360)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_RETURN_TYPE_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_RETURN_TYPE_MISMATCH</unmanaged-short>
        MessageIdDeviceDrawResourceReturnTypeMismatch = unchecked ((System.Int32)(361)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_POSITION_NOT_PRESENT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_POSITION_NOT_PRESENT</unmanaged-short>
        MessageIdDeviceDrawPositionNotPresent = unchecked ((System.Int32)(362)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_OUTPUT_STREAM_NOT_SET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_OUTPUT_STREAM_NOT_SET</unmanaged-short>
        MessageIdDeviceDrawOutputStreamNotSet = unchecked ((System.Int32)(363)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_BOUND_RESOURCE_MAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_BOUND_RESOURCE_MAPPED</unmanaged-short>
        MessageIdDeviceDrawBoundResourceMapped = unchecked ((System.Int32)(364)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_PRIMITIVETOPOLOGY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_PRIMITIVETOPOLOGY</unmanaged-short>
        MessageIdDeviceDrawInvalidPrimitivetopology = unchecked ((System.Int32)(365)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_OFFSET_UNALIGNED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_OFFSET_UNALIGNED</unmanaged-short>
        MessageIdDeviceDrawVertexOffsetUnaligned = unchecked ((System.Int32)(366)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_STRIDE_UNALIGNED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_STRIDE_UNALIGNED</unmanaged-short>
        MessageIdDeviceDrawVertexStrideUnaligned = unchecked ((System.Int32)(367)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_OFFSET_UNALIGNED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_OFFSET_UNALIGNED</unmanaged-short>
        MessageIdDeviceDrawIndexOffsetUnaligned = unchecked ((System.Int32)(368)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_OUTPUT_STREAM_OFFSET_UNALIGNED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_OUTPUT_STREAM_OFFSET_UNALIGNED</unmanaged-short>
        MessageIdDeviceDrawOutputStreamOffsetUnaligned = unchecked ((System.Int32)(369)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_LD_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_LD_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceDrawResourceFormatLdUnsupported = unchecked ((System.Int32)(370)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_SAMPLE_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_SAMPLE_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceDrawResourceFormatSampleUnsupported = unchecked ((System.Int32)(371)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_SAMPLE_C_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_SAMPLE_C_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceDrawResourceFormatSampleCUnsupported = unchecked ((System.Int32)(372)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_MULTISAMPLE_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_MULTISAMPLE_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceDrawResourceMultisampleUnsupported = unchecked ((System.Int32)(373)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_SO_TARGETS_BOUND_WITHOUT_SOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_SO_TARGETS_BOUND_WITHOUT_SOURCE</unmanaged-short>
        MessageIdDeviceDrawStreamOutputTargetsBoundWithoutSource = unchecked ((System.Int32)(374)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_SO_STRIDE_LARGER_THAN_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_SO_STRIDE_LARGER_THAN_BUFFER</unmanaged-short>
        MessageIdDeviceDrawStreamOutputStrideLargeRThanBuffer = unchecked ((System.Int32)(375)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING</unmanaged-short>
        MessageIdDeviceDrawOutputMergerRenderTargetDoesNotSupportBlending = unchecked ((System.Int32)(376)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0</unmanaged-short>
        MessageIdDeviceDrawOutputMergerDualSourceBlendingCanOnlyHaveRenderTarget0 = unchecked ((System.Int32)(377)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_AT_FAULT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_AT_FAULT</unmanaged-short>
        MessageIdDeviceRemovalProcessAtFault = unchecked ((System.Int32)(378)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_POSSIBLY_AT_FAULT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_POSSIBLY_AT_FAULT</unmanaged-short>
        MessageIdDeviceRemovalProcessPossiblyAtFault = unchecked ((System.Int32)(379)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_NOT_AT_FAULT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_NOT_AT_FAULT</unmanaged-short>
        MessageIdDeviceRemovalProcessNotAtFault = unchecked ((System.Int32)(380)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_INVALIDARG_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_INVALIDARG_RETURN</unmanaged-short>
        MessageIdDeviceOpenSharedResourceInvalidArgumentReturn = unchecked ((System.Int32)(381)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdDeviceOpenSharedResourceOufOfMemoryReturn = unchecked ((System.Int32)(382)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BADINTERFACE_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BADINTERFACE_RETURN</unmanaged-short>
        MessageIdDeviceOpenSharedResourceBadinterfaceReturn = unchecked ((System.Int32)(383)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_VIEWPORT_NOT_SET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_VIEWPORT_NOT_SET</unmanaged-short>
        MessageIdDeviceDrawViewportNotSet = unchecked ((System.Int32)(384)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TRAILING_DIGIT_IN_SEMANTIC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TRAILING_DIGIT_IN_SEMANTIC</unmanaged-short>
        MessageIdCreateInputLayoutTrailingDigitInSemantic = unchecked ((System.Int32)(385)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_TRAILING_DIGIT_IN_SEMANTIC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_TRAILING_DIGIT_IN_SEMANTIC</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputTrailingDigitInSemantic = unchecked ((System.Int32)(386)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_DENORMFLUSH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_DENORMFLUSH</unmanaged-short>
        MessageIdDeviceRasterizerSetViewportsDenormflush = unchecked ((System.Int32)(387)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_OMSETRENDERTARGETS_INVALIDVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_OMSETRENDERTARGETS_INVALIDVIEW</unmanaged-short>
        MessageIdOutputMergerSetRenderTargetsInvalidView = unchecked ((System.Int32)(388)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SETTEXTFILTERSIZE_INVALIDDIMENSIONS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SETTEXTFILTERSIZE_INVALIDDIMENSIONS</unmanaged-short>
        MessageIdDeviceSetTextFiltersizeInvalidDimensions = unchecked ((System.Int32)(389)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLER_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLER_MISMATCH</unmanaged-short>
        MessageIdDeviceDrawSamplerMismatch = unchecked ((System.Int32)(390)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TYPE_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TYPE_MISMATCH</unmanaged-short>
        MessageIdCreateInputLayoutTypeMismatch = unchecked ((System.Int32)(391)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_BLENDSTATE_GETDESC_LEGACY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_BLENDSTATE_GETDESC_LEGACY</unmanaged-short>
        MessageIdBlendStateGetDescriptionLegacy = unchecked ((System.Int32)(392)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SHADERRESOURCEVIEW_GETDESC_LEGACY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SHADERRESOURCEVIEW_GETDESC_LEGACY</unmanaged-short>
        MessageIdShaderResourceViewGetDescriptionLegacy = unchecked ((System.Int32)(393)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEQUERY_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEQUERY_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateQueryOufOfMemoryReturn = unchecked ((System.Int32)(394)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEPREDICATE_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEPREDICATE_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreatePredicateOufOfMemoryReturn = unchecked ((System.Int32)(395)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATECOUNTER_OUTOFRANGE_COUNTER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATECOUNTER_OUTOFRANGE_COUNTER</unmanaged-short>
        MessageIdCreateCounterOufOfRangeCounter = unchecked ((System.Int32)(396)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATECOUNTER_SIMULTANEOUS_ACTIVE_COUNTERS_EXHAUSTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATECOUNTER_SIMULTANEOUS_ACTIVE_COUNTERS_EXHAUSTED</unmanaged-short>
        MessageIdCreateCounterSimultaneousActiveCountersExhausted = unchecked ((System.Int32)(397)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATECOUNTER_UNSUPPORTED_WELLKNOWN_COUNTER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATECOUNTER_UNSUPPORTED_WELLKNOWN_COUNTER</unmanaged-short>
        MessageIdCreateCounterUnsupportedWellknownCounter = unchecked ((System.Int32)(398)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATECOUNTER_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATECOUNTER_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateCounterOufOfMemoryReturn = unchecked ((System.Int32)(399)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATECOUNTER_NONEXCLUSIVE_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATECOUNTER_NONEXCLUSIVE_RETURN</unmanaged-short>
        MessageIdCreateCounterNonexclusiveReturn = unchecked ((System.Int32)(400)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATECOUNTER_NULLDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATECOUNTER_NULLDESC</unmanaged-short>
        MessageIdCreateCounterNullDescription = unchecked ((System.Int32)(401)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKCOUNTER_OUTOFRANGE_COUNTER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKCOUNTER_OUTOFRANGE_COUNTER</unmanaged-short>
        MessageIdCheckCounterOufOfRangeCounter = unchecked ((System.Int32)(402)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKCOUNTER_UNSUPPORTED_WELLKNOWN_COUNTER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKCOUNTER_UNSUPPORTED_WELLKNOWN_COUNTER</unmanaged-short>
        MessageIdCheckCounterUnsupportedWellknownCounter = unchecked ((System.Int32)(403)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SETPREDICATION_INVALID_PREDICATE_STATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SETPREDICATION_INVALID_PREDICATE_STATE</unmanaged-short>
        MessageIdSetPredicationInvalidPredicateState = unchecked ((System.Int32)(404)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_QUERY_BEGIN_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_QUERY_BEGIN_UNSUPPORTED</unmanaged-short>
        MessageIdQueryBeginUnsupported = unchecked ((System.Int32)(405)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_PREDICATE_BEGIN_DURING_PREDICATION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_PREDICATE_BEGIN_DURING_PREDICATION</unmanaged-short>
        MessageIdPredicateBeginDuringPredication = unchecked ((System.Int32)(406)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_QUERY_BEGIN_DUPLICATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_QUERY_BEGIN_DUPLICATE</unmanaged-short>
        MessageIdQueryBeginDuplicate = unchecked ((System.Int32)(407)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_QUERY_BEGIN_ABANDONING_PREVIOUS_RESULTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_QUERY_BEGIN_ABANDONING_PREVIOUS_RESULTS</unmanaged-short>
        MessageIdQueryBeginAbandoningPreviousResults = unchecked ((System.Int32)(408)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_PREDICATE_END_DURING_PREDICATION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_PREDICATE_END_DURING_PREDICATION</unmanaged-short>
        MessageIdPredicateEndDuringPredication = unchecked ((System.Int32)(409)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_QUERY_END_ABANDONING_PREVIOUS_RESULTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_QUERY_END_ABANDONING_PREVIOUS_RESULTS</unmanaged-short>
        MessageIdQueryEndAbandoningPreviousResults = unchecked ((System.Int32)(410)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_QUERY_END_WITHOUT_BEGIN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_QUERY_END_WITHOUT_BEGIN</unmanaged-short>
        MessageIdQueryEndWithoutBegin = unchecked ((System.Int32)(411)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_DATASIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_DATASIZE</unmanaged-short>
        MessageIdQueryGetDataInvalidDataSize = unchecked ((System.Int32)(412)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_FLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_FLAGS</unmanaged-short>
        MessageIdQueryGetDataInvalidFlags = unchecked ((System.Int32)(413)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_CALL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_CALL</unmanaged-short>
        MessageIdQueryGetDataInvalidCall = unchecked ((System.Int32)(414)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_PS_OUTPUT_TYPE_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_PS_OUTPUT_TYPE_MISMATCH</unmanaged-short>
        MessageIdDeviceDrawPixelShaderOutputTypeMismatch = unchecked ((System.Int32)(415)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_GATHER_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_GATHER_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceDrawResourceFormatGatherUnsupported = unchecked ((System.Int32)(416)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN</unmanaged-short>
        MessageIdDeviceDrawInvalidUseOfCenterMultisamplePattern = unchecked ((System.Int32)(417)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_STRIDE_TOO_LARGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_STRIDE_TOO_LARGE</unmanaged-short>
        MessageIdDeviceInputAssemblySetVertexBuffersStrideTooLarge = unchecked ((System.Int32)(418)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_INVALIDRANGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_INVALIDRANGE</unmanaged-short>
        MessageIdDeviceInputAssemblySetVertexBuffersInvalidRange = unchecked ((System.Int32)(419)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_EMPTY_LAYOUT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_EMPTY_LAYOUT</unmanaged-short>
        MessageIdCreateInputLayoutEmptyLayout = unchecked ((System.Int32)(420)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_SAMPLE_COUNT_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_SAMPLE_COUNT_MISMATCH</unmanaged-short>
        MessageIdDeviceDrawResourceSampleCountMismatch = unchecked ((System.Int32)(421)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_OBJECT_SUMMARY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_OBJECT_SUMMARY</unmanaged-short>
        MessageIdLiveObjectSummary = unchecked ((System.Int32)(422)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_BUFFER</unmanaged-short>
        MessageIdLiveBuffer = unchecked ((System.Int32)(423)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_TEXTURE1D</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_TEXTURE1D</unmanaged-short>
        MessageIdLiveTexture1D = unchecked ((System.Int32)(424)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_TEXTURE2D</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_TEXTURE2D</unmanaged-short>
        MessageIdLiveTexture2D = unchecked ((System.Int32)(425)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_TEXTURE3D</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_TEXTURE3D</unmanaged-short>
        MessageIdLiveTexture3D = unchecked ((System.Int32)(426)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_SHADERRESOURCEVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_SHADERRESOURCEVIEW</unmanaged-short>
        MessageIdLiveShaderResourceView = unchecked ((System.Int32)(427)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_RENDERTARGETVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_RENDERTARGETVIEW</unmanaged-short>
        MessageIdLiveRenderTargetView = unchecked ((System.Int32)(428)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILVIEW</unmanaged-short>
        MessageIdLiveDepthStencilView = unchecked ((System.Int32)(429)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_VERTEXSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_VERTEXSHADER</unmanaged-short>
        MessageIdLiveVertexShader = unchecked ((System.Int32)(430)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_GEOMETRYSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_GEOMETRYSHADER</unmanaged-short>
        MessageIdLiveGeometryShader = unchecked ((System.Int32)(431)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_PIXELSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_PIXELSHADER</unmanaged-short>
        MessageIdLivePixelShader = unchecked ((System.Int32)(432)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_INPUTLAYOUT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_INPUTLAYOUT</unmanaged-short>
        MessageIdLiveInputLayout = unchecked ((System.Int32)(433)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_SAMPLER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_SAMPLER</unmanaged-short>
        MessageIdLiveSampler = unchecked ((System.Int32)(434)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_BLENDSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_BLENDSTATE</unmanaged-short>
        MessageIdLiveBlendState = unchecked ((System.Int32)(435)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILSTATE</unmanaged-short>
        MessageIdLiveDepthStencilState = unchecked ((System.Int32)(436)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_RASTERIZERSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_RASTERIZERSTATE</unmanaged-short>
        MessageIdLiveRasterizerstate = unchecked ((System.Int32)(437)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_QUERY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_QUERY</unmanaged-short>
        MessageIdLiveQuery = unchecked ((System.Int32)(438)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_PREDICATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_PREDICATE</unmanaged-short>
        MessageIdLivePredicate = unchecked ((System.Int32)(439)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_COUNTER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_COUNTER</unmanaged-short>
        MessageIdLiveCounter = unchecked ((System.Int32)(440)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_DEVICE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_DEVICE</unmanaged-short>
        MessageIdLiveDevice = unchecked ((System.Int32)(441)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_SWAPCHAIN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_SWAPCHAIN</unmanaged-short>
        MessageIdLiveSwapchain = unchecked ((System.Int32)(442)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_D3D10_MESSAGES_END</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_D3D10_MESSAGES_END</unmanaged-short>
        MessageIdD3D10MessagesEnd = unchecked ((System.Int32)(443)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_D3D10L9_MESSAGES_START</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_D3D10L9_MESSAGES_START</unmanaged-short>
        MessageIdD3D10L9MessagesStart = unchecked ((System.Int32)(1048576)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_STENCIL_NO_TWO_SIDED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_STENCIL_NO_TWO_SIDED</unmanaged-short>
        MessageIdCreateDepthStencilStateStencilNoTwoSided = unchecked ((System.Int32)(1048577)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_DepthBiasClamp_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_DepthBiasClamp_NOT_SUPPORTED</unmanaged-short>
        MessageIdCreateRasterizerstateDepthBiasClampNotSupported = unchecked ((System.Int32)(1048578)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NO_COMPARISON_SUPPORT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NO_COMPARISON_SUPPORT</unmanaged-short>
        MessageIdCreateSamplerStateNoComparisonSupport = unchecked ((System.Int32)(1048579)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_EXCESSIVE_ANISOTROPY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_EXCESSIVE_ANISOTROPY</unmanaged-short>
        MessageIdCreateSamplerStateExcessiveAnisotropy = unchecked ((System.Int32)(1048580)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_BORDER_OUT_OF_RANGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_BORDER_OUT_OF_RANGE</unmanaged-short>
        MessageIdCreateSamplerStateBorderOutOfRange = unchecked ((System.Int32)(1048581)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VSSETSAMPLERS_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VSSETSAMPLERS_NOT_SUPPORTED</unmanaged-short>
        MessageIdVertexShaderSetSamplersNotSupported = unchecked ((System.Int32)(1048582)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VSSETSAMPLERS_TOO_MANY_SAMPLERS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VSSETSAMPLERS_TOO_MANY_SAMPLERS</unmanaged-short>
        MessageIdVertexShaderSetSamplersTooManySamplers = unchecked ((System.Int32)(1048583)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_PSSETSAMPLERS_TOO_MANY_SAMPLERS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_PSSETSAMPLERS_TOO_MANY_SAMPLERS</unmanaged-short>
        MessageIdPixelShaderSetSamplersTooManySamplers = unchecked ((System.Int32)(1048584)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_NO_ARRAYS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_NO_ARRAYS</unmanaged-short>
        MessageIdCreateResourceNoArrays = unchecked ((System.Int32)(1048585)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_NO_VB_AND_IB_BIND</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_NO_VB_AND_IB_BIND</unmanaged-short>
        MessageIdCreateResourceNoVertexBufferAndIndexBufferBind = unchecked ((System.Int32)(1048586)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_NO_TEXTURE_1D</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_NO_TEXTURE_1D</unmanaged-short>
        MessageIdCreateResourceNoTexture1D = unchecked ((System.Int32)(1048587)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_DIMENSION_OUT_OF_RANGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_DIMENSION_OUT_OF_RANGE</unmanaged-short>
        MessageIdCreateResourceDimensionOutOfRange = unchecked ((System.Int32)(1048588)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_NOT_BINDABLE_AS_SHADER_RESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_NOT_BINDABLE_AS_SHADER_RESOURCE</unmanaged-short>
        MessageIdCreateResourceNotBindableAsShaderResource = unchecked ((System.Int32)(1048589)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_OMSETRENDERTARGETS_TOO_MANY_RENDER_TARGETS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_OMSETRENDERTARGETS_TOO_MANY_RENDER_TARGETS</unmanaged-short>
        MessageIdOutputMergerSetRenderTargetsTooManyRenderTargets = unchecked ((System.Int32)(1048590)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_OMSETRENDERTARGETS_NO_DIFFERING_BIT_DEPTHS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_OMSETRENDERTARGETS_NO_DIFFERING_BIT_DEPTHS</unmanaged-short>
        MessageIdOutputMergerSetRenderTargetsNoDifferingBitDepthS = unchecked ((System.Int32)(1048591)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_BAD_BUFFER_INDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_BAD_BUFFER_INDEX</unmanaged-short>
        MessageIdInputAssemblySetVertexBuffersBadBufferIndex = unchecked ((System.Int32)(1048592)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_TOO_MANY_VIEWPORTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_TOO_MANY_VIEWPORTS</unmanaged-short>
        MessageIdDeviceRasterizerSetViewportsTooManyViewports = unchecked ((System.Int32)(1048593)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_ADJACENCY_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_ADJACENCY_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceInputAssemblySetPrimitivetopologyWithAdjacencyUnsupported = unchecked ((System.Int32)(1048594)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_TOO_MANY_SCISSORS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_TOO_MANY_SCISSORS</unmanaged-short>
        MessageIdDeviceRasterizerSetScissorRectanglesTooManyScissors = unchecked ((System.Int32)(1048595)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYRESOURCE_ONLY_TEXTURE_2D_WITHIN_GPU_MEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYRESOURCE_ONLY_TEXTURE_2D_WITHIN_GPU_MEMORY</unmanaged-short>
        MessageIdCopyResourceOnlyTexture2DWithinGpuMemory = unchecked ((System.Int32)(1048596)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYRESOURCE_NO_TEXTURE_3D_READBACK</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYRESOURCE_NO_TEXTURE_3D_READBACK</unmanaged-short>
        MessageIdCopyResourceNoTexture3DReadback = unchecked ((System.Int32)(1048597)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYRESOURCE_NO_TEXTURE_ONLY_READBACK</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYRESOURCE_NO_TEXTURE_ONLY_READBACK</unmanaged-short>
        MessageIdCopyResourceNoTextureOnlyReadback = unchecked ((System.Int32)(1048598)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_UNSUPPORTED_FORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_UNSUPPORTED_FORMAT</unmanaged-short>
        MessageIdCreateInputLayoutUnsupportedFormat = unchecked ((System.Int32)(1048599)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_ALPHA_TO_COVERAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_ALPHA_TO_COVERAGE</unmanaged-short>
        MessageIdCreateBlendStateNoAlphaToCoverage = unchecked ((System.Int32)(1048600)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_DepthClipEnable_MUST_BE_TRUE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_DepthClipEnable_MUST_BE_TRUE</unmanaged-short>
        MessageIdCreateRasterizerstateDepthClipEnableMustBeTrue = unchecked ((System.Int32)(1048601)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DRAWINDEXED_STARTINDEXLOCATION_MUST_BE_POSITIVE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DRAWINDEXED_STARTINDEXLOCATION_MUST_BE_POSITIVE</unmanaged-short>
        MessageIdDrawIndexedStartindexlocationMustBePositive = unchecked ((System.Int32)(1048602)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_MUST_USE_LOWEST_LOD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_MUST_USE_LOWEST_LOD</unmanaged-short>
        MessageIdCreateShaderResourceViewMustUseLowestLod = unchecked ((System.Int32)(1048603)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_MINLOD_MUST_NOT_BE_FRACTIONAL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_MINLOD_MUST_NOT_BE_FRACTIONAL</unmanaged-short>
        MessageIdCreateSamplerStateMinimumLodMustNotBeFractional = unchecked ((System.Int32)(1048604)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_MAXLOD_MUST_BE_FLT_MAX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_MAXLOD_MUST_BE_FLT_MAX</unmanaged-short>
        MessageIdCreateSamplerStateMaximumLodMustBeFltMaximum = unchecked ((System.Int32)(1048605)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_FIRSTARRAYSLICE_MUST_BE_ZERO</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_FIRSTARRAYSLICE_MUST_BE_ZERO</unmanaged-short>
        MessageIdCreateShaderResourceViewFirstArraySliceMustBeZero = unchecked ((System.Int32)(1048606)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_CUBES_MUST_HAVE_6_SIDES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_CUBES_MUST_HAVE_6_SIDES</unmanaged-short>
        MessageIdCreateShaderResourceViewCubeSMustHave6Sides = unchecked ((System.Int32)(1048607)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_NOT_BINDABLE_AS_RENDER_TARGET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_NOT_BINDABLE_AS_RENDER_TARGET</unmanaged-short>
        MessageIdCreateResourceNotBindableAsRenderTarget = unchecked ((System.Int32)(1048608)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_NO_DWORD_INDEX_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_NO_DWORD_INDEX_BUFFER</unmanaged-short>
        MessageIdCreateResourceNoDwordIndexBuffer = unchecked ((System.Int32)(1048609)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_MSAA_PRECLUDES_SHADER_RESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_MSAA_PRECLUDES_SHADER_RESOURCE</unmanaged-short>
        MessageIdCreateResourceMSAAPrecludesShaderResource = unchecked ((System.Int32)(1048610)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_PRESENTATION_PRECLUDES_SHADER_RESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_PRESENTATION_PRECLUDES_SHADER_RESOURCE</unmanaged-short>
        MessageIdCreateResourcePresentationPrecludesShaderResource = unchecked ((System.Int32)(1048611)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_INDEPENDENT_BLEND_ENABLE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_INDEPENDENT_BLEND_ENABLE</unmanaged-short>
        MessageIdCreateBlendStateNoIndependentBlendEnable = unchecked ((System.Int32)(1048612)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_INDEPENDENT_WRITE_MASKS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_INDEPENDENT_WRITE_MASKS</unmanaged-short>
        MessageIdCreateBlendStateNoIndependentWriteMasks = unchecked ((System.Int32)(1048613)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_NO_STREAM_OUT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_NO_STREAM_OUT</unmanaged-short>
        MessageIdCreateResourceNoStreamOut = unchecked ((System.Int32)(1048614)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_ONLY_VB_IB_FOR_BUFFERS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_ONLY_VB_IB_FOR_BUFFERS</unmanaged-short>
        MessageIdCreateResourceOnlyVertexBufferIndexBufferForBuffers = unchecked ((System.Int32)(1048615)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_NO_AUTOGEN_FOR_VOLUMES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_NO_AUTOGEN_FOR_VOLUMES</unmanaged-short>
        MessageIdCreateResourceNoAutogenForVolumes = unchecked ((System.Int32)(1048616)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_DXGI_FORMAT_R8G8B8A8_CANNOT_BE_SHARED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_DXGI_FORMAT_R8G8B8A8_CANNOT_BE_SHARED</unmanaged-short>
        MessageIdCreateResourceDxgiFormatR8G8B8A8CannotBeShared = unchecked ((System.Int32)(1048617)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VSSHADERRESOURCES_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VSSHADERRESOURCES_NOT_SUPPORTED</unmanaged-short>
        MessageIdVertexShaderShaderResourcesNotSupported = unchecked ((System.Int32)(1048618)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GEOMETRY_SHADER_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GEOMETRY_SHADER_NOT_SUPPORTED</unmanaged-short>
        MessageIdGeometryShaderNotSupported = unchecked ((System.Int32)(1048619)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_STREAM_OUT_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_STREAM_OUT_NOT_SUPPORTED</unmanaged-short>
        MessageIdStreamOutNotSupported = unchecked ((System.Int32)(1048620)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TEXT_FILTER_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TEXT_FILTER_NOT_SUPPORTED</unmanaged-short>
        MessageIdTextFilterNotSupported = unchecked ((System.Int32)(1048621)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_SEPARATE_ALPHA_BLEND</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_SEPARATE_ALPHA_BLEND</unmanaged-short>
        MessageIdCreateBlendStateNoSeparateAlphaBlend = unchecked ((System.Int32)(1048622)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_MRT_BLEND</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_MRT_BLEND</unmanaged-short>
        MessageIdCreateBlendStateNoMrtBlend = unchecked ((System.Int32)(1048623)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_OPERATION_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_OPERATION_NOT_SUPPORTED</unmanaged-short>
        MessageIdCreateBlendStateOperationNotSupported = unchecked ((System.Int32)(1048624)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NO_MIRRORONCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NO_MIRRORONCE</unmanaged-short>
        MessageIdCreateSamplerStateNoMirrorOnce = unchecked ((System.Int32)(1048625)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DRAWINSTANCED_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DRAWINSTANCED_NOT_SUPPORTED</unmanaged-short>
        MessageIdDrawInstancedNotSupported = unchecked ((System.Int32)(1048626)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DRAWINDEXEDINSTANCED_NOT_SUPPORTED_BELOW_9_3</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DRAWINDEXEDINSTANCED_NOT_SUPPORTED_BELOW_9_3</unmanaged-short>
        MessageIdDrawIndexedInstancedNotSupportedBelow93 = unchecked ((System.Int32)(1048627)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DRAWINDEXED_POINTLIST_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DRAWINDEXED_POINTLIST_UNSUPPORTED</unmanaged-short>
        MessageIdDrawIndexedPointListUnsupported = unchecked ((System.Int32)(1048628)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SETBLENDSTATE_SAMPLE_MASK_CANNOT_BE_ZERO</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SETBLENDSTATE_SAMPLE_MASK_CANNOT_BE_ZERO</unmanaged-short>
        MessageIdSetBlendStateSampleMaskCannotBeZero = unchecked ((System.Int32)(1048629)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_DIMENSION_EXCEEDS_FEATURE_LEVEL_DEFINITION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_DIMENSION_EXCEEDS_FEATURE_LEVEL_DEFINITION</unmanaged-short>
        MessageIdCreateResourceDimensionExceedsFeatureLevelDefinition = unchecked ((System.Int32)(1048630)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_ONLY_SINGLE_MIP_LEVEL_DEPTH_STENCIL_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_ONLY_SINGLE_MIP_LEVEL_DEPTH_STENCIL_SUPPORTED</unmanaged-short>
        MessageIdCreateResourceOnlySingleMipLevelDepthStencilSupported = unchecked ((System.Int32)(1048631)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_NEGATIVESCISSOR</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_NEGATIVESCISSOR</unmanaged-short>
        MessageIdDeviceRasterizerSetScissorRectanglesNegativeScissor = unchecked ((System.Int32)(1048632)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SLOT_ZERO_MUST_BE_D3D10_INPUT_PER_VERTEX_DATA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SLOT_ZERO_MUST_BE_D3D10_INPUT_PER_VERTEX_DATA</unmanaged-short>
        MessageIdSlotZeroMustBeD3D10InputPerVertexData = unchecked ((System.Int32)(1048633)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERESOURCE_NON_POW_2_MIPMAP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERESOURCE_NON_POW_2_MIPMAP</unmanaged-short>
        MessageIdCreateResourceNonPow2Mipmap = unchecked ((System.Int32)(1048634)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_BORDER_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESAMPLERSTATE_BORDER_NOT_SUPPORTED</unmanaged-short>
        MessageIdCreateSamplerStateBorderNotSupported = unchecked ((System.Int32)(1048635)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_OMSETRENDERTARGETS_NO_SRGB_MRT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_OMSETRENDERTARGETS_NO_SRGB_MRT</unmanaged-short>
        MessageIdOutputMergerSetRenderTargetsNoSRgbMrt = unchecked ((System.Int32)(1048636)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYRESOURCE_NO_3D_MISMATCHED_UPDATES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYRESOURCE_NO_3D_MISMATCHED_UPDATES</unmanaged-short>
        MessageIdCopyResourceNo3DMismatchedUpdates = unchecked ((System.Int32)(1048637)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_D3D10L9_MESSAGES_END</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_D3D10L9_MESSAGES_END</unmanaged-short>
        MessageIdD3D10L9MessagesEnd = unchecked ((System.Int32)(1048638)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_D3D11_MESSAGES_START</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_D3D11_MESSAGES_START</unmanaged-short>
        MessageIdD3D11MessagesStart = unchecked ((System.Int32)(2097152)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFLAGS</unmanaged-short>
        MessageIdCreateDepthStencilViewInvalidFlags = unchecked ((System.Int32)(2097153)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDCLASSLINKAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDCLASSLINKAGE</unmanaged-short>
        MessageIdCreateVertexShaderInvalidClassLinkage = unchecked ((System.Int32)(2097154)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDCLASSLINKAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDCLASSLINKAGE</unmanaged-short>
        MessageIdCreateGeometryShaderInvalidClassLinkage = unchecked ((System.Int32)(2097155)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTREAMS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTREAMS</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputInvalidNumstreams = unchecked ((System.Int32)(2097156)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAMTORASTERIZER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAMTORASTERIZER</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputInvalidStreamTorasterizer = unchecked ((System.Int32)(2097157)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTREAMS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTREAMS</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputUnexpectedStreams = unchecked ((System.Int32)(2097158)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCLASSLINKAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCLASSLINKAGE</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputInvalidClassLinkage = unchecked ((System.Int32)(2097159)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDCLASSLINKAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDCLASSLINKAGE</unmanaged-short>
        MessageIdCreatePixelShaderInvalidClassLinkage = unchecked ((System.Int32)(2097160)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALID_COMMANDLISTFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALID_COMMANDLISTFLAGS</unmanaged-short>
        MessageIdCreateDeferredContextInvalidCommandlistflags = unchecked ((System.Int32)(2097161)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_SINGLETHREADED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_SINGLETHREADED</unmanaged-short>
        MessageIdCreateDeferredContextSingleThreaded = unchecked ((System.Int32)(2097162)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALIDARG_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALIDARG_RETURN</unmanaged-short>
        MessageIdCreateDeferredContextInvalidArgumentReturn = unchecked ((System.Int32)(2097163)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALID_CALL_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALID_CALL_RETURN</unmanaged-short>
        MessageIdCreateDeferredContextInvalidCallReturn = unchecked ((System.Int32)(2097164)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateDeferredContextOufOfMemoryReturn = unchecked ((System.Int32)(2097165)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_FINISHDISPLAYLIST_ONIMMEDIATECONTEXT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_FINISHDISPLAYLIST_ONIMMEDIATECONTEXT</unmanaged-short>
        MessageIdFinishDisplayListOnimmediatecontext = unchecked ((System.Int32)(2097166)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_FINISHDISPLAYLIST_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_FINISHDISPLAYLIST_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdFinishDisplayListOufOfMemoryReturn = unchecked ((System.Int32)(2097167)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_FINISHDISPLAYLIST_INVALID_CALL_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_FINISHDISPLAYLIST_INVALID_CALL_RETURN</unmanaged-short>
        MessageIdFinishDisplayListInvalidCallReturn = unchecked ((System.Int32)(2097168)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAM</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputInvalidStream = unchecked ((System.Int32)(2097169)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDENTRIES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDENTRIES</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputUnexpectedEntries = unchecked ((System.Int32)(2097170)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTRIDES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTRIDES</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputUnexpectedStrides = unchecked ((System.Int32)(2097171)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTRIDES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTRIDES</unmanaged-short>
        MessageIdCreateGeometryShaderWithStreamOutputInvalidNumstrides = unchecked ((System.Int32)(2097172)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_HSSETSHADERRESOURCES_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_HSSETSHADERRESOURCES_HAZARD</unmanaged-short>
        MessageIdDeviceHullShaderSetShaderResourcesHazard = unchecked ((System.Int32)(2097173)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_HSSETCONSTANTBUFFERS_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_HSSETCONSTANTBUFFERS_HAZARD</unmanaged-short>
        MessageIdDeviceHullShaderSetConstantBuffersHazard = unchecked ((System.Int32)(2097174)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_HSSETSHADERRESOURCES_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_HSSETSHADERRESOURCES_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdHullShaderSetShaderResourcesUnbindDeletingObject = unchecked ((System.Int32)(2097175)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdHullShaderSetConstantBuffersUnbindDeletingObject = unchecked ((System.Int32)(2097176)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDCALL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDCALL</unmanaged-short>
        MessageIdCreateHullShaderInvalidCall = unchecked ((System.Int32)(2097177)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEHULLSHADER_OUTOFMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEHULLSHADER_OUTOFMEMORY</unmanaged-short>
        MessageIdCreateHullShaderOufOfMemory = unchecked ((System.Int32)(2097178)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERBYTECODE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERBYTECODE</unmanaged-short>
        MessageIdCreateHullShaderInvalidShaderBytecode = unchecked ((System.Int32)(2097179)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERTYPE</unmanaged-short>
        MessageIdCreateHullShaderInvalidShaderType = unchecked ((System.Int32)(2097180)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDCLASSLINKAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDCLASSLINKAGE</unmanaged-short>
        MessageIdCreateHullShaderInvalidClassLinkage = unchecked ((System.Int32)(2097181)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_HSSETSHADERRESOURCES_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_HSSETSHADERRESOURCES_VIEWS_EMPTY</unmanaged-short>
        MessageIdDeviceHullShaderSetShaderResourcesViewsEmpty = unchecked ((System.Int32)(2097182)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_INVALIDBUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_INVALIDBUFFER</unmanaged-short>
        MessageIdHullShaderSetConstantBuffersInvalidBuffer = unchecked ((System.Int32)(2097183)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_HSSETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_HSSETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDeviceHullShaderSetConstantBuffersBuffersEmpty = unchecked ((System.Int32)(2097184)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_HSSETSAMPLERS_SAMPLERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_HSSETSAMPLERS_SAMPLERS_EMPTY</unmanaged-short>
        MessageIdDeviceHullShaderSetSamplersSamplersEmpty = unchecked ((System.Int32)(2097185)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_HSGETSHADERRESOURCES_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_HSGETSHADERRESOURCES_VIEWS_EMPTY</unmanaged-short>
        MessageIdDeviceHullShaderGetShaderResourcesViewsEmpty = unchecked ((System.Int32)(2097186)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_HSGETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_HSGETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDeviceHullShaderGetConstantBuffersBuffersEmpty = unchecked ((System.Int32)(2097187)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_HSGETSAMPLERS_SAMPLERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_HSGETSAMPLERS_SAMPLERS_EMPTY</unmanaged-short>
        MessageIdDeviceHullShaderGetSamplersSamplersEmpty = unchecked ((System.Int32)(2097188)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DSSETSHADERRESOURCES_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DSSETSHADERRESOURCES_HAZARD</unmanaged-short>
        MessageIdDeviceDomainShaderSetShaderResourcesHazard = unchecked ((System.Int32)(2097189)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DSSETCONSTANTBUFFERS_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DSSETCONSTANTBUFFERS_HAZARD</unmanaged-short>
        MessageIdDeviceDomainShaderSetConstantBuffersHazard = unchecked ((System.Int32)(2097190)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DSSETSHADERRESOURCES_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DSSETSHADERRESOURCES_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdDomainShaderSetShaderResourcesUnbindDeletingObject = unchecked ((System.Int32)(2097191)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdDomainShaderSetConstantBuffersUnbindDeletingObject = unchecked ((System.Int32)(2097192)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCALL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCALL</unmanaged-short>
        MessageIdCreateDomainShaderInvalidCall = unchecked ((System.Int32)(2097193)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDOMAINSHADER_OUTOFMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDOMAINSHADER_OUTOFMEMORY</unmanaged-short>
        MessageIdCreateDomainShaderOufOfMemory = unchecked ((System.Int32)(2097194)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERBYTECODE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERBYTECODE</unmanaged-short>
        MessageIdCreateDomainShaderInvalidShaderBytecode = unchecked ((System.Int32)(2097195)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERTYPE</unmanaged-short>
        MessageIdCreateDomainShaderInvalidShaderType = unchecked ((System.Int32)(2097196)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCLASSLINKAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCLASSLINKAGE</unmanaged-short>
        MessageIdCreateDomainShaderInvalidClassLinkage = unchecked ((System.Int32)(2097197)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DSSETSHADERRESOURCES_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DSSETSHADERRESOURCES_VIEWS_EMPTY</unmanaged-short>
        MessageIdDeviceDomainShaderSetShaderResourcesViewsEmpty = unchecked ((System.Int32)(2097198)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_INVALIDBUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_INVALIDBUFFER</unmanaged-short>
        MessageIdDomainShaderSetConstantBuffersInvalidBuffer = unchecked ((System.Int32)(2097199)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DSSETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DSSETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDeviceDomainShaderSetConstantBuffersBuffersEmpty = unchecked ((System.Int32)(2097200)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DSSETSAMPLERS_SAMPLERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DSSETSAMPLERS_SAMPLERS_EMPTY</unmanaged-short>
        MessageIdDeviceDomainShaderSetSamplersSamplersEmpty = unchecked ((System.Int32)(2097201)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DSGETSHADERRESOURCES_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DSGETSHADERRESOURCES_VIEWS_EMPTY</unmanaged-short>
        MessageIdDeviceDomainShaderGetShaderResourcesViewsEmpty = unchecked ((System.Int32)(2097202)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DSGETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DSGETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDeviceDomainShaderGetConstantBuffersBuffersEmpty = unchecked ((System.Int32)(2097203)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DSGETSAMPLERS_SAMPLERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DSGETSAMPLERS_SAMPLERS_EMPTY</unmanaged-short>
        MessageIdDeviceDomainShaderGetSamplersSamplersEmpty = unchecked ((System.Int32)(2097204)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_HS_XOR_DS_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_HS_XOR_DS_MISMATCH</unmanaged-short>
        MessageIdDeviceDrawHullShaderXorDomainShaderMismatch = unchecked ((System.Int32)(2097205)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEFERRED_CONTEXT_REMOVAL_PROCESS_AT_FAULT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEFERRED_CONTEXT_REMOVAL_PROCESS_AT_FAULT</unmanaged-short>
        MessageIdDeferredContextRemovalProcessAtFault = unchecked ((System.Int32)(2097206)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_INVALID_ARG_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_INVALID_ARG_BUFFER</unmanaged-short>
        MessageIdDeviceDrawIndirectInvalidArgumentBuffer = unchecked ((System.Int32)(2097207)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_UNALIGNED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_UNALIGNED</unmanaged-short>
        MessageIdDeviceDrawIndirectOffsetUnaligned = unchecked ((System.Int32)(2097208)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_OVERFLOW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_OVERFLOW</unmanaged-short>
        MessageIdDeviceDrawIndirectOffsetOverflow = unchecked ((System.Int32)(2097209)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDMAPTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDMAPTYPE</unmanaged-short>
        MessageIdResourceMapInvalidMaptype = unchecked ((System.Int32)(2097210)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDSUBRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDSUBRESOURCE</unmanaged-short>
        MessageIdResourceMapInvalidSubResource = unchecked ((System.Int32)(2097211)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDFLAGS</unmanaged-short>
        MessageIdResourceMapInvalidFlags = unchecked ((System.Int32)(2097212)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RESOURCE_MAP_ALREADYMAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RESOURCE_MAP_ALREADYMAPPED</unmanaged-short>
        MessageIdResourceMapAlreadymapped = unchecked ((System.Int32)(2097213)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RESOURCE_MAP_DEVICEREMOVED_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RESOURCE_MAP_DEVICEREMOVED_RETURN</unmanaged-short>
        MessageIdResourceMapDeviceremovedReturn = unchecked ((System.Int32)(2097214)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RESOURCE_MAP_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RESOURCE_MAP_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdResourceMapOufOfMemoryReturn = unchecked ((System.Int32)(2097215)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RESOURCE_MAP_WITHOUT_INITIAL_DISCARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RESOURCE_MAP_WITHOUT_INITIAL_DISCARD</unmanaged-short>
        MessageIdResourceMapWithoutInitialDiscard = unchecked ((System.Int32)(2097216)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RESOURCE_UNMAP_INVALIDSUBRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RESOURCE_UNMAP_INVALIDSUBRESOURCE</unmanaged-short>
        MessageIdResourceUnmapInvalidSubResource = unchecked ((System.Int32)(2097217)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RESOURCE_UNMAP_NOTMAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RESOURCE_UNMAP_NOTMAPPED</unmanaged-short>
        MessageIdResourceUnmapNotMapped = unchecked ((System.Int32)(2097218)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_RASTERIZING_CONTROL_POINTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_RASTERIZING_CONTROL_POINTS</unmanaged-short>
        MessageIdDeviceDrawRasterizingControlPoints = unchecked ((System.Int32)(2097219)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceInputAssemblySetPrimitivetopologyTopologyUnsupported = unchecked ((System.Int32)(2097220)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_SIGNATURE_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_SIGNATURE_MISMATCH</unmanaged-short>
        MessageIdDeviceDrawHullShaderDomainShaderSignatureMismatch = unchecked ((System.Int32)(2097221)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH</unmanaged-short>
        MessageIdDeviceDrawHullShaderInputTopologyMismatch = unchecked ((System.Int32)(2097222)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_CONTROL_POINT_COUNT_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_CONTROL_POINT_COUNT_MISMATCH</unmanaged-short>
        MessageIdDeviceDrawHullShaderDomainShaderControlPointCountMismatch = unchecked ((System.Int32)(2097223)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_TESSELLATOR_DOMAIN_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_TESSELLATOR_DOMAIN_MISMATCH</unmanaged-short>
        MessageIdDeviceDrawHullShaderDomainShaderTessellatorDomainMismatch = unchecked ((System.Int32)(2097224)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_CONTEXT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_CONTEXT</unmanaged-short>
        MessageIdCreateContext = unchecked ((System.Int32)(2097225)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_CONTEXT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_CONTEXT</unmanaged-short>
        MessageIdLiveContext = unchecked ((System.Int32)(2097226)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_CONTEXT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_CONTEXT</unmanaged-short>
        MessageIdDestroyContext = unchecked ((System.Int32)(2097227)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_BUFFER</unmanaged-short>
        MessageIdCreateBuffer = unchecked ((System.Int32)(2097228)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_BUFFER_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_BUFFER_WIN7</unmanaged-short>
        MessageIdLiveBufferWin7 = unchecked ((System.Int32)(2097229)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_BUFFER</unmanaged-short>
        MessageIdDestroyBuffer = unchecked ((System.Int32)(2097230)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_TEXTURE1D</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_TEXTURE1D</unmanaged-short>
        MessageIdCreateTexture1D = unchecked ((System.Int32)(2097231)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_TEXTURE1D_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_TEXTURE1D_WIN7</unmanaged-short>
        MessageIdLiveTexture1DWin7 = unchecked ((System.Int32)(2097232)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_TEXTURE1D</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_TEXTURE1D</unmanaged-short>
        MessageIdDestroyTexture1D = unchecked ((System.Int32)(2097233)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_TEXTURE2D</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_TEXTURE2D</unmanaged-short>
        MessageIdCreateTexture2D = unchecked ((System.Int32)(2097234)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_TEXTURE2D_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_TEXTURE2D_WIN7</unmanaged-short>
        MessageIdLiveTexture2DWin7 = unchecked ((System.Int32)(2097235)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_TEXTURE2D</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_TEXTURE2D</unmanaged-short>
        MessageIdDestroyTexture2D = unchecked ((System.Int32)(2097236)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_TEXTURE3D</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_TEXTURE3D</unmanaged-short>
        MessageIdCreateTexture3D = unchecked ((System.Int32)(2097237)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_TEXTURE3D_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_TEXTURE3D_WIN7</unmanaged-short>
        MessageIdLiveTexture3DWin7 = unchecked ((System.Int32)(2097238)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_TEXTURE3D</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_TEXTURE3D</unmanaged-short>
        MessageIdDestroyTexture3D = unchecked ((System.Int32)(2097239)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_SHADERRESOURCEVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_SHADERRESOURCEVIEW</unmanaged-short>
        MessageIdCreateShaderResourceView = unchecked ((System.Int32)(2097240)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_SHADERRESOURCEVIEW_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_SHADERRESOURCEVIEW_WIN7</unmanaged-short>
        MessageIdLiveShaderResourceViewWin7 = unchecked ((System.Int32)(2097241)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_SHADERRESOURCEVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_SHADERRESOURCEVIEW</unmanaged-short>
        MessageIdDestroyShaderResourceView = unchecked ((System.Int32)(2097242)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_RENDERTARGETVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_RENDERTARGETVIEW</unmanaged-short>
        MessageIdCreateRenderTargetView = unchecked ((System.Int32)(2097243)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_RENDERTARGETVIEW_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_RENDERTARGETVIEW_WIN7</unmanaged-short>
        MessageIdLiveRenderTargetViewWin7 = unchecked ((System.Int32)(2097244)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_RENDERTARGETVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_RENDERTARGETVIEW</unmanaged-short>
        MessageIdDestroyRenderTargetView = unchecked ((System.Int32)(2097245)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_DEPTHSTENCILVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_DEPTHSTENCILVIEW</unmanaged-short>
        MessageIdCreateDepthStencilView = unchecked ((System.Int32)(2097246)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILVIEW_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILVIEW_WIN7</unmanaged-short>
        MessageIdLiveDepthStencilViewWin7 = unchecked ((System.Int32)(2097247)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_DEPTHSTENCILVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_DEPTHSTENCILVIEW</unmanaged-short>
        MessageIdDestroyDepthStencilView = unchecked ((System.Int32)(2097248)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_VERTEXSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_VERTEXSHADER</unmanaged-short>
        MessageIdCreateVertexShader = unchecked ((System.Int32)(2097249)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_VERTEXSHADER_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_VERTEXSHADER_WIN7</unmanaged-short>
        MessageIdLiveVertexShaderWin7 = unchecked ((System.Int32)(2097250)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_VERTEXSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_VERTEXSHADER</unmanaged-short>
        MessageIdDestroyVertexShader = unchecked ((System.Int32)(2097251)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_HULLSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_HULLSHADER</unmanaged-short>
        MessageIdCreateHullShader = unchecked ((System.Int32)(2097252)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_HULLSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_HULLSHADER</unmanaged-short>
        MessageIdLiveHullShader = unchecked ((System.Int32)(2097253)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_HULLSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_HULLSHADER</unmanaged-short>
        MessageIdDestroyHullShader = unchecked ((System.Int32)(2097254)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_DOMAINSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_DOMAINSHADER</unmanaged-short>
        MessageIdCreateDomainShader = unchecked ((System.Int32)(2097255)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_DOMAINSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_DOMAINSHADER</unmanaged-short>
        MessageIdLiveDomainShader = unchecked ((System.Int32)(2097256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_DOMAINSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_DOMAINSHADER</unmanaged-short>
        MessageIdDestroyDomainShader = unchecked ((System.Int32)(2097257)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_GEOMETRYSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_GEOMETRYSHADER</unmanaged-short>
        MessageIdCreateGeometryShader = unchecked ((System.Int32)(2097258)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_GEOMETRYSHADER_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_GEOMETRYSHADER_WIN7</unmanaged-short>
        MessageIdLiveGeometryShaderWin7 = unchecked ((System.Int32)(2097259)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_GEOMETRYSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_GEOMETRYSHADER</unmanaged-short>
        MessageIdDestroyGeometryShader = unchecked ((System.Int32)(2097260)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_PIXELSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_PIXELSHADER</unmanaged-short>
        MessageIdCreatePixelShader = unchecked ((System.Int32)(2097261)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_PIXELSHADER_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_PIXELSHADER_WIN7</unmanaged-short>
        MessageIdLivePixelShaderWin7 = unchecked ((System.Int32)(2097262)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_PIXELSHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_PIXELSHADER</unmanaged-short>
        MessageIdDestroyPixelShader = unchecked ((System.Int32)(2097263)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_INPUTLAYOUT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_INPUTLAYOUT</unmanaged-short>
        MessageIdCreateInputLayout = unchecked ((System.Int32)(2097264)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_INPUTLAYOUT_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_INPUTLAYOUT_WIN7</unmanaged-short>
        MessageIdLiveInputLayoutWin7 = unchecked ((System.Int32)(2097265)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_INPUTLAYOUT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_INPUTLAYOUT</unmanaged-short>
        MessageIdDestroyInputLayout = unchecked ((System.Int32)(2097266)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_SAMPLER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_SAMPLER</unmanaged-short>
        MessageIdCreateSampler = unchecked ((System.Int32)(2097267)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_SAMPLER_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_SAMPLER_WIN7</unmanaged-short>
        MessageIdLiveSamplerWin7 = unchecked ((System.Int32)(2097268)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_SAMPLER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_SAMPLER</unmanaged-short>
        MessageIdDestroySampler = unchecked ((System.Int32)(2097269)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_BLENDSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_BLENDSTATE</unmanaged-short>
        MessageIdCreateBlendState = unchecked ((System.Int32)(2097270)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_BLENDSTATE_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_BLENDSTATE_WIN7</unmanaged-short>
        MessageIdLiveBlendStateWin7 = unchecked ((System.Int32)(2097271)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_BLENDSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_BLENDSTATE</unmanaged-short>
        MessageIdDestroyBlendState = unchecked ((System.Int32)(2097272)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_DEPTHSTENCILSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_DEPTHSTENCILSTATE</unmanaged-short>
        MessageIdCreateDepthStencilState = unchecked ((System.Int32)(2097273)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILSTATE_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILSTATE_WIN7</unmanaged-short>
        MessageIdLiveDepthStencilStateWin7 = unchecked ((System.Int32)(2097274)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_DEPTHSTENCILSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_DEPTHSTENCILSTATE</unmanaged-short>
        MessageIdDestroyDepthStencilState = unchecked ((System.Int32)(2097275)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_RASTERIZERSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_RASTERIZERSTATE</unmanaged-short>
        MessageIdCreateRasterizerstate = unchecked ((System.Int32)(2097276)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_RASTERIZERSTATE_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_RASTERIZERSTATE_WIN7</unmanaged-short>
        MessageIdLiveRasterizerstateWin7 = unchecked ((System.Int32)(2097277)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_RASTERIZERSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_RASTERIZERSTATE</unmanaged-short>
        MessageIdDestroyRasterizerstate = unchecked ((System.Int32)(2097278)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_QUERY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_QUERY</unmanaged-short>
        MessageIdCreateQuery = unchecked ((System.Int32)(2097279)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_QUERY_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_QUERY_WIN7</unmanaged-short>
        MessageIdLiveQueryWin7 = unchecked ((System.Int32)(2097280)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_QUERY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_QUERY</unmanaged-short>
        MessageIdDestroyQuery = unchecked ((System.Int32)(2097281)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_PREDICATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_PREDICATE</unmanaged-short>
        MessageIdCreatePredicate = unchecked ((System.Int32)(2097282)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_PREDICATE_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_PREDICATE_WIN7</unmanaged-short>
        MessageIdLivePredicateWin7 = unchecked ((System.Int32)(2097283)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_PREDICATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_PREDICATE</unmanaged-short>
        MessageIdDestroyPredicate = unchecked ((System.Int32)(2097284)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_COUNTER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_COUNTER</unmanaged-short>
        MessageIdCreateCounter = unchecked ((System.Int32)(2097285)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_COUNTER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_COUNTER</unmanaged-short>
        MessageIdDestroyCounter = unchecked ((System.Int32)(2097286)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_COMMANDLIST</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_COMMANDLIST</unmanaged-short>
        MessageIdCreateCommandlist = unchecked ((System.Int32)(2097287)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_COMMANDLIST</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_COMMANDLIST</unmanaged-short>
        MessageIdLiveCommandlist = unchecked ((System.Int32)(2097288)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_COMMANDLIST</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_COMMANDLIST</unmanaged-short>
        MessageIdDestroyCommandlist = unchecked ((System.Int32)(2097289)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_CLASSINSTANCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_CLASSINSTANCE</unmanaged-short>
        MessageIdCreateClassInstance = unchecked ((System.Int32)(2097290)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_CLASSINSTANCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_CLASSINSTANCE</unmanaged-short>
        MessageIdLiveClassInstance = unchecked ((System.Int32)(2097291)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_CLASSINSTANCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_CLASSINSTANCE</unmanaged-short>
        MessageIdDestroyClassInstance = unchecked ((System.Int32)(2097292)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_CLASSLINKAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_CLASSLINKAGE</unmanaged-short>
        MessageIdCreateClassLinkage = unchecked ((System.Int32)(2097293)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_CLASSLINKAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_CLASSLINKAGE</unmanaged-short>
        MessageIdLiveClassLinkage = unchecked ((System.Int32)(2097294)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_CLASSLINKAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_CLASSLINKAGE</unmanaged-short>
        MessageIdDestroyClassLinkage = unchecked ((System.Int32)(2097295)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_DEVICE_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_DEVICE_WIN7</unmanaged-short>
        MessageIdLiveDeviceWin7 = unchecked ((System.Int32)(2097296)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_OBJECT_SUMMARY_WIN7</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_OBJECT_SUMMARY_WIN7</unmanaged-short>
        MessageIdLiveObjectSummaryWin7 = unchecked ((System.Int32)(2097297)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_COMPUTESHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_COMPUTESHADER</unmanaged-short>
        MessageIdCreateComputeShader = unchecked ((System.Int32)(2097298)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_COMPUTESHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_COMPUTESHADER</unmanaged-short>
        MessageIdLiveComputeShader = unchecked ((System.Int32)(2097299)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_COMPUTESHADER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_COMPUTESHADER</unmanaged-short>
        MessageIdDestroyComputeShader = unchecked ((System.Int32)(2097300)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_UNORDEREDACCESSVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_UNORDEREDACCESSVIEW</unmanaged-short>
        MessageIdCreateUnorderedAccessView = unchecked ((System.Int32)(2097301)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_UNORDEREDACCESSVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_UNORDEREDACCESSVIEW</unmanaged-short>
        MessageIdLiveUnorderedAccessView = unchecked ((System.Int32)(2097302)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_UNORDEREDACCESSVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_UNORDEREDACCESSVIEW</unmanaged-short>
        MessageIdDestroyUnorderedAccessView = unchecked ((System.Int32)(2097303)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INTERFACES_FEATURELEVEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INTERFACES_FEATURELEVEL</unmanaged-short>
        MessageIdDeviceSetShaderInterfacesFeaturelevel = unchecked ((System.Int32)(2097304)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INTERFACE_COUNT_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INTERFACE_COUNT_MISMATCH</unmanaged-short>
        MessageIdDeviceSetShaderInterfaceCountMismatch = unchecked ((System.Int32)(2097305)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE</unmanaged-short>
        MessageIdDeviceSetShaderInvalidInstance = unchecked ((System.Int32)(2097306)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_INDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_INDEX</unmanaged-short>
        MessageIdDeviceSetShaderInvalidInstanceIndex = unchecked ((System.Int32)(2097307)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_TYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_TYPE</unmanaged-short>
        MessageIdDeviceSetShaderInvalidInstanceType = unchecked ((System.Int32)(2097308)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_DATA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_DATA</unmanaged-short>
        MessageIdDeviceSetShaderInvalidInstanceData = unchecked ((System.Int32)(2097309)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SETSHADER_UNBOUND_INSTANCE_DATA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SETSHADER_UNBOUND_INSTANCE_DATA</unmanaged-short>
        MessageIdDeviceSetShaderUnboundInstanceData = unchecked ((System.Int32)(2097310)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INSTANCE_DATA_BINDINGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SETSHADER_INSTANCE_DATA_BINDINGS</unmanaged-short>
        MessageIdDeviceSetShaderInstanceDataBindingS = unchecked ((System.Int32)(2097311)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATESHADER_CLASSLINKAGE_FULL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATESHADER_CLASSLINKAGE_FULL</unmanaged-short>
        MessageIdDeviceCreateShaderClassLinkageFull = unchecked ((System.Int32)(2097312)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_UNRECOGNIZED_FEATURE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_UNRECOGNIZED_FEATURE</unmanaged-short>
        MessageIdDeviceCheckFeaturesupportUnrecognizedFeature = unchecked ((System.Int32)(2097313)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_MISMATCHED_DATA_SIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_MISMATCHED_DATA_SIZE</unmanaged-short>
        MessageIdDeviceCheckFeaturesupportMismatchedDataSize = unchecked ((System.Int32)(2097314)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_INVALIDARG_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_INVALIDARG_RETURN</unmanaged-short>
        MessageIdDeviceCheckFeaturesupportInvalidArgumentReturn = unchecked ((System.Int32)(2097315)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSSETSHADERRESOURCES_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSSETSHADERRESOURCES_HAZARD</unmanaged-short>
        MessageIdDeviceComputeShaderSetShaderResourcesHazard = unchecked ((System.Int32)(2097316)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSSETCONSTANTBUFFERS_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSSETCONSTANTBUFFERS_HAZARD</unmanaged-short>
        MessageIdDeviceComputeShaderSetConstantBuffersHazard = unchecked ((System.Int32)(2097317)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CSSETSHADERRESOURCES_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CSSETSHADERRESOURCES_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdComputeShaderSetShaderResourcesUnbindDeletingObject = unchecked ((System.Int32)(2097318)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdComputeShaderSetConstantBuffersUnbindDeletingObject = unchecked ((System.Int32)(2097319)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCALL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCALL</unmanaged-short>
        MessageIdCreateComputeShaderInvalidCall = unchecked ((System.Int32)(2097320)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATECOMPUTESHADER_OUTOFMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATECOMPUTESHADER_OUTOFMEMORY</unmanaged-short>
        MessageIdCreateComputeShaderOufOfMemory = unchecked ((System.Int32)(2097321)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERBYTECODE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERBYTECODE</unmanaged-short>
        MessageIdCreateComputeShaderInvalidShaderBytecode = unchecked ((System.Int32)(2097322)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERTYPE</unmanaged-short>
        MessageIdCreateComputeShaderInvalidShaderType = unchecked ((System.Int32)(2097323)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCLASSLINKAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCLASSLINKAGE</unmanaged-short>
        MessageIdCreateComputeShaderInvalidClassLinkage = unchecked ((System.Int32)(2097324)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSSETSHADERRESOURCES_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSSETSHADERRESOURCES_VIEWS_EMPTY</unmanaged-short>
        MessageIdDeviceComputeShaderSetShaderResourcesViewsEmpty = unchecked ((System.Int32)(2097325)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_INVALIDBUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_INVALIDBUFFER</unmanaged-short>
        MessageIdComputeShaderSetConstantBuffersInvalidBuffer = unchecked ((System.Int32)(2097326)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSSETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSSETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDeviceComputeShaderSetConstantBuffersBuffersEmpty = unchecked ((System.Int32)(2097327)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSSETSAMPLERS_SAMPLERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSSETSAMPLERS_SAMPLERS_EMPTY</unmanaged-short>
        MessageIdDeviceComputeShaderSetSamplersSamplersEmpty = unchecked ((System.Int32)(2097328)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSGETSHADERRESOURCES_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSGETSHADERRESOURCES_VIEWS_EMPTY</unmanaged-short>
        MessageIdDeviceComputeShaderGetShaderResourcesViewsEmpty = unchecked ((System.Int32)(2097329)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSGETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSGETCONSTANTBUFFERS_BUFFERS_EMPTY</unmanaged-short>
        MessageIdDeviceComputeShaderGetConstantBuffersBuffersEmpty = unchecked ((System.Int32)(2097330)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSGETSAMPLERS_SAMPLERS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSGETSAMPLERS_SAMPLERS_EMPTY</unmanaged-short>
        MessageIdDeviceComputeShaderGetSamplersSamplersEmpty = unchecked ((System.Int32)(2097331)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateVertexShaderDoubleFloatopsnotsupported = unchecked ((System.Int32)(2097332)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateHullShaderDoubleFloatopsnotsupported = unchecked ((System.Int32)(2097333)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateDomainShaderDoubleFloatopsnotsupported = unchecked ((System.Int32)(2097334)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateGeometryShaderDoubleFloatopsnotsupported = unchecked ((System.Int32)(2097335)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateGeometryShaderWithStreamOutputDoubleFloatopsnotsupported = unchecked ((System.Int32)(2097336)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreatePixelShaderDoubleFloatopsnotsupported = unchecked ((System.Int32)(2097337)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEFLOATOPSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateComputeShaderDoubleFloatopsnotsupported = unchecked ((System.Int32)(2097338)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDSTRUCTURESTRIDE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDSTRUCTURESTRIDE</unmanaged-short>
        MessageIdCreateBufferInvalidStructurestride = unchecked ((System.Int32)(2097339)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFLAGS</unmanaged-short>
        MessageIdCreateShaderResourceViewInvalidFlags = unchecked ((System.Int32)(2097340)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDRESOURCE</unmanaged-short>
        MessageIdCreateUnorderedAccessViewInvalidResource = unchecked ((System.Int32)(2097341)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDESC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDESC</unmanaged-short>
        MessageIdCreateUnorderedAccessViewInvalidDescription = unchecked ((System.Int32)(2097342)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFORMAT</unmanaged-short>
        MessageIdCreateUnorderedAccessViewInvalidFormat = unchecked ((System.Int32)(2097343)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS</unmanaged-short>
        MessageIdCreateUnorderedAccessViewInvalidDimensions = unchecked ((System.Int32)(2097344)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_UNRECOGNIZEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_UNRECOGNIZEDFORMAT</unmanaged-short>
        MessageIdCreateUnorderedAccessViewUnrecognizedFormat = unchecked ((System.Int32)(2097345)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_HAZARD</unmanaged-short>
        MessageIdDeviceOutputMergerSetRenderTargetsAndUnorderedAccessViewsHazard = unchecked ((System.Int32)(2097346)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_OVERLAPPING_OLD_SLOTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_OVERLAPPING_OLD_SLOTS</unmanaged-short>
        MessageIdDeviceOutputMergerSetRenderTargetsAndUnorderedAccessViewsOverlappingOldSlots = unchecked ((System.Int32)(2097347)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_NO_OP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_NO_OP</unmanaged-short>
        MessageIdDeviceOutputMergerSetRenderTargetsAndUnorderedAccessViewsNoOperation = unchecked ((System.Int32)(2097348)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CSSETUNORDEREDACCESSVIEWS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CSSETUNORDEREDACCESSVIEWS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdComputeShaderSetUnorderedAccessViewsUnbindDeletingObject = unchecked ((System.Int32)(2097349)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_PSSETUNORDEREDACCESSVIEWS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_PSSETUNORDEREDACCESSVIEWS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdPixelShaderSetUnorderedAccessViewsUnbindDeletingObject = unchecked ((System.Int32)(2097350)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDARG_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDARG_RETURN</unmanaged-short>
        MessageIdCreateUnorderedAccessViewInvalidArgumentReturn = unchecked ((System.Int32)(2097351)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateUnorderedAccessViewOufOfMemoryReturn = unchecked ((System.Int32)(2097352)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_TOOMANYOBJECTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_TOOMANYOBJECTS</unmanaged-short>
        MessageIdCreateUnorderedAccessViewTooManyObjects = unchecked ((System.Int32)(2097353)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_HAZARD</unmanaged-short>
        MessageIdDeviceComputeShaderSetUnorderedAccessViewsHazard = unchecked ((System.Int32)(2097354)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_DENORMFLUSH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_DENORMFLUSH</unmanaged-short>
        MessageIdClearunorderedaccessviewDenormflush = unchecked ((System.Int32)(2097355)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSS_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSS_VIEWS_EMPTY</unmanaged-short>
        MessageIdDeviceComputeShaderSetUnorderedAccessSViewsEmpty = unchecked ((System.Int32)(2097356)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSGETUNORDEREDACCESSS_VIEWS_EMPTY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSGETUNORDEREDACCESSS_VIEWS_EMPTY</unmanaged-short>
        MessageIdDeviceComputeShaderGetUnorderedAccessSViewsEmpty = unchecked ((System.Int32)(2097357)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFLAGS</unmanaged-short>
        MessageIdCreateUnorderedAccessViewInvalidFlags = unchecked ((System.Int32)(2097358)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESESOURCEVIEW_TOOMANYOBJECTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESESOURCEVIEW_TOOMANYOBJECTS</unmanaged-short>
        MessageIdCreateShaderResesourceviewTooManyObjects = unchecked ((System.Int32)(2097359)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_INVALID_ARG_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_INVALID_ARG_BUFFER</unmanaged-short>
        MessageIdDeviceDispatchindirectInvalidArgumentBuffer = unchecked ((System.Int32)(2097360)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_UNALIGNED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_UNALIGNED</unmanaged-short>
        MessageIdDeviceDispatchindirectOffsetUnaligned = unchecked ((System.Int32)(2097361)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_OVERFLOW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_OVERFLOW</unmanaged-short>
        MessageIdDeviceDispatchindirectOffsetOverflow = unchecked ((System.Int32)(2097362)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDCONTEXT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDCONTEXT</unmanaged-short>
        MessageIdDeviceSetResourceMinimumLodInvalidContext = unchecked ((System.Int32)(2097363)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDRESOURCE</unmanaged-short>
        MessageIdDeviceSetResourceMinimumLodInvalidResource = unchecked ((System.Int32)(2097364)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDMINLOD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDMINLOD</unmanaged-short>
        MessageIdDeviceSetResourceMinimumLodInvalidMinimumLod = unchecked ((System.Int32)(2097365)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_GETRESOURCEMINLOD_INVALIDCONTEXT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_GETRESOURCEMINLOD_INVALIDCONTEXT</unmanaged-short>
        MessageIdDeviceGetResourceMinimumLodInvalidContext = unchecked ((System.Int32)(2097366)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_GETRESOURCEMINLOD_INVALIDRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_GETRESOURCEMINLOD_INVALIDRESOURCE</unmanaged-short>
        MessageIdDeviceGetResourceMinimumLodInvalidResource = unchecked ((System.Int32)(2097367)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_OMSETDEPTHSTENCIL_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_OMSETDEPTHSTENCIL_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdOutputMergerSetDepthStencilUnbindDeletingObject = unchecked ((System.Int32)(2097368)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DEPTH_READONLY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DEPTH_READONLY</unmanaged-short>
        MessageIdCleardepthstencilviewDepthReadonly = unchecked ((System.Int32)(2097369)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_STENCIL_READONLY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_STENCIL_READONLY</unmanaged-short>
        MessageIdCleardepthstencilviewStencilReadonly = unchecked ((System.Int32)(2097370)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKFEATURESUPPORT_FORMAT_DEPRECATED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKFEATURESUPPORT_FORMAT_DEPRECATED</unmanaged-short>
        MessageIdCheckFeaturesupportFormatDeprecated = unchecked ((System.Int32)(2097371)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RETURN_TYPE_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RETURN_TYPE_MISMATCH</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewReturnTypeMismatch = unchecked ((System.Int32)(2097372)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewNotSet = unchecked ((System.Int32)(2097373)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_UNORDEREDACCESSVIEW_RENDERTARGETVIEW_OVERLAP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_UNORDEREDACCESSVIEW_RENDERTARGETVIEW_OVERLAP</unmanaged-short>
        MessageIdDeviceDrawUnorderedAccessViewRenderTargetViewOverlap = unchecked ((System.Int32)(2097374)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_DIMENSION_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_DIMENSION_MISMATCH</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewDimensionMismatch = unchecked ((System.Int32)(2097375)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_APPEND_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_APPEND_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewAppendUnsupported = unchecked ((System.Int32)(2097376)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMICS_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMICS_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewAtomicsUnsupported = unchecked ((System.Int32)(2097377)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_STRUCTURE_STRIDE_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_STRUCTURE_STRIDE_MISMATCH</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewStructureStrideMismatch = unchecked ((System.Int32)(2097378)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_BUFFER_TYPE_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_BUFFER_TYPE_MISMATCH</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewBufferTypeMismatch = unchecked ((System.Int32)(2097379)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RAW_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RAW_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewRawUnsupported = unchecked ((System.Int32)(2097380)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_LD_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_LD_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewFormatLdUnsupported = unchecked ((System.Int32)(2097381)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_STORE_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_STORE_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewFormatStoreUnsupported = unchecked ((System.Int32)(2097382)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_ADD_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_ADD_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewAtomicAddUnsupported = unchecked ((System.Int32)(2097383)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_BITWISE_OPS_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_BITWISE_OPS_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewAtomicBitwiseOperationsUnsupported = unchecked ((System.Int32)(2097384)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_CMPSTORE_CMPEXCHANGE_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_CMPSTORE_CMPEXCHANGE_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewAtomicCmpstoreCmpexchangeUnsupported = unchecked ((System.Int32)(2097385)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_EXCHANGE_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_EXCHANGE_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewAtomicExchangeUnsupported = unchecked ((System.Int32)(2097386)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_SIGNED_MINMAX_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_SIGNED_MINMAX_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewAtomicSignedMinimumMaximumUnsupported = unchecked ((System.Int32)(2097387)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_UNSIGNED_MINMAX_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_UNSIGNED_MINMAX_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewAtomicUnsignedMinimumMaximumUnsupported = unchecked ((System.Int32)(2097388)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DISPATCH_BOUND_RESOURCE_MAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DISPATCH_BOUND_RESOURCE_MAPPED</unmanaged-short>
        MessageIdDeviceDispatchBoundResourceMapped = unchecked ((System.Int32)(2097389)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_OVERFLOW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_OVERFLOW</unmanaged-short>
        MessageIdDeviceDispatchThreadgroupcountOverflow = unchecked ((System.Int32)(2097390)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_ZERO</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_ZERO</unmanaged-short>
        MessageIdDeviceDispatchThreadgroupcountZero = unchecked ((System.Int32)(2097391)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_STRUCTURE_STRIDE_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_STRUCTURE_STRIDE_MISMATCH</unmanaged-short>
        MessageIdDeviceShaderResourceViewStructureStrideMismatch = unchecked ((System.Int32)(2097392)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_BUFFER_TYPE_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_BUFFER_TYPE_MISMATCH</unmanaged-short>
        MessageIdDeviceShaderResourceViewBufferTypeMismatch = unchecked ((System.Int32)(2097393)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_RAW_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_RAW_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceShaderResourceViewRawUnsupported = unchecked ((System.Int32)(2097394)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DISPATCH_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DISPATCH_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceDispatchUnsupported = unchecked ((System.Int32)(2097395)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceDispatchindirectUnsupported = unchecked ((System.Int32)(2097396)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDOFFSET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDOFFSET</unmanaged-short>
        MessageIdCopyStructurecountInvalidOffset = unchecked ((System.Int32)(2097397)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_LARGEOFFSET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_LARGEOFFSET</unmanaged-short>
        MessageIdCopyStructurecountLargeOffset = unchecked ((System.Int32)(2097398)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDDESTINATIONSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDDESTINATIONSTATE</unmanaged-short>
        MessageIdCopyStructurecountInvalidDestinationState = unchecked ((System.Int32)(2097399)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDSOURCESTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDSOURCESTATE</unmanaged-short>
        MessageIdCopyStructurecountInvalidSourceState = unchecked ((System.Int32)(2097400)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_NOT_SUPPORTED</unmanaged-short>
        MessageIdCheckFormatSupportFormatNotSupported = unchecked ((System.Int32)(2097401)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_INVALIDVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_INVALIDVIEW</unmanaged-short>
        MessageIdDeviceComputeShaderSetUnorderedAccessViewsInvalidView = unchecked ((System.Int32)(2097402)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_INVALIDOFFSET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_INVALIDOFFSET</unmanaged-short>
        MessageIdDeviceComputeShaderSetUnorderedAccessViewsInvalidOffset = unchecked ((System.Int32)(2097403)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_TOOMANYVIEWS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_TOOMANYVIEWS</unmanaged-short>
        MessageIdDeviceComputeShaderSetUnorderedAccessViewsTooManyViews = unchecked ((System.Int32)(2097404)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWFLOAT_INVALIDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWFLOAT_INVALIDFORMAT</unmanaged-short>
        MessageIdClearunorderedaccessviewfloatInvalidFormat = unchecked ((System.Int32)(2097405)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_COUNTER_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_COUNTER_UNSUPPORTED</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewCounterUnsupported = unchecked ((System.Int32)(2097406)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_WARNING</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_WARNING</unmanaged-short>
        MessageIdRefWarning = unchecked ((System.Int32)(2097407)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_PIXEL_SHADER_WITHOUT_RTV_OR_DSV</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_PIXEL_SHADER_WITHOUT_RTV_OR_DSV</unmanaged-short>
        MessageIdDeviceDrawPixelShaderWithoutRenderTargetViewOrDepthStencilView = unchecked ((System.Int32)(2097408)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SHADER_ABORT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SHADER_ABORT</unmanaged-short>
        MessageIdShaderAbort = unchecked ((System.Int32)(2097409)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SHADER_MESSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SHADER_MESSAGE</unmanaged-short>
        MessageIdShaderMessage = unchecked ((System.Int32)(2097410)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SHADER_ERROR</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SHADER_ERROR</unmanaged-short>
        MessageIdShaderError = unchecked ((System.Int32)(2097411)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_OFFERRESOURCES_INVALIDRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_OFFERRESOURCES_INVALIDRESOURCE</unmanaged-short>
        MessageIdOfferresourcesInvalidResource = unchecked ((System.Int32)(2097412)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_HSSETSAMPLERS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_HSSETSAMPLERS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdHullShaderSetSamplersUnbindDeletingObject = unchecked ((System.Int32)(2097413)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DSSETSAMPLERS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DSSETSAMPLERS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdDomainShaderSetSamplersUnbindDeletingObject = unchecked ((System.Int32)(2097414)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CSSETSAMPLERS_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CSSETSAMPLERS_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdComputeShaderSetSamplersUnbindDeletingObject = unchecked ((System.Int32)(2097415)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_HSSETSHADER_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_HSSETSHADER_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdHullShaderSetShaderUnbindDeletingObject = unchecked ((System.Int32)(2097416)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DSSETSHADER_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DSSETSHADER_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdDomainShaderSetShaderUnbindDeletingObject = unchecked ((System.Int32)(2097417)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CSSETSHADER_UNBINDDELETINGOBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CSSETSHADER_UNBINDDELETINGOBJECT</unmanaged-short>
        MessageIdComputeShaderSetShaderUnbindDeletingObject = unchecked ((System.Int32)(2097418)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENQUEUESETEVENT_INVALIDARG_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENQUEUESETEVENT_INVALIDARG_RETURN</unmanaged-short>
        MessageIdEnqueueSetEventInvalidArgumentReturn = unchecked ((System.Int32)(2097419)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENQUEUESETEVENT_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENQUEUESETEVENT_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdEnqueueSetEventOufOfMemoryReturn = unchecked ((System.Int32)(2097420)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENQUEUESETEVENT_ACCESSDENIED_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENQUEUESETEVENT_ACCESSDENIED_RETURN</unmanaged-short>
        MessageIdEnqueueSetEventAccessDeniedReturn = unchecked ((System.Int32)(2097421)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_NUMUAVS_INVALIDRANGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_NUMUAVS_INVALIDRANGE</unmanaged-short>
        MessageIdDeviceOutputMergerSetRenderTargetsAndUnorderedAccessViewsNumuavsInvalidRange = unchecked ((System.Int32)(2097422)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_USE_OF_ZERO_REFCOUNT_OBJECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_USE_OF_ZERO_REFCOUNT_OBJECT</unmanaged-short>
        MessageIdUseOfZeroRefcountObject = unchecked ((System.Int32)(2097423)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_D3D11_MESSAGES_END</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_D3D11_MESSAGES_END</unmanaged-short>
        MessageIdD3D11MessagesEnd = unchecked ((System.Int32)(2097424)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_D3D11_1_MESSAGES_START</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_D3D11_1_MESSAGES_START</unmanaged-short>
        MessageIdD3D111MessagesStart = unchecked ((System.Int32)(3145728)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_VIDEODECODER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_VIDEODECODER</unmanaged-short>
        MessageIdCreateVideoDecoder = unchecked ((System.Int32)(3145729)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_VIDEOPROCESSORENUM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_VIDEOPROCESSORENUM</unmanaged-short>
        MessageIdCreateVideoProcessorEnum = unchecked ((System.Int32)(3145730)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_VIDEOPROCESSOR</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_VIDEOPROCESSOR</unmanaged-short>
        MessageIdCreateVideoProcessor = unchecked ((System.Int32)(3145731)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_DECODEROUTPUTVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_DECODEROUTPUTVIEW</unmanaged-short>
        MessageIdCreateDecoderoutputview = unchecked ((System.Int32)(3145732)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_PROCESSORINPUTVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_PROCESSORINPUTVIEW</unmanaged-short>
        MessageIdCreateProcessorInputView = unchecked ((System.Int32)(3145733)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_PROCESSOROUTPUTVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_PROCESSOROUTPUTVIEW</unmanaged-short>
        MessageIdCreateProcessorOutputView = unchecked ((System.Int32)(3145734)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_DEVICECONTEXTSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_DEVICECONTEXTSTATE</unmanaged-short>
        MessageIdCreateDevicecontextstate = unchecked ((System.Int32)(3145735)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_VIDEODECODER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_VIDEODECODER</unmanaged-short>
        MessageIdLiveVideoDecoder = unchecked ((System.Int32)(3145736)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_VIDEOPROCESSORENUM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_VIDEOPROCESSORENUM</unmanaged-short>
        MessageIdLiveVideoProcessorEnum = unchecked ((System.Int32)(3145737)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_VIDEOPROCESSOR</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_VIDEOPROCESSOR</unmanaged-short>
        MessageIdLiveVideoProcessor = unchecked ((System.Int32)(3145738)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_DECODEROUTPUTVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_DECODEROUTPUTVIEW</unmanaged-short>
        MessageIdLiveDecoderoutputview = unchecked ((System.Int32)(3145739)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_PROCESSORINPUTVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_PROCESSORINPUTVIEW</unmanaged-short>
        MessageIdLiveProcessorInputView = unchecked ((System.Int32)(3145740)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_PROCESSOROUTPUTVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_PROCESSOROUTPUTVIEW</unmanaged-short>
        MessageIdLiveProcessorOutputView = unchecked ((System.Int32)(3145741)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_DEVICECONTEXTSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_DEVICECONTEXTSTATE</unmanaged-short>
        MessageIdLiveDevicecontextstate = unchecked ((System.Int32)(3145742)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_VIDEODECODER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_VIDEODECODER</unmanaged-short>
        MessageIdDestroyVideoDecoder = unchecked ((System.Int32)(3145743)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_VIDEOPROCESSORENUM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_VIDEOPROCESSORENUM</unmanaged-short>
        MessageIdDestroyVideoProcessorEnum = unchecked ((System.Int32)(3145744)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_VIDEOPROCESSOR</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_VIDEOPROCESSOR</unmanaged-short>
        MessageIdDestroyVideoProcessor = unchecked ((System.Int32)(3145745)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_DECODEROUTPUTVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_DECODEROUTPUTVIEW</unmanaged-short>
        MessageIdDestroyDecoderoutputview = unchecked ((System.Int32)(3145746)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_PROCESSORINPUTVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_PROCESSORINPUTVIEW</unmanaged-short>
        MessageIdDestroyProcessorInputView = unchecked ((System.Int32)(3145747)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_PROCESSOROUTPUTVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_PROCESSOROUTPUTVIEW</unmanaged-short>
        MessageIdDestroyProcessorOutputView = unchecked ((System.Int32)(3145748)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_DEVICECONTEXTSTATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_DEVICECONTEXTSTATE</unmanaged-short>
        MessageIdDestroyDevicecontextstate = unchecked ((System.Int32)(3145749)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDFLAGS</unmanaged-short>
        MessageIdCreateDevicecontextstateInvalidFlags = unchecked ((System.Int32)(3145750)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDFEATURELEVEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDFEATURELEVEL</unmanaged-short>
        MessageIdCreateDevicecontextstateInvalidFeaturelevel = unchecked ((System.Int32)(3145751)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_FEATURELEVELS_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_FEATURELEVELS_NOT_SUPPORTED</unmanaged-short>
        MessageIdCreateDevicecontextstateFeaturelevelsNotSupported = unchecked ((System.Int32)(3145752)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDREFIID</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDREFIID</unmanaged-short>
        MessageIdCreateDevicecontextstateInvalidRefiid = unchecked ((System.Int32)(3145753)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DISCARDVIEW_INVALIDVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DISCARDVIEW_INVALIDVIEW</unmanaged-short>
        MessageIdDeviceDiscardviewInvalidView = unchecked ((System.Int32)(3145754)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION1_INVALIDCOPYFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION1_INVALIDCOPYFLAGS</unmanaged-short>
        MessageIdCopySubResourceRegion1InvalidCopyFlags = unchecked ((System.Int32)(3145755)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_UPDATESUBRESOURCE1_INVALIDCOPYFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_UPDATESUBRESOURCE1_INVALIDCOPYFLAGS</unmanaged-short>
        MessageIdUpdatesUbresource1InvalidCopyFlags = unchecked ((System.Int32)(3145756)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFORCEDSAMPLECOUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFORCEDSAMPLECOUNT</unmanaged-short>
        MessageIdCreateRasterizerstateInvalidForcedSamplecount = unchecked ((System.Int32)(3145757)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODER_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODER_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateVideoDecoderOufOfMemoryReturn = unchecked ((System.Int32)(3145758)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODER_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODER_NULLPARAM</unmanaged-short>
        MessageIdCreateVideoDecoderNullParam = unchecked ((System.Int32)(3145759)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODER_INVALIDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODER_INVALIDFORMAT</unmanaged-short>
        MessageIdCreateVideoDecoderInvalidFormat = unchecked ((System.Int32)(3145760)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODER_ZEROWIDTHHEIGHT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODER_ZEROWIDTHHEIGHT</unmanaged-short>
        MessageIdCreateVideoDecoderZerowidthheight = unchecked ((System.Int32)(3145761)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODER_DRIVER_INVALIDBUFFERSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODER_DRIVER_INVALIDBUFFERSIZE</unmanaged-short>
        MessageIdCreateVideoDecoderDriverInvalidBufferSize = unchecked ((System.Int32)(3145762)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODER_DRIVER_INVALIDBUFFERUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODER_DRIVER_INVALIDBUFFERUSAGE</unmanaged-short>
        MessageIdCreateVideoDecoderDriverInvalidBufferUsage = unchecked ((System.Int32)(3145763)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEODECODERPROFILECOUNT_OUTOFMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEODECODERPROFILECOUNT_OUTOFMEMORY</unmanaged-short>
        MessageIdGetVideoDecoderprofilecountOufOfMemory = unchecked ((System.Int32)(3145764)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_NULLPARAM</unmanaged-short>
        MessageIdGetVideoDecoderprofileNullParam = unchecked ((System.Int32)(3145765)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_INVALIDINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_INVALIDINDEX</unmanaged-short>
        MessageIdGetVideoDecoderprofileInvalidIndex = unchecked ((System.Int32)(3145766)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdGetVideoDecoderprofileOufOfMemoryReturn = unchecked ((System.Int32)(3145767)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKVIDEODECODERFORMAT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKVIDEODECODERFORMAT_NULLPARAM</unmanaged-short>
        MessageIdCheckVideoDecoderformatNullParam = unchecked ((System.Int32)(3145768)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKVIDEODECODERFORMAT_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKVIDEODECODERFORMAT_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCheckVideoDecoderformatOufOfMemoryReturn = unchecked ((System.Int32)(3145769)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEODECODERCONFIGCOUNT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEODECODERCONFIGCOUNT_NULLPARAM</unmanaged-short>
        MessageIdGetVideoDecoderconfigcountNullParam = unchecked ((System.Int32)(3145770)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEODECODERCONFIGCOUNT_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEODECODERCONFIGCOUNT_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdGetVideoDecoderconfigcountOufOfMemoryReturn = unchecked ((System.Int32)(3145771)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_NULLPARAM</unmanaged-short>
        MessageIdGetVideoDecoderconfigNullParam = unchecked ((System.Int32)(3145772)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_INVALIDINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_INVALIDINDEX</unmanaged-short>
        MessageIdGetVideoDecoderconfigInvalidIndex = unchecked ((System.Int32)(3145773)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdGetVideoDecoderconfigOufOfMemoryReturn = unchecked ((System.Int32)(3145774)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETDECODERCREATIONPARAMS_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETDECODERCREATIONPARAMS_NULLPARAM</unmanaged-short>
        MessageIdGetDecodercreationparamsNullParam = unchecked ((System.Int32)(3145775)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETDECODERDRIVERHANDLE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETDECODERDRIVERHANDLE_NULLPARAM</unmanaged-short>
        MessageIdGetDecoderdriverhandleNullParam = unchecked ((System.Int32)(3145776)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETDECODERBUFFER_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETDECODERBUFFER_NULLPARAM</unmanaged-short>
        MessageIdGetDecoderbufferNullParam = unchecked ((System.Int32)(3145777)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETDECODERBUFFER_INVALIDBUFFER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETDECODERBUFFER_INVALIDBUFFER</unmanaged-short>
        MessageIdGetDecoderbufferInvalidBuffer = unchecked ((System.Int32)(3145778)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETDECODERBUFFER_INVALIDTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETDECODERBUFFER_INVALIDTYPE</unmanaged-short>
        MessageIdGetDecoderbufferInvalidType = unchecked ((System.Int32)(3145779)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETDECODERBUFFER_LOCKED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETDECODERBUFFER_LOCKED</unmanaged-short>
        MessageIdGetDecoderbufferLocked = unchecked ((System.Int32)(3145780)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_NULLPARAM</unmanaged-short>
        MessageIdReleasedecoderbufferNullParam = unchecked ((System.Int32)(3145781)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_INVALIDTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_INVALIDTYPE</unmanaged-short>
        MessageIdReleasedecoderbufferInvalidType = unchecked ((System.Int32)(3145782)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_NOTLOCKED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_NOTLOCKED</unmanaged-short>
        MessageIdReleasedecoderbufferNotLocked = unchecked ((System.Int32)(3145783)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECODERBEGINFRAME_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECODERBEGINFRAME_NULLPARAM</unmanaged-short>
        MessageIdDecoderbeginframeNullParam = unchecked ((System.Int32)(3145784)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECODERBEGINFRAME_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECODERBEGINFRAME_HAZARD</unmanaged-short>
        MessageIdDecoderbeginframeHazard = unchecked ((System.Int32)(3145785)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECODERENDFRAME_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECODERENDFRAME_NULLPARAM</unmanaged-short>
        MessageIdDecoderendframeNullParam = unchecked ((System.Int32)(3145786)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SUBMITDECODERBUFFERS_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SUBMITDECODERBUFFERS_NULLPARAM</unmanaged-short>
        MessageIdSubMitdecoderbuffersNullParam = unchecked ((System.Int32)(3145787)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SUBMITDECODERBUFFERS_INVALIDTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SUBMITDECODERBUFFERS_INVALIDTYPE</unmanaged-short>
        MessageIdSubMitdecoderbuffersInvalidType = unchecked ((System.Int32)(3145788)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECODEREXTENSION_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECODEREXTENSION_NULLPARAM</unmanaged-short>
        MessageIdDecoderextensionNullParam = unchecked ((System.Int32)(3145789)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECODEREXTENSION_INVALIDRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECODEREXTENSION_INVALIDRESOURCE</unmanaged-short>
        MessageIdDecoderextensionInvalidResource = unchecked ((System.Int32)(3145790)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateVideoProcessorEnumeratorOufOfMemoryReturn = unchecked ((System.Int32)(3145791)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_NULLPARAM</unmanaged-short>
        MessageIdCreateVideoProcessorEnumeratorNullParam = unchecked ((System.Int32)(3145792)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDFRAMEFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDFRAMEFORMAT</unmanaged-short>
        MessageIdCreateVideoProcessorEnumeratorInvalidFrameFormat = unchecked ((System.Int32)(3145793)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDUSAGE</unmanaged-short>
        MessageIdCreateVideoProcessorEnumeratorInvalidUsage = unchecked ((System.Int32)(3145794)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDINPUTFRAMERATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDINPUTFRAMERATE</unmanaged-short>
        MessageIdCreateVideoProcessorEnumeratorInvalidInputFrameRate = unchecked ((System.Int32)(3145795)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDOUTPUTFRAMERATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDOUTPUTFRAMERATE</unmanaged-short>
        MessageIdCreateVideoProcessorEnumeratorInvalidOutputFrameRate = unchecked ((System.Int32)(3145796)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDWIDTHHEIGHT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDWIDTHHEIGHT</unmanaged-short>
        MessageIdCreateVideoProcessorEnumeratorInvalidWidthheight = unchecked ((System.Int32)(3145797)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEOPROCESSORCONTENTDESC_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEOPROCESSORCONTENTDESC_NULLPARAM</unmanaged-short>
        MessageIdGetVideoProcessorContentdescNullParam = unchecked ((System.Int32)(3145798)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKVIDEOPROCESSORFORMAT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKVIDEOPROCESSORFORMAT_NULLPARAM</unmanaged-short>
        MessageIdCheckVideoProcessorFormatNullParam = unchecked ((System.Int32)(3145799)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEOPROCESSORCAPS_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEOPROCESSORCAPS_NULLPARAM</unmanaged-short>
        MessageIdGetVideoProcessorCapsNullParam = unchecked ((System.Int32)(3145800)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEOPROCESSORRATECONVERSIONCAPS_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEOPROCESSORRATECONVERSIONCAPS_NULLPARAM</unmanaged-short>
        MessageIdGetVideoProcessorRateConversioncapsNullParam = unchecked ((System.Int32)(3145801)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEOPROCESSORRATECONVERSIONCAPS_INVALIDINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEOPROCESSORRATECONVERSIONCAPS_INVALIDINDEX</unmanaged-short>
        MessageIdGetVideoProcessorRateConversioncapsInvalidIndex = unchecked ((System.Int32)(3145802)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEOPROCESSORCUSTOMRATE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEOPROCESSORCUSTOMRATE_NULLPARAM</unmanaged-short>
        MessageIdGetVideoProcessorCustomrateNullParam = unchecked ((System.Int32)(3145803)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEOPROCESSORCUSTOMRATE_INVALIDINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEOPROCESSORCUSTOMRATE_INVALIDINDEX</unmanaged-short>
        MessageIdGetVideoProcessorCustomrateInvalidIndex = unchecked ((System.Int32)(3145804)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEOPROCESSORFILTERRANGE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEOPROCESSORFILTERRANGE_NULLPARAM</unmanaged-short>
        MessageIdGetVideoProcessorFilterrangeNullParam = unchecked ((System.Int32)(3145805)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEOPROCESSORFILTERRANGE_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEOPROCESSORFILTERRANGE_UNSUPPORTED</unmanaged-short>
        MessageIdGetVideoProcessorFilterrangeUnsupported = unchecked ((System.Int32)(3145806)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOR_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOR_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateVideoProcessorOufOfMemoryReturn = unchecked ((System.Int32)(3145807)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOR_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOR_NULLPARAM</unmanaged-short>
        MessageIdCreateVideoProcessorNullParam = unchecked ((System.Int32)(3145808)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTTARGETRECT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTTARGETRECT_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetOutputTargetRectangleNullParam = unchecked ((System.Int32)(3145809)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTBACKGROUNDCOLOR_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTBACKGROUNDCOLOR_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetOutputBackgroundColorNullParam = unchecked ((System.Int32)(3145810)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTBACKGROUNDCOLOR_INVALIDALPHA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTBACKGROUNDCOLOR_INVALIDALPHA</unmanaged-short>
        MessageIdVideoProcessorSetOutputBackgroundColorInvalidAlpha = unchecked ((System.Int32)(3145811)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCOLORSPACE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCOLORSPACE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetOutputColorSpaceNullParam = unchecked ((System.Int32)(3145812)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetOutputAlphaFillmodeNullParam = unchecked ((System.Int32)(3145813)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_UNSUPPORTED</unmanaged-short>
        MessageIdVideoProcessorSetOutputAlphaFillmodeUnsupported = unchecked ((System.Int32)(3145814)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetOutputAlphaFillmodeInvalidStream = unchecked ((System.Int32)(3145815)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_INVALIDFILLMODE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_INVALIDFILLMODE</unmanaged-short>
        MessageIdVideoProcessorSetOutputAlphaFillmodeInvalidFillmode = unchecked ((System.Int32)(3145816)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetOutputConstrictionNullParam = unchecked ((System.Int32)(3145817)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSTEREOMODE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSTEREOMODE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetOutputStereoModeNullParam = unchecked ((System.Int32)(3145818)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSTEREOMODE_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSTEREOMODE_UNSUPPORTED</unmanaged-short>
        MessageIdVideoProcessorSetOutputStereoModeUnsupported = unchecked ((System.Int32)(3145819)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTEXTENSION_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTEXTENSION_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetOutputExtensionNullParam = unchecked ((System.Int32)(3145820)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTTARGETRECT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTTARGETRECT_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetOutputTargetRectangleNullParam = unchecked ((System.Int32)(3145821)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTBACKGROUNDCOLOR_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTBACKGROUNDCOLOR_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetOutputBackgroundColorNullParam = unchecked ((System.Int32)(3145822)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCOLORSPACE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCOLORSPACE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetOutputColorSpaceNullParam = unchecked ((System.Int32)(3145823)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTALPHAFILLMODE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTALPHAFILLMODE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetOutputAlphaFillmodeNullParam = unchecked ((System.Int32)(3145824)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCONSTRICTION_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCONSTRICTION_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetOutputConstrictionNullParam = unchecked ((System.Int32)(3145825)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_UNSUPPORTED</unmanaged-short>
        MessageIdVideoProcessorSetOutputConstrictionUnsupported = unchecked ((System.Int32)(3145826)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_INVALIDSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_INVALIDSIZE</unmanaged-short>
        MessageIdVideoProcessorSetOutputConstrictionInvalidSize = unchecked ((System.Int32)(3145827)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTSTEREOMODE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTSTEREOMODE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetOutputStereoModeNullParam = unchecked ((System.Int32)(3145828)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTEXTENSION_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTEXTENSION_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetOutputExtensionNullParam = unchecked ((System.Int32)(3145829)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamFrameFormatNullParam = unchecked ((System.Int32)(3145830)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_INVALIDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_INVALIDFORMAT</unmanaged-short>
        MessageIdVideoProcessorSetStreamFrameFormatInvalidFormat = unchecked ((System.Int32)(3145831)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamFrameFormatInvalidStream = unchecked ((System.Int32)(3145832)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamColorSpaceNullParam = unchecked ((System.Int32)(3145833)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamColorSpaceInvalidStream = unchecked ((System.Int32)(3145834)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamOutputRateNullParam = unchecked ((System.Int32)(3145835)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDRATE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDRATE</unmanaged-short>
        MessageIdVideoProcessorSetStreamOutputRateInvalidRate = unchecked ((System.Int32)(3145836)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDFLAG</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDFLAG</unmanaged-short>
        MessageIdVideoProcessorSetStreamOutputRateInvalidFlags = unchecked ((System.Int32)(3145837)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamOutputRateInvalidStream = unchecked ((System.Int32)(3145838)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamSourceRectangleNullParam = unchecked ((System.Int32)(3145839)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamSourceRectangleInvalidStream = unchecked ((System.Int32)(3145840)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_INVALIDRECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_INVALIDRECT</unmanaged-short>
        MessageIdVideoProcessorSetStreamSourceRectangleInvalidRectangle = unchecked ((System.Int32)(3145841)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamDestinationRectangleNullParam = unchecked ((System.Int32)(3145842)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamDestinationRectangleInvalidStream = unchecked ((System.Int32)(3145843)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_INVALIDRECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_INVALIDRECT</unmanaged-short>
        MessageIdVideoProcessorSetStreamDestinationRectangleInvalidRectangle = unchecked ((System.Int32)(3145844)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamAlphaNullParam = unchecked ((System.Int32)(3145845)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamAlphaInvalidStream = unchecked ((System.Int32)(3145846)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_INVALIDALPHA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_INVALIDALPHA</unmanaged-short>
        MessageIdVideoProcessorSetStreamAlphaInvalidAlpha = unchecked ((System.Int32)(3145847)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamPaletteNullParam = unchecked ((System.Int32)(3145848)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamPaletteInvalidStream = unchecked ((System.Int32)(3145849)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDCOUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDCOUNT</unmanaged-short>
        MessageIdVideoProcessorSetStreamPaletteInvalidCount = unchecked ((System.Int32)(3145850)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDALPHA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDALPHA</unmanaged-short>
        MessageIdVideoProcessorSetStreamPaletteInvalidAlpha = unchecked ((System.Int32)(3145851)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamPixelAspectRatioNullParam = unchecked ((System.Int32)(3145852)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamPixelAspectRatioInvalidStream = unchecked ((System.Int32)(3145853)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_INVALIDRATIO</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_INVALIDRATIO</unmanaged-short>
        MessageIdVideoProcessorSetStreamPixelAspectRatioInvalidRatio = unchecked ((System.Int32)(3145854)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamLumakeyNullParam = unchecked ((System.Int32)(3145855)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamLumakeyInvalidStream = unchecked ((System.Int32)(3145856)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_INVALIDRANGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_INVALIDRANGE</unmanaged-short>
        MessageIdVideoProcessorSetStreamLumakeyInvalidRange = unchecked ((System.Int32)(3145857)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_UNSUPPORTED</unmanaged-short>
        MessageIdVideoProcessorSetStreamLumakeyUnsupported = unchecked ((System.Int32)(3145858)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamStereoFormatNullParam = unchecked ((System.Int32)(3145859)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamStereoFormatInvalidStream = unchecked ((System.Int32)(3145860)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_UNSUPPORTED</unmanaged-short>
        MessageIdVideoProcessorSetStreamStereoFormatUnsupported = unchecked ((System.Int32)(3145861)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_FLIPUNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_FLIPUNSUPPORTED</unmanaged-short>
        MessageIdVideoProcessorSetStreamStereoFormatFlipUnsupported = unchecked ((System.Int32)(3145862)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_MONOOFFSETUNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_MONOOFFSETUNSUPPORTED</unmanaged-short>
        MessageIdVideoProcessorSetStreamStereoFormatMonoOffsetUnsupported = unchecked ((System.Int32)(3145863)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_FORMATUNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_FORMATUNSUPPORTED</unmanaged-short>
        MessageIdVideoProcessorSetStreamStereoFormatFormatUnsupported = unchecked ((System.Int32)(3145864)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_INVALIDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_INVALIDFORMAT</unmanaged-short>
        MessageIdVideoProcessorSetStreamStereoFormatInvalidFormat = unchecked ((System.Int32)(3145865)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMAUTOPROCESSINGMODE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMAUTOPROCESSINGMODE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamAutoprocessingmodeNullParam = unchecked ((System.Int32)(3145866)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMAUTOPROCESSINGMODE_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMAUTOPROCESSINGMODE_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamAutoprocessingmodeInvalidStream = unchecked ((System.Int32)(3145867)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamFilterNullParam = unchecked ((System.Int32)(3145868)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamFilterInvalidStream = unchecked ((System.Int32)(3145869)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDFILTER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDFILTER</unmanaged-short>
        MessageIdVideoProcessorSetStreamFilterInvalidFilter = unchecked ((System.Int32)(3145870)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_UNSUPPORTED</unmanaged-short>
        MessageIdVideoProcessorSetStreamFilterUnsupported = unchecked ((System.Int32)(3145871)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDLEVEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDLEVEL</unmanaged-short>
        MessageIdVideoProcessorSetStreamFilterInvalidLevel = unchecked ((System.Int32)(3145872)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMEXTENSION_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMEXTENSION_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamExtensionNullParam = unchecked ((System.Int32)(3145873)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMEXTENSION_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMEXTENSION_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamExtensionInvalidStream = unchecked ((System.Int32)(3145874)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFRAMEFORMAT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFRAMEFORMAT_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamFrameFormatNullParam = unchecked ((System.Int32)(3145875)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamColorSpaceNullParam = unchecked ((System.Int32)(3145876)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMOUTPUTRATE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMOUTPUTRATE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamOutputRateNullParam = unchecked ((System.Int32)(3145877)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSOURCERECT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSOURCERECT_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamSourceRectangleNullParam = unchecked ((System.Int32)(3145878)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMDESTRECT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMDESTRECT_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamDestinationRectangleNullParam = unchecked ((System.Int32)(3145879)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMALPHA_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMALPHA_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamAlphaNullParam = unchecked ((System.Int32)(3145880)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPALETTE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPALETTE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamPaletteNullParam = unchecked ((System.Int32)(3145881)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPIXELASPECTRATIO_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPIXELASPECTRATIO_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamPixelAspectRatioNullParam = unchecked ((System.Int32)(3145882)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMLUMAKEY_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMLUMAKEY_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamLumakeyNullParam = unchecked ((System.Int32)(3145883)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSTEREOFORMAT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSTEREOFORMAT_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamStereoFormatNullParam = unchecked ((System.Int32)(3145884)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMAUTOPROCESSINGMODE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMAUTOPROCESSINGMODE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamAutoprocessingmodeNullParam = unchecked ((System.Int32)(3145885)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFILTER_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFILTER_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamFilterNullParam = unchecked ((System.Int32)(3145886)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMEXTENSION_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMEXTENSION_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamExtensionNullParam = unchecked ((System.Int32)(3145887)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMEXTENSION_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMEXTENSION_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamExtensionInvalidStream = unchecked ((System.Int32)(3145888)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorBlitNullParam = unchecked ((System.Int32)(3145889)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDSTREAMCOUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDSTREAMCOUNT</unmanaged-short>
        MessageIdVideoProcessorBlitInvalidStreamCount = unchecked ((System.Int32)(3145890)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_TARGETRECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_TARGETRECT</unmanaged-short>
        MessageIdVideoProcessorBlitTargetRectangle = unchecked ((System.Int32)(3145891)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDOUTPUT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDOUTPUT</unmanaged-short>
        MessageIdVideoProcessorBlitInvalidOutput = unchecked ((System.Int32)(3145892)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDPASTFRAMES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDPASTFRAMES</unmanaged-short>
        MessageIdVideoProcessorBlitInvalidPastframes = unchecked ((System.Int32)(3145893)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDFUTUREFRAMES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDFUTUREFRAMES</unmanaged-short>
        MessageIdVideoProcessorBlitInvalidFutureFrames = unchecked ((System.Int32)(3145894)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDSOURCERECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDSOURCERECT</unmanaged-short>
        MessageIdVideoProcessorBlitInvalidSourceRectangle = unchecked ((System.Int32)(3145895)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDDESTRECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDDESTRECT</unmanaged-short>
        MessageIdVideoProcessorBlitInvalidDestinationRectangle = unchecked ((System.Int32)(3145896)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDINPUTRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDINPUTRESOURCE</unmanaged-short>
        MessageIdVideoProcessorBlitInvalidInputResource = unchecked ((System.Int32)(3145897)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDARRAYSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDARRAYSIZE</unmanaged-short>
        MessageIdVideoProcessorBlitInvalidArraySize = unchecked ((System.Int32)(3145898)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDARRAY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDARRAY</unmanaged-short>
        MessageIdVideoProcessorBlitInvalidArray = unchecked ((System.Int32)(3145899)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_RIGHTEXPECTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_RIGHTEXPECTED</unmanaged-short>
        MessageIdVideoProcessorBlitRightexpected = unchecked ((System.Int32)(3145900)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_RIGHTNOTEXPECTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_RIGHTNOTEXPECTED</unmanaged-short>
        MessageIdVideoProcessorBlitRightnotexpected = unchecked ((System.Int32)(3145901)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_STEREONOTENABLED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_STEREONOTENABLED</unmanaged-short>
        MessageIdVideoProcessorBlitStereoNotEnabled = unchecked ((System.Int32)(3145902)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDRIGHTRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDRIGHTRESOURCE</unmanaged-short>
        MessageIdVideoProcessorBlitInvalidRightresource = unchecked ((System.Int32)(3145903)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_NOSTEREOSTREAMS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_NOSTEREOSTREAMS</unmanaged-short>
        MessageIdVideoProcessorBlitNostereostreams = unchecked ((System.Int32)(3145904)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INPUTHAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INPUTHAZARD</unmanaged-short>
        MessageIdVideoProcessorBlitInputHazard = unchecked ((System.Int32)(3145905)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_OUTPUTHAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_OUTPUTHAZARD</unmanaged-short>
        MessageIdVideoProcessorBlitOutputHazard = unchecked ((System.Int32)(3145906)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateVideoDecoderoutputviewOufOfMemoryReturn = unchecked ((System.Int32)(3145907)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_NULLPARAM</unmanaged-short>
        MessageIdCreateVideoDecoderoutputviewNullParam = unchecked ((System.Int32)(3145908)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDTYPE</unmanaged-short>
        MessageIdCreateVideoDecoderoutputviewInvalidType = unchecked ((System.Int32)(3145909)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDBIND</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDBIND</unmanaged-short>
        MessageIdCreateVideoDecoderoutputviewInvalidBind = unchecked ((System.Int32)(3145910)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_UNSUPPORTEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_UNSUPPORTEDFORMAT</unmanaged-short>
        MessageIdCreateVideoDecoderoutputviewUnsupportedFormat = unchecked ((System.Int32)(3145911)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDMIP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDMIP</unmanaged-short>
        MessageIdCreateVideoDecoderoutputviewInvalidMip = unchecked ((System.Int32)(3145912)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_UNSUPPORTEMIP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_UNSUPPORTEMIP</unmanaged-short>
        MessageIdCreateVideoDecoderoutputviewUnsupportemip = unchecked ((System.Int32)(3145913)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDARRAYSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDARRAYSIZE</unmanaged-short>
        MessageIdCreateVideoDecoderoutputviewInvalidArraySize = unchecked ((System.Int32)(3145914)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDARRAY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDARRAY</unmanaged-short>
        MessageIdCreateVideoDecoderoutputviewInvalidArray = unchecked ((System.Int32)(3145915)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDDIMENSION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDDIMENSION</unmanaged-short>
        MessageIdCreateVideoDecoderoutputviewInvalidDimension = unchecked ((System.Int32)(3145916)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewOufOfMemoryReturn = unchecked ((System.Int32)(3145917)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_NULLPARAM</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewNullParam = unchecked ((System.Int32)(3145918)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDTYPE</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewInvalidType = unchecked ((System.Int32)(3145919)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDBIND</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDBIND</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewInvalidBind = unchecked ((System.Int32)(3145920)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMISC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMISC</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewInvalidMisc = unchecked ((System.Int32)(3145921)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDUSAGE</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewInvalidUsage = unchecked ((System.Int32)(3145922)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDFORMAT</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewInvalidFormat = unchecked ((System.Int32)(3145923)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDFOURCC</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDFOURCC</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewInvalidFourcc = unchecked ((System.Int32)(3145924)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMIP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMIP</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewInvalidMip = unchecked ((System.Int32)(3145925)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_UNSUPPORTEDMIP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_UNSUPPORTEDMIP</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewUnsupportedMip = unchecked ((System.Int32)(3145926)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDARRAYSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDARRAYSIZE</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewInvalidArraySize = unchecked ((System.Int32)(3145927)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDARRAY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDARRAY</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewInvalidArray = unchecked ((System.Int32)(3145928)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDDIMENSION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDDIMENSION</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewInvalidDimension = unchecked ((System.Int32)(3145929)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateVideoProcessorOutputViewOufOfMemoryReturn = unchecked ((System.Int32)(3145930)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_NULLPARAM</unmanaged-short>
        MessageIdCreateVideoProcessorOutputViewNullParam = unchecked ((System.Int32)(3145931)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDTYPE</unmanaged-short>
        MessageIdCreateVideoProcessorOutputViewInvalidType = unchecked ((System.Int32)(3145932)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDBIND</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDBIND</unmanaged-short>
        MessageIdCreateVideoProcessorOutputViewInvalidBind = unchecked ((System.Int32)(3145933)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDFORMAT</unmanaged-short>
        MessageIdCreateVideoProcessorOutputViewInvalidFormat = unchecked ((System.Int32)(3145934)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDMIP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDMIP</unmanaged-short>
        MessageIdCreateVideoProcessorOutputViewInvalidMip = unchecked ((System.Int32)(3145935)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_UNSUPPORTEDMIP</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_UNSUPPORTEDMIP</unmanaged-short>
        MessageIdCreateVideoProcessorOutputViewUnsupportedMip = unchecked ((System.Int32)(3145936)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_UNSUPPORTEDARRAY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_UNSUPPORTEDARRAY</unmanaged-short>
        MessageIdCreateVideoProcessorOutputViewUnsupportedArray = unchecked ((System.Int32)(3145937)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDARRAY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDARRAY</unmanaged-short>
        MessageIdCreateVideoProcessorOutputViewInvalidArray = unchecked ((System.Int32)(3145938)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDDIMENSION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDDIMENSION</unmanaged-short>
        MessageIdCreateVideoProcessorOutputViewInvalidDimension = unchecked ((System.Int32)(3145939)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_FORCED_SAMPLE_COUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_FORCED_SAMPLE_COUNT</unmanaged-short>
        MessageIdDeviceDrawInvalidUseOfForcedSampleCount = unchecked ((System.Int32)(3145940)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDLOGICOPS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDLOGICOPS</unmanaged-short>
        MessageIdCreateBlendStateInvalidLogicOperations = unchecked ((System.Int32)(3145941)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDARRAYWITHDECODER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDARRAYWITHDECODER</unmanaged-short>
        MessageIdCreateShaderResourceViewInvalidDarraywithdecoder = unchecked ((System.Int32)(3145942)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDARRAYWITHDECODER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDARRAYWITHDECODER</unmanaged-short>
        MessageIdCreateUnorderedAccessViewInvalidDarraywithdecoder = unchecked ((System.Int32)(3145943)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDARRAYWITHDECODER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDARRAYWITHDECODER</unmanaged-short>
        MessageIdCreateRenderTargetViewInvalidDarraywithdecoder = unchecked ((System.Int32)(3145944)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_LOCKEDOUT_INTERFACE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_LOCKEDOUT_INTERFACE</unmanaged-short>
        MessageIdDeviceLockedoutInterface = unchecked ((System.Int32)(3145945)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_WARNING_ATOMIC_INCONSISTENT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_WARNING_ATOMIC_INCONSISTENT</unmanaged-short>
        MessageIdRefWarningAtomicInconsistent = unchecked ((System.Int32)(3145946)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_WARNING_READING_UNINITIALIZED_RESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_WARNING_READING_UNINITIALIZED_RESOURCE</unmanaged-short>
        MessageIdRefWarningReadingUninitializedResource = unchecked ((System.Int32)(3145947)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_WARNING_RAW_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_WARNING_RAW_HAZARD</unmanaged-short>
        MessageIdRefWarningRawHazard = unchecked ((System.Int32)(3145948)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_WARNING_WAR_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_WARNING_WAR_HAZARD</unmanaged-short>
        MessageIdRefWarningWarHazard = unchecked ((System.Int32)(3145949)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_REF_WARNING_WAW_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_REF_WARNING_WAW_HAZARD</unmanaged-short>
        MessageIdRefWarningWawHazard = unchecked ((System.Int32)(3145950)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATECRYPTOSESSION_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATECRYPTOSESSION_NULLPARAM</unmanaged-short>
        MessageIdCreateCryptosessionNullParam = unchecked ((System.Int32)(3145951)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATECRYPTOSESSION_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATECRYPTOSESSION_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateCryptosessionOufOfMemoryReturn = unchecked ((System.Int32)(3145952)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETCRYPTOTYPE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETCRYPTOTYPE_NULLPARAM</unmanaged-short>
        MessageIdGetCryptotypeNullParam = unchecked ((System.Int32)(3145953)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETDECODERPROFILE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETDECODERPROFILE_NULLPARAM</unmanaged-short>
        MessageIdGetDecoderprofileNullParam = unchecked ((System.Int32)(3145954)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATESIZE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATESIZE_NULLPARAM</unmanaged-short>
        MessageIdGetCryptoSessionCertificateSizeNullParam = unchecked ((System.Int32)(3145955)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATE_NULLPARAM</unmanaged-short>
        MessageIdGetCryptoSessionCertificateNullParam = unchecked ((System.Int32)(3145956)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATE_WRONGSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATE_WRONGSIZE</unmanaged-short>
        MessageIdGetCryptoSessionCertificateWrongSize = unchecked ((System.Int32)(3145957)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETCRYPTOSESSIONHANDLE_WRONGSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETCRYPTOSESSIONHANDLE_WRONGSIZE</unmanaged-short>
        MessageIdGetCryptoSessionHandleWrongSize = unchecked ((System.Int32)(3145958)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_NEGOTIATECRPYTOSESSIONKEYEXCHANGE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_NEGOTIATECRPYTOSESSIONKEYEXCHANGE_NULLPARAM</unmanaged-short>
        MessageIdNegotiatecrpytosessionkeyexchangeNullParam = unchecked ((System.Int32)(3145959)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENCRYPTIONBLT_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENCRYPTIONBLT_UNSUPPORTED</unmanaged-short>
        MessageIdEncryptionBlitUnsupported = unchecked ((System.Int32)(3145960)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENCRYPTIONBLT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENCRYPTIONBLT_NULLPARAM</unmanaged-short>
        MessageIdEncryptionBlitNullParam = unchecked ((System.Int32)(3145961)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_WRONGDEVICE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_WRONGDEVICE</unmanaged-short>
        MessageIdEncryptionBlitSourceWrongDevice = unchecked ((System.Int32)(3145962)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_WRONGDEVICE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_WRONGDEVICE</unmanaged-short>
        MessageIdEncryptionBlitDestinationWrongDevice = unchecked ((System.Int32)(3145963)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENCRYPTIONBLT_FORMAT_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENCRYPTIONBLT_FORMAT_MISMATCH</unmanaged-short>
        MessageIdEncryptionBlitFormatMismatch = unchecked ((System.Int32)(3145964)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENCRYPTIONBLT_SIZE_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENCRYPTIONBLT_SIZE_MISMATCH</unmanaged-short>
        MessageIdEncryptionBlitSizeMismatch = unchecked ((System.Int32)(3145965)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_MULTISAMPLED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_MULTISAMPLED</unmanaged-short>
        MessageIdEncryptionBlitSourceMultisampled = unchecked ((System.Int32)(3145966)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_NOT_STAGING</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_NOT_STAGING</unmanaged-short>
        MessageIdEncryptionBlitDestinationNotStaging = unchecked ((System.Int32)(3145967)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_MAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_MAPPED</unmanaged-short>
        MessageIdEncryptionBlitSourceMapped = unchecked ((System.Int32)(3145968)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_MAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_MAPPED</unmanaged-short>
        MessageIdEncryptionBlitDestinationMapped = unchecked ((System.Int32)(3145969)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_OFFERED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_OFFERED</unmanaged-short>
        MessageIdEncryptionBlitSourceOffered = unchecked ((System.Int32)(3145970)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_OFFERED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_OFFERED</unmanaged-short>
        MessageIdEncryptionBlitDestinationOffered = unchecked ((System.Int32)(3145971)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_CONTENT_UNDEFINED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_CONTENT_UNDEFINED</unmanaged-short>
        MessageIdEncryptionBlitSourceContentUndefined = unchecked ((System.Int32)(3145972)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_UNSUPPORTED</unmanaged-short>
        MessageIdDecryptionBlitUnsupported = unchecked ((System.Int32)(3145973)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_NULLPARAM</unmanaged-short>
        MessageIdDecryptionBlitNullParam = unchecked ((System.Int32)(3145974)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_WRONGDEVICE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_WRONGDEVICE</unmanaged-short>
        MessageIdDecryptionBlitSourceWrongDevice = unchecked ((System.Int32)(3145975)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_WRONGDEVICE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_WRONGDEVICE</unmanaged-short>
        MessageIdDecryptionBlitDestinationWrongDevice = unchecked ((System.Int32)(3145976)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_FORMAT_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_FORMAT_MISMATCH</unmanaged-short>
        MessageIdDecryptionBlitFormatMismatch = unchecked ((System.Int32)(3145977)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_SIZE_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_SIZE_MISMATCH</unmanaged-short>
        MessageIdDecryptionBlitSizeMismatch = unchecked ((System.Int32)(3145978)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_MULTISAMPLED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_MULTISAMPLED</unmanaged-short>
        MessageIdDecryptionBlitDestinationMultisampled = unchecked ((System.Int32)(3145979)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_NOT_STAGING</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_NOT_STAGING</unmanaged-short>
        MessageIdDecryptionBlitSourceNotStaging = unchecked ((System.Int32)(3145980)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_NOT_RENDER_TARGET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_NOT_RENDER_TARGET</unmanaged-short>
        MessageIdDecryptionBlitDestinationNotRenderTarget = unchecked ((System.Int32)(3145981)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_MAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_MAPPED</unmanaged-short>
        MessageIdDecryptionBlitSourceMapped = unchecked ((System.Int32)(3145982)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_MAPPED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_MAPPED</unmanaged-short>
        MessageIdDecryptionBlitDestinationMapped = unchecked ((System.Int32)(3145983)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_OFFERED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_OFFERED</unmanaged-short>
        MessageIdDecryptionBlitSourceOffered = unchecked ((System.Int32)(3145984)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_OFFERED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_OFFERED</unmanaged-short>
        MessageIdDecryptionBlitDestinationOffered = unchecked ((System.Int32)(3145985)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_CONTENT_UNDEFINED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_CONTENT_UNDEFINED</unmanaged-short>
        MessageIdDecryptionBlitSourceContentUndefined = unchecked ((System.Int32)(3145986)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_STARTSESSIONKEYREFRESH_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_STARTSESSIONKEYREFRESH_NULLPARAM</unmanaged-short>
        MessageIdStartsessionkeyrefreshNullParam = unchecked ((System.Int32)(3145987)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_STARTSESSIONKEYREFRESH_INVALIDSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_STARTSESSIONKEYREFRESH_INVALIDSIZE</unmanaged-short>
        MessageIdStartsessionkeyrefreshInvalidSize = unchecked ((System.Int32)(3145988)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_FINISHSESSIONKEYREFRESH_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_FINISHSESSIONKEYREFRESH_NULLPARAM</unmanaged-short>
        MessageIdFinishSessionkeyrefreshNullParam = unchecked ((System.Int32)(3145989)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETENCRYPTIONBLTKEY_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETENCRYPTIONBLTKEY_NULLPARAM</unmanaged-short>
        MessageIdGetEncryptionBlitKeyNullParam = unchecked ((System.Int32)(3145990)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETENCRYPTIONBLTKEY_INVALIDSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETENCRYPTIONBLTKEY_INVALIDSIZE</unmanaged-short>
        MessageIdGetEncryptionBlitKeyInvalidSize = unchecked ((System.Int32)(3145991)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETCONTENTPROTECTIONCAPS_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETCONTENTPROTECTIONCAPS_NULLPARAM</unmanaged-short>
        MessageIdGetContentprotectioncapsNullParam = unchecked ((System.Int32)(3145992)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKCRYPTOKEYEXCHANGE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKCRYPTOKEYEXCHANGE_NULLPARAM</unmanaged-short>
        MessageIdCheckCryptokeyexchangeNullParam = unchecked ((System.Int32)(3145993)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKCRYPTOKEYEXCHANGE_INVALIDINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKCRYPTOKEYEXCHANGE_INVALIDINDEX</unmanaged-short>
        MessageIdCheckCryptokeyexchangeInvalidIndex = unchecked ((System.Int32)(3145994)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_NULLPARAM</unmanaged-short>
        MessageIdCreateAuthenticatedChannelNullParam = unchecked ((System.Int32)(3145995)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_UNSUPPORTED</unmanaged-short>
        MessageIdCreateAuthenticatedChannelUnsupported = unchecked ((System.Int32)(3145996)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_INVALIDTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_INVALIDTYPE</unmanaged-short>
        MessageIdCreateAuthenticatedChannelInvalidType = unchecked ((System.Int32)(3145997)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_OUTOFMEMORY_RETURN</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_OUTOFMEMORY_RETURN</unmanaged-short>
        MessageIdCreateAuthenticatedChannelOufOfMemoryReturn = unchecked ((System.Int32)(3145998)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATESIZE_INVALIDCHANNEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATESIZE_INVALIDCHANNEL</unmanaged-short>
        MessageIdGetAuthenticatedChannelcertificatesizeInvalidChannel = unchecked ((System.Int32)(3145999)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATESIZE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATESIZE_NULLPARAM</unmanaged-short>
        MessageIdGetAuthenticatedChannelcertificatesizeNullParam = unchecked ((System.Int32)(3146000)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_INVALIDCHANNEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_INVALIDCHANNEL</unmanaged-short>
        MessageIdGetAuthenticatedChannelcertificateInvalidChannel = unchecked ((System.Int32)(3146001)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_NULLPARAM</unmanaged-short>
        MessageIdGetAuthenticatedChannelcertificateNullParam = unchecked ((System.Int32)(3146002)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_WRONGSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_WRONGSIZE</unmanaged-short>
        MessageIdGetAuthenticatedChannelcertificateWrongSize = unchecked ((System.Int32)(3146003)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_INVALIDCHANNEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_INVALIDCHANNEL</unmanaged-short>
        MessageIdNegotiateauthenticatedchannelkeyexchangeInvalidChannel = unchecked ((System.Int32)(3146004)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_NULLPARAM</unmanaged-short>
        MessageIdNegotiateauthenticatedchannelkeyexchangeNullParam = unchecked ((System.Int32)(3146005)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_NULLPARAM</unmanaged-short>
        MessageIdQueryAuthenticatedChannelNullParam = unchecked ((System.Int32)(3146006)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_WRONGCHANNEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_WRONGCHANNEL</unmanaged-short>
        MessageIdQueryAuthenticatedChannelWrongChannel = unchecked ((System.Int32)(3146007)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_UNSUPPORTEDQUERY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_UNSUPPORTEDQUERY</unmanaged-short>
        MessageIdQueryAuthenticatedChannelUnsupportedQuery = unchecked ((System.Int32)(3146008)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_WRONGSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_WRONGSIZE</unmanaged-short>
        MessageIdQueryAuthenticatedChannelWrongSize = unchecked ((System.Int32)(3146009)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_INVALIDPROCESSINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_INVALIDPROCESSINDEX</unmanaged-short>
        MessageIdQueryAuthenticatedChannelInvalidProcessindex = unchecked ((System.Int32)(3146010)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_NULLPARAM</unmanaged-short>
        MessageIdConfigureauthenticatedchannelNullParam = unchecked ((System.Int32)(3146011)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_WRONGCHANNEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_WRONGCHANNEL</unmanaged-short>
        MessageIdConfigureauthenticatedchannelWrongChannel = unchecked ((System.Int32)(3146012)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_UNSUPPORTEDCONFIGURE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_UNSUPPORTEDCONFIGURE</unmanaged-short>
        MessageIdConfigureauthenticatedchannelUnsupportedConfigure = unchecked ((System.Int32)(3146013)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_WRONGSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_WRONGSIZE</unmanaged-short>
        MessageIdConfigureauthenticatedchannelWrongSize = unchecked ((System.Int32)(3146014)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_INVALIDPROCESSIDTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_INVALIDPROCESSIDTYPE</unmanaged-short>
        MessageIdConfigureauthenticatedchannelInvalidProcessidtype = unchecked ((System.Int32)(3146015)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT</unmanaged-short>
        MessageIdVertexShaderSetConstantBuffersInvalidBufferOffsetorcount = unchecked ((System.Int32)(3146016)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT</unmanaged-short>
        MessageIdDomainShaderSetConstantBuffersInvalidBufferOffsetorcount = unchecked ((System.Int32)(3146017)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT</unmanaged-short>
        MessageIdHullShaderSetConstantBuffersInvalidBufferOffsetorcount = unchecked ((System.Int32)(3146018)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT</unmanaged-short>
        MessageIdGeometryShaderSetConstantBuffersInvalidBufferOffsetorcount = unchecked ((System.Int32)(3146019)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT</unmanaged-short>
        MessageIdPixelShaderSetConstantBuffersInvalidBufferOffsetorcount = unchecked ((System.Int32)(3146020)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT</unmanaged-short>
        MessageIdComputeShaderSetConstantBuffersInvalidBufferOffsetorcount = unchecked ((System.Int32)(3146021)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_NEGOTIATECRPYTOSESSIONKEYEXCHANGE_INVALIDSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_NEGOTIATECRPYTOSESSIONKEYEXCHANGE_INVALIDSIZE</unmanaged-short>
        MessageIdNegotiatecrpytosessionkeyexchangeInvalidSize = unchecked ((System.Int32)(3146022)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_INVALIDSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_INVALIDSIZE</unmanaged-short>
        MessageIdNegotiateauthenticatedchannelkeyexchangeInvalidSize = unchecked ((System.Int32)(3146023)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_OFFERRESOURCES_INVALIDPRIORITY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_OFFERRESOURCES_INVALIDPRIORITY</unmanaged-short>
        MessageIdOfferresourcesInvalidPriority = unchecked ((System.Int32)(3146024)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETCRYPTOSESSIONHANDLE_OUTOFMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETCRYPTOSESSIONHANDLE_OUTOFMEMORY</unmanaged-short>
        MessageIdGetCryptoSessionHandleOufOfMemory = unchecked ((System.Int32)(3146025)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_NULLPARAM</unmanaged-short>
        MessageIdAcquirehandleforcaptureNullParam = unchecked ((System.Int32)(3146026)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDTYPE</unmanaged-short>
        MessageIdAcquirehandleforcaptureInvalidType = unchecked ((System.Int32)(3146027)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDBIND</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDBIND</unmanaged-short>
        MessageIdAcquirehandleforcaptureInvalidBind = unchecked ((System.Int32)(3146028)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDARRAY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDARRAY</unmanaged-short>
        MessageIdAcquirehandleforcaptureInvalidArray = unchecked ((System.Int32)(3146029)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamRotationNullParam = unchecked ((System.Int32)(3146030)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamRotationInvalidStream = unchecked ((System.Int32)(3146031)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_INVALID</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_INVALID</unmanaged-short>
        MessageIdVideoProcessorSetStreamRotationInvalid = unchecked ((System.Int32)(3146032)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_UNSUPPORTED</unmanaged-short>
        MessageIdVideoProcessorSetStreamRotationUnsupported = unchecked ((System.Int32)(3146033)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMROTATION_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMROTATION_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamRotationNullParam = unchecked ((System.Int32)(3146034)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDVIEW</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDVIEW</unmanaged-short>
        MessageIdDeviceClearviewInvalidView = unchecked ((System.Int32)(3146035)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateVertexShaderDoubleExtensionSnotsupported = unchecked ((System.Int32)(3146036)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_SHADEREXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_SHADEREXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateVertexShaderShaderExtensionSnotsupported = unchecked ((System.Int32)(3146037)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateHullShaderDoubleExtensionSnotsupported = unchecked ((System.Int32)(3146038)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_SHADEREXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_SHADEREXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateHullShaderShaderExtensionSnotsupported = unchecked ((System.Int32)(3146039)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateDomainShaderDoubleExtensionSnotsupported = unchecked ((System.Int32)(3146040)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_SHADEREXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_SHADEREXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateDomainShaderShaderExtensionSnotsupported = unchecked ((System.Int32)(3146041)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateGeometryShaderDoubleExtensionSnotsupported = unchecked ((System.Int32)(3146042)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_SHADEREXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_SHADEREXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateGeometryShaderShaderExtensionSnotsupported = unchecked ((System.Int32)(3146043)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateGeometryShaderWithStreamOutputDoubleExtensionSnotsupported = unchecked ((System.Int32)(3146044)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_SHADEREXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_SHADEREXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateGeometryShaderWithStreamOutputShaderExtensionSnotsupported = unchecked ((System.Int32)(3146045)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreatePixelShaderDoubleExtensionSnotsupported = unchecked ((System.Int32)(3146046)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_SHADEREXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_SHADEREXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreatePixelShaderShaderExtensionSnotsupported = unchecked ((System.Int32)(3146047)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEEXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateComputeShaderDoubleExtensionSnotsupported = unchecked ((System.Int32)(3146048)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_SHADEREXTENSIONSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_SHADEREXTENSIONSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateComputeShaderShaderExtensionSnotsupported = unchecked ((System.Int32)(3146049)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_MINPRECISION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_MINPRECISION</unmanaged-short>
        MessageIdDeviceShaderLinkageMinimumPrecision = unchecked ((System.Int32)(3146050)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_UNSUPPORTED</unmanaged-short>
        MessageIdVideoProcessorSetStreamAlphaUnsupported = unchecked ((System.Int32)(3146051)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_UNSUPPORTED</unmanaged-short>
        MessageIdVideoProcessorSetStreamPixelAspectRatioUnsupported = unchecked ((System.Int32)(3146052)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_UAVSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_UAVSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateVertexShaderUnorderedAccessViewsNotSupported = unchecked ((System.Int32)(3146053)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_UAVSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_UAVSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateHullShaderUnorderedAccessViewsNotSupported = unchecked ((System.Int32)(3146054)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_UAVSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_UAVSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateDomainShaderUnorderedAccessViewsNotSupported = unchecked ((System.Int32)(3146055)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_UAVSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_UAVSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateGeometryShaderUnorderedAccessViewsNotSupported = unchecked ((System.Int32)(3146056)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UAVSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UAVSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateGeometryShaderWithStreamOutputUnorderedAccessViewsNotSupported = unchecked ((System.Int32)(3146057)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_UAVSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_UAVSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreatePixelShaderUnorderedAccessViewsNotSupported = unchecked ((System.Int32)(3146058)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_UAVSNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_UAVSNOTSUPPORTED</unmanaged-short>
        MessageIdDeviceCreateComputeShaderUnorderedAccessViewsNotSupported = unchecked ((System.Int32)(3146059)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_INVALIDOFFSET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_INVALIDOFFSET</unmanaged-short>
        MessageIdDeviceOutputMergerSetRenderTargetsAndUnorderedAccessViewsInvalidOffset = unchecked ((System.Int32)(3146060)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_TOOMANYVIEWS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_TOOMANYVIEWS</unmanaged-short>
        MessageIdDeviceOutputMergerSetRenderTargetsAndUnorderedAccessViewsTooManyViews = unchecked ((System.Int32)(3146061)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_NOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_NOTSUPPORTED</unmanaged-short>
        MessageIdDeviceClearviewNotSupported = unchecked ((System.Int32)(3146062)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_SWAPDEVICECONTEXTSTATE_NOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_SWAPDEVICECONTEXTSTATE_NOTSUPPORTED</unmanaged-short>
        MessageIdSwapdevicecontextstateNotSupported = unchecked ((System.Int32)(3146063)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_UPDATESUBRESOURCE_PREFERUPDATESUBRESOURCE1</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_UPDATESUBRESOURCE_PREFERUPDATESUBRESOURCE1</unmanaged-short>
        MessageIdUpdatesUbresourcePreferUpdatesUbresource1 = unchecked ((System.Int32)(3146064)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETDC_INACCESSIBLE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETDC_INACCESSIBLE</unmanaged-short>
        MessageIdGetDeviceContextInaccessible = unchecked ((System.Int32)(3146065)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDRECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDRECT</unmanaged-short>
        MessageIdDeviceClearviewInvalidRectangle = unchecked ((System.Int32)(3146066)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLE_MASK_IGNORED_ON_FL9</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLE_MASK_IGNORED_ON_FL9</unmanaged-short>
        MessageIdDeviceDrawSampleMaskIgnoredOnFl9 = unchecked ((System.Int32)(3146067)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE1_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE1_NOT_SUPPORTED</unmanaged-short>
        MessageIdDeviceOpenSharedResource1NotSupported = unchecked ((System.Int32)(3146068)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BY_NAME_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BY_NAME_NOT_SUPPORTED</unmanaged-short>
        MessageIdDeviceOpenSharedResourceByNameNotSupported = unchecked ((System.Int32)(3146069)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_ENQUEUESETEVENT_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_ENQUEUESETEVENT_NOT_SUPPORTED</unmanaged-short>
        MessageIdEnqueueSetEventNotSupported = unchecked ((System.Int32)(3146070)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_OFFERRELEASE_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_OFFERRELEASE_NOT_SUPPORTED</unmanaged-short>
        MessageIdOfferreleaseNotSupported = unchecked ((System.Int32)(3146071)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_OFFERRESOURCES_INACCESSIBLE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_OFFERRESOURCES_INACCESSIBLE</unmanaged-short>
        MessageIdOfferresourcesInaccessible = unchecked ((System.Int32)(3146072)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMSAA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMSAA</unmanaged-short>
        MessageIdCreateVideoProcessorInputViewInvalidMSAA = unchecked ((System.Int32)(3146073)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDMSAA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDMSAA</unmanaged-short>
        MessageIdCreateVideoProcessorOutputViewInvalidMSAA = unchecked ((System.Int32)(3146074)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDSOURCERECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDSOURCERECT</unmanaged-short>
        MessageIdDeviceClearviewInvalidSourceRectangle = unchecked ((System.Int32)(3146075)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_EMPTYRECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_EMPTYRECT</unmanaged-short>
        MessageIdDeviceClearviewEmptyRectangle = unchecked ((System.Int32)(3146076)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_UPDATESUBRESOURCE_EMPTYDESTBOX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_UPDATESUBRESOURCE_EMPTYDESTBOX</unmanaged-short>
        MessageIdUpdatesUbresourceEmptyDestinationBox = unchecked ((System.Int32)(3146077)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_EMPTYSOURCEBOX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_EMPTYSOURCEBOX</unmanaged-short>
        MessageIdCopySubResourceRegionEmptySourceBox = unchecked ((System.Int32)(3146078)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS</unmanaged-short>
        MessageIdDeviceDrawOutputMergerRenderTargetDoesNotSupportLogicOperations = unchecked ((System.Int32)(3146079)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_DEPTHSTENCILVIEW_NOT_SET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_DEPTHSTENCILVIEW_NOT_SET</unmanaged-short>
        MessageIdDeviceDrawDepthStencilViewNotSet = unchecked ((System.Int32)(3146080)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET</unmanaged-short>
        MessageIdDeviceDrawRenderTargetViewNotSet = unchecked ((System.Int32)(3146081)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET_DUE_TO_FLIP_PRESENT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET_DUE_TO_FLIP_PRESENT</unmanaged-short>
        MessageIdDeviceDrawRenderTargetViewNotSetDueToFlipPresent = unchecked ((System.Int32)(3146082)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET_DUE_TO_FLIP_PRESENT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET_DUE_TO_FLIP_PRESENT</unmanaged-short>
        MessageIdDeviceUnorderedAccessViewNotSetDueToFlipPresent = unchecked ((System.Int32)(3146083)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETDATAFORNEWHARDWAREKEY_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETDATAFORNEWHARDWAREKEY_NULLPARAM</unmanaged-short>
        MessageIdGetDataFornewhardwarekeyNullParam = unchecked ((System.Int32)(3146084)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKCRYPTOSESSIONSTATUS_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKCRYPTOSESSIONSTATUS_NULLPARAM</unmanaged-short>
        MessageIdCheckCryptosessionstatusNullParam = unchecked ((System.Int32)(3146085)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETCRYPTOSESSIONPRIVATEDATASIZE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETCRYPTOSESSIONPRIVATEDATASIZE_NULLPARAM</unmanaged-short>
        MessageIdGetCryptoSessionPrivateDataSizeNullParam = unchecked ((System.Int32)(3146086)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEODECODERCAPS_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEODECODERCAPS_NULLPARAM</unmanaged-short>
        MessageIdGetVideoDecodercapsNullParam = unchecked ((System.Int32)(3146087)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETVIDEODECODERCAPS_ZEROWIDTHHEIGHT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETVIDEODECODERCAPS_ZEROWIDTHHEIGHT</unmanaged-short>
        MessageIdGetVideoDecodercapsZerowidthheight = unchecked ((System.Int32)(3146088)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_NULLPARAM</unmanaged-short>
        MessageIdCheckVideoDecoderdownsamplingNullParam = unchecked ((System.Int32)(3146089)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE</unmanaged-short>
        MessageIdCheckVideoDecoderdownsamplingInvalidColorSpace = unchecked ((System.Int32)(3146090)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT</unmanaged-short>
        MessageIdCheckVideoDecoderdownsamplingZerowidthheight = unchecked ((System.Int32)(3146091)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_NULLPARAM</unmanaged-short>
        MessageIdVideoDecoderenabledownsamplingNullParam = unchecked ((System.Int32)(3146092)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_UNSUPPORTED</unmanaged-short>
        MessageIdVideoDecoderenabledownsamplingUnsupported = unchecked ((System.Int32)(3146093)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_NULLPARAM</unmanaged-short>
        MessageIdVideoDecoderupdatedownsamplingNullParam = unchecked ((System.Int32)(3146094)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_UNSUPPORTED</unmanaged-short>
        MessageIdVideoDecoderupdatedownsamplingUnsupported = unchecked ((System.Int32)(3146095)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKVIDEOPROCESSORFORMATCONVERSION_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKVIDEOPROCESSORFORMATCONVERSION_NULLPARAM</unmanaged-short>
        MessageIdCheckVideoProcessorFormatConversionNullParam = unchecked ((System.Int32)(3146096)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCOLORSPACE1_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCOLORSPACE1_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetOutputColorSpace1NullParam = unchecked ((System.Int32)(3146097)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCOLORSPACE1_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCOLORSPACE1_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetOutputColorSpace1NullParam = unchecked ((System.Int32)(3146098)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamColorSpace1NullParam = unchecked ((System.Int32)(3146099)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamColorSpace1InvalidStream = unchecked ((System.Int32)(3146100)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamMirrorNullParam = unchecked ((System.Int32)(3146101)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamMirrorInvalidStream = unchecked ((System.Int32)(3146102)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_UNSUPPORTED</unmanaged-short>
        MessageIdVideoProcessorSetStreamMirrorUnsupported = unchecked ((System.Int32)(3146103)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE1_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE1_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamColorSpace1NullParam = unchecked ((System.Int32)(3146104)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMMIRROR_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMMIRROR_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamMirrorNullParam = unchecked ((System.Int32)(3146105)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_NULLPARAM</unmanaged-short>
        MessageIdRecommendvideodecoderdownsamplingNullParam = unchecked ((System.Int32)(3146106)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE</unmanaged-short>
        MessageIdRecommendvideodecoderdownsamplingInvalidColorSpace = unchecked ((System.Int32)(3146107)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT</unmanaged-short>
        MessageIdRecommendvideodecoderdownsamplingZerowidthheight = unchecked ((System.Int32)(3146108)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSHADERUSAGE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSHADERUSAGE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetOutputShaderUsageNullParam = unchecked ((System.Int32)(3146109)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTSHADERUSAGE_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTSHADERUSAGE_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetOutputShaderUsageNullParam = unchecked ((System.Int32)(3146110)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetBehaviorhintsNullParam = unchecked ((System.Int32)(3146111)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSTREAMCOUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSTREAMCOUNT</unmanaged-short>
        MessageIdVideoProcessorGetBehaviorhintsInvalidStreamCount = unchecked ((System.Int32)(3146112)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_TARGETRECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_TARGETRECT</unmanaged-short>
        MessageIdVideoProcessorGetBehaviorhintsTargetRectangle = unchecked ((System.Int32)(3146113)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSOURCERECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSOURCERECT</unmanaged-short>
        MessageIdVideoProcessorGetBehaviorhintsInvalidSourceRectangle = unchecked ((System.Int32)(3146114)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDDESTRECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDDESTRECT</unmanaged-short>
        MessageIdVideoProcessorGetBehaviorhintsInvalidDestinationRectangle = unchecked ((System.Int32)(3146115)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETCRYPTOSESSIONPRIVATEDATASIZE_INVALID_KEY_EXCHANGE_TYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETCRYPTOSESSIONPRIVATEDATASIZE_INVALID_KEY_EXCHANGE_TYPE</unmanaged-short>
        MessageIdGetCryptoSessionPrivateDataSizeInvalidKeyExchangeType = unchecked ((System.Int32)(3146116)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_D3D11_1_MESSAGES_END</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_D3D11_1_MESSAGES_END</unmanaged-short>
        MessageIdD3D111MessagesEnd = unchecked ((System.Int32)(3146117)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_D3D11_2_MESSAGES_START</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_D3D11_2_MESSAGES_START</unmanaged-short>
        MessageIdD3D112MessagesStart = unchecked ((System.Int32)(3146118)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDUSAGE</unmanaged-short>
        MessageIdCreateBufferInvalidUsage = unchecked ((System.Int32)(3146119)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDUSAGE</unmanaged-short>
        MessageIdCreateTexture1DInvalidUsage = unchecked ((System.Int32)(3146120)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDUSAGE</unmanaged-short>
        MessageIdCreateTexture2DInvalidUsage = unchecked ((System.Int32)(3146121)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_STEPRATE_NOT_1</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_STEPRATE_NOT_1</unmanaged-short>
        MessageIdCreateInputLayoutLevel9SteprateNot1 = unchecked ((System.Int32)(3146122)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_INSTANCING_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_INSTANCING_NOT_SUPPORTED</unmanaged-short>
        MessageIdCreateInputLayoutLevel9InstancingNotSupported = unchecked ((System.Int32)(3146123)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_UPDATETILEMAPPINGS_INVALID_PARAMETER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_UPDATETILEMAPPINGS_INVALID_PARAMETER</unmanaged-short>
        MessageIdUpdateTilemappingsInvalidParameter = unchecked ((System.Int32)(3146124)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYTILEMAPPINGS_INVALID_PARAMETER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYTILEMAPPINGS_INVALID_PARAMETER</unmanaged-short>
        MessageIdCopyTilemappingsInvalidParameter = unchecked ((System.Int32)(3146125)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_COPYTILES_INVALID_PARAMETER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_COPYTILES_INVALID_PARAMETER</unmanaged-short>
        MessageIdCopyTilesInvalidParameter = unchecked ((System.Int32)(3146126)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_UPDATETILES_INVALID_PARAMETER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_UPDATETILES_INVALID_PARAMETER</unmanaged-short>
        MessageIdUpdateTilesInvalidParameter = unchecked ((System.Int32)(3146127)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RESIZETILEPOOL_INVALID_PARAMETER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RESIZETILEPOOL_INVALID_PARAMETER</unmanaged-short>
        MessageIdResizetilepoolInvalidParameter = unchecked ((System.Int32)(3146128)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TILEDRESOURCEBARRIER_INVALID_PARAMETER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TILEDRESOURCEBARRIER_INVALID_PARAMETER</unmanaged-short>
        MessageIdTiledresourcebarrierInvalidParameter = unchecked ((System.Int32)(3146129)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_WARNING</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_WARNING</unmanaged-short>
        MessageIdNullTileMappingAccessWarning = unchecked ((System.Int32)(3146130)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_ERROR</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_ERROR</unmanaged-short>
        MessageIdNullTileMappingAccessError = unchecked ((System.Int32)(3146131)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DIRTY_TILE_MAPPING_ACCESS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DIRTY_TILE_MAPPING_ACCESS</unmanaged-short>
        MessageIdDirtyTileMappingAccess = unchecked ((System.Int32)(3146132)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DUPLICATE_TILE_MAPPINGS_IN_COVERED_AREA</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DUPLICATE_TILE_MAPPINGS_IN_COVERED_AREA</unmanaged-short>
        MessageIdDuplicateTileMappingsInCoveredArea = unchecked ((System.Int32)(3146133)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TILE_MAPPINGS_IN_COVERED_AREA_DUPLICATED_OUTSIDE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TILE_MAPPINGS_IN_COVERED_AREA_DUPLICATED_OUTSIDE</unmanaged-short>
        MessageIdTileMappingsInCoveredAreaDuplicatedOutside = unchecked ((System.Int32)(3146134)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INCOMPATIBLE_RESOURCES</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INCOMPATIBLE_RESOURCES</unmanaged-short>
        MessageIdTileMappingsSharedBetweenIncompatibleResources = unchecked ((System.Int32)(3146135)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INPUT_AND_OUTPUT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INPUT_AND_OUTPUT</unmanaged-short>
        MessageIdTileMappingsSharedBetweenInputAndOutput = unchecked ((System.Int32)(3146136)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_INVALIDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_INVALIDFLAGS</unmanaged-short>
        MessageIdCheckMultisamplequalitylevelsInvalidFlags = unchecked ((System.Int32)(3146137)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_GETRESOURCETILING_NONTILED_RESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_GETRESOURCETILING_NONTILED_RESOURCE</unmanaged-short>
        MessageIdGetResourceTilingNontiledResource = unchecked ((System.Int32)(3146138)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_RESIZETILEPOOL_SHRINK_WITH_MAPPINGS_STILL_DEFINED_PAST_END</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_RESIZETILEPOOL_SHRINK_WITH_MAPPINGS_STILL_DEFINED_PAST_END</unmanaged-short>
        MessageIdResizetilepoolShrinkWithMappingsStillDefinedPastEnd = unchecked ((System.Int32)(3146139)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_NEED_TO_CALL_TILEDRESOURCEBARRIER</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_NEED_TO_CALL_TILEDRESOURCEBARRIER</unmanaged-short>
        MessageIdNeedToCallTiledresourcebarrier = unchecked ((System.Int32)(3146140)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEVICE_INVALIDARGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEVICE_INVALIDARGS</unmanaged-short>
        MessageIdCreateDeviceInvalidArguments = unchecked ((System.Int32)(3146141)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEDEVICE_WARNING</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEDEVICE_WARNING</unmanaged-short>
        MessageIdCreateDeviceWarning = unchecked ((System.Int32)(3146142)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWUINT_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWUINT_HAZARD</unmanaged-short>
        MessageIdClearunorderedaccessviewuintHazard = unchecked ((System.Int32)(3146143)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWFLOAT_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWFLOAT_HAZARD</unmanaged-short>
        MessageIdClearunorderedaccessviewfloatHazard = unchecked ((System.Int32)(3146144)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_TILED_RESOURCE_TIER_1_BUFFER_TEXTURE_MISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_TILED_RESOURCE_TIER_1_BUFFER_TEXTURE_MISMATCH</unmanaged-short>
        MessageIdTiledResourceTier1BufferTextureMismatch = unchecked ((System.Int32)(3146145)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_CRYPTOSESSION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_CRYPTOSESSION</unmanaged-short>
        MessageIdCreateCryptosession = unchecked ((System.Int32)(3146146)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_AUTHENTICATEDCHANNEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_AUTHENTICATEDCHANNEL</unmanaged-short>
        MessageIdCreateAuthenticatedChannel = unchecked ((System.Int32)(3146147)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_CRYPTOSESSION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_CRYPTOSESSION</unmanaged-short>
        MessageIdLiveCryptosession = unchecked ((System.Int32)(3146148)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_AUTHENTICATEDCHANNEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_AUTHENTICATEDCHANNEL</unmanaged-short>
        MessageIdLiveAuthenticatedChannel = unchecked ((System.Int32)(3146149)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_CRYPTOSESSION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_CRYPTOSESSION</unmanaged-short>
        MessageIdDestroyCryptosession = unchecked ((System.Int32)(3146150)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_AUTHENTICATEDCHANNEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_AUTHENTICATEDCHANNEL</unmanaged-short>
        MessageIdDestroyAuthenticatedChannel = unchecked ((System.Int32)(3146151)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_D3D11_2_MESSAGES_END</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_D3D11_2_MESSAGES_END</unmanaged-short>
        MessageIdD3D112MessagesEnd = unchecked ((System.Int32)(3146152)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_D3D11_3_MESSAGES_START</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_D3D11_3_MESSAGES_START</unmanaged-short>
        MessageIdD3D113MessagesStart = unchecked ((System.Int32)(3146153)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALID_CONSERVATIVERASTERMODE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALID_CONSERVATIVERASTERMODE</unmanaged-short>
        MessageIdCreateRasterizerstateInvalidConservativerastermode = unchecked ((System.Int32)(3146154)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_SYSTEMVALUE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_SYSTEMVALUE</unmanaged-short>
        MessageIdDeviceDrawInvalidSystemvalue = unchecked ((System.Int32)(3146155)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDCONTEXTTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDCONTEXTTYPE</unmanaged-short>
        MessageIdCreateQueryOrpredicateInvalidContextType = unchecked ((System.Int32)(3146156)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_DECODENOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_DECODENOTSUPPORTED</unmanaged-short>
        MessageIdCreateQueryOrpredicateDecodenotsupported = unchecked ((System.Int32)(3146157)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_ENCODENOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_ENCODENOTSUPPORTED</unmanaged-short>
        MessageIdCreateQueryOrpredicateEncodenotsupported = unchecked ((System.Int32)(3146158)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANEINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANEINDEX</unmanaged-short>
        MessageIdCreateShaderResourceViewInvalidPlaneindex = unchecked ((System.Int32)(3146159)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANEINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANEINDEX</unmanaged-short>
        MessageIdCreateShaderResourceViewInvalidVideoPlaneindex = unchecked ((System.Int32)(3146160)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_AMBIGUOUSVIDEOPLANEINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_AMBIGUOUSVIDEOPLANEINDEX</unmanaged-short>
        MessageIdCreateShaderResourceViewAmbiguousvideoplaneindex = unchecked ((System.Int32)(3146161)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANEINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANEINDEX</unmanaged-short>
        MessageIdCreateRenderTargetViewInvalidPlaneindex = unchecked ((System.Int32)(3146162)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANEINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANEINDEX</unmanaged-short>
        MessageIdCreateRenderTargetViewInvalidVideoPlaneindex = unchecked ((System.Int32)(3146163)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_AMBIGUOUSVIDEOPLANEINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_AMBIGUOUSVIDEOPLANEINDEX</unmanaged-short>
        MessageIdCreateRenderTargetViewAmbiguousvideoplaneindex = unchecked ((System.Int32)(3146164)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANEINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANEINDEX</unmanaged-short>
        MessageIdCreateUnorderedAccessViewInvalidPlaneindex = unchecked ((System.Int32)(3146165)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANEINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANEINDEX</unmanaged-short>
        MessageIdCreateUnorderedAccessViewInvalidVideoPlaneindex = unchecked ((System.Int32)(3146166)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_AMBIGUOUSVIDEOPLANEINDEX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_AMBIGUOUSVIDEOPLANEINDEX</unmanaged-short>
        MessageIdCreateUnorderedAccessViewAmbiguousvideoplaneindex = unchecked ((System.Int32)(3146167)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSCANDATAOFFSET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSCANDATAOFFSET</unmanaged-short>
        MessageIdJpegdecodeInvalidScandataoffset = unchecked ((System.Int32)(3146168)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_NOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_NOTSUPPORTED</unmanaged-short>
        MessageIdJpegdecodeNotSupported = unchecked ((System.Int32)(3146169)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_DIMENSIONSTOOLARGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_DIMENSIONSTOOLARGE</unmanaged-short>
        MessageIdJpegdecodeDimensionstoolarge = unchecked ((System.Int32)(3146170)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDCOMPONENTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDCOMPONENTS</unmanaged-short>
        MessageIdJpegdecodeInvalidComponents = unchecked ((System.Int32)(3146171)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_DESTINATIONNOT2D</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_DESTINATIONNOT2D</unmanaged-short>
        MessageIdJpegdecodeDestinationNot2D = unchecked ((System.Int32)(3146172)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_TILEDRESOURCESUNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_TILEDRESOURCESUNSUPPORTED</unmanaged-short>
        MessageIdJpegdecodeTiledresourcesunsupported = unchecked ((System.Int32)(3146173)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_GUARDRECTSUNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_GUARDRECTSUNSUPPORTED</unmanaged-short>
        MessageIdJpegdecodeGuardrectsunsupported = unchecked ((System.Int32)(3146174)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_FORMATUNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_FORMATUNSUPPORTED</unmanaged-short>
        MessageIdJpegdecodeFormatUnsupported = unchecked ((System.Int32)(3146175)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSUBRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSUBRESOURCE</unmanaged-short>
        MessageIdJpegdecodeInvalidSubResource = unchecked ((System.Int32)(3146176)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDMIPLEVEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDMIPLEVEL</unmanaged-short>
        MessageIdJpegdecodeInvalidMiplevel = unchecked ((System.Int32)(3146177)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_EMPTYDESTBOX</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_EMPTYDESTBOX</unmanaged-short>
        MessageIdJpegdecodeEmptyDestinationBox = unchecked ((System.Int32)(3146178)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXNOT2D</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXNOT2D</unmanaged-short>
        MessageIdJpegdecodeDestinationBoxnot2d = unchecked ((System.Int32)(3146179)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXNOTSUB</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXNOTSUB</unmanaged-short>
        MessageIdJpegdecodeDestinationBoxnotsub = unchecked ((System.Int32)(3146180)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXESINTERSECT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXESINTERSECT</unmanaged-short>
        MessageIdJpegdecodeDestinationBoxesintersect = unchecked ((System.Int32)(3146181)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEMISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEMISMATCH</unmanaged-short>
        MessageIdJpegdecodeXsubsamplemismatch = unchecked ((System.Int32)(3146182)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEMISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEMISMATCH</unmanaged-short>
        MessageIdJpegdecodeYsubsamplemismatch = unchecked ((System.Int32)(3146183)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEODD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEODD</unmanaged-short>
        MessageIdJpegdecodeXsubsampleodd = unchecked ((System.Int32)(3146184)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEODD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEODD</unmanaged-short>
        MessageIdJpegdecodeYsubsampleodd = unchecked ((System.Int32)(3146185)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_OUTPUTDIMENSIONSTOOLARGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_OUTPUTDIMENSIONSTOOLARGE</unmanaged-short>
        MessageIdJpegdecodeOutputDimensionstoolarge = unchecked ((System.Int32)(3146186)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_NONPOW2SCALEUNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_NONPOW2SCALEUNSUPPORTED</unmanaged-short>
        MessageIdJpegdecodeNonpow2scaleunsupported = unchecked ((System.Int32)(3146187)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_FRACTIONALDOWNSCALETOLARGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_FRACTIONALDOWNSCALETOLARGE</unmanaged-short>
        MessageIdJpegdecodeFractionaldownscaletolarge = unchecked ((System.Int32)(3146188)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_CHROMASIZEMISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_CHROMASIZEMISMATCH</unmanaged-short>
        MessageIdJpegdecodeChromasizemismatch = unchecked ((System.Int32)(3146189)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_LUMACHROMASIZEMISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_LUMACHROMASIZEMISMATCH</unmanaged-short>
        MessageIdJpegdecodeLumachromasizemismatch = unchecked ((System.Int32)(3146190)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDNUMDESTINATIONS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDNUMDESTINATIONS</unmanaged-short>
        MessageIdJpegdecodeInvalidNumdestinations = unchecked ((System.Int32)(3146191)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_SUBBOXUNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_SUBBOXUNSUPPORTED</unmanaged-short>
        MessageIdJpegdecodeSubBoxunsupported = unchecked ((System.Int32)(3146192)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_1DESTUNSUPPORTEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_1DESTUNSUPPORTEDFORMAT</unmanaged-short>
        MessageIdJpegdecode1DEstunsupportedformat = unchecked ((System.Int32)(3146193)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_3DESTUNSUPPORTEDFORMAT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_3DESTUNSUPPORTEDFORMAT</unmanaged-short>
        MessageIdJpegdecode3DEstunsupportedformat = unchecked ((System.Int32)(3146194)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_SCALEUNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_SCALEUNSUPPORTED</unmanaged-short>
        MessageIdJpegdecodeScaleunsupported = unchecked ((System.Int32)(3146195)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSOURCESIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSOURCESIZE</unmanaged-short>
        MessageIdJpegdecodeInvalidSourceSize = unchecked ((System.Int32)(3146196)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDCOPYFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_INVALIDCOPYFLAGS</unmanaged-short>
        MessageIdJpegdecodeInvalidCopyFlags = unchecked ((System.Int32)(3146197)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_HAZARD</unmanaged-short>
        MessageIdJpegdecodeHazard = unchecked ((System.Int32)(3146198)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERUSAGE</unmanaged-short>
        MessageIdJpegdecodeUnsupportedSourceBufferUsage = unchecked ((System.Int32)(3146199)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERMISCFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERMISCFLAGS</unmanaged-short>
        MessageIdJpegdecodeUnsupportedSourceBufferMiscFlags = unchecked ((System.Int32)(3146200)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDDSTTEXTUREUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDDSTTEXTUREUSAGE</unmanaged-short>
        MessageIdJpegdecodeUnsupportedDestinationTextureUsage = unchecked ((System.Int32)(3146201)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_BACKBUFFERNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_BACKBUFFERNOTSUPPORTED</unmanaged-short>
        MessageIdJpegdecodeBackbuffernotsupported = unchecked ((System.Int32)(3146202)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPRTEDCOPYFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPRTEDCOPYFLAGS</unmanaged-short>
        MessageIdJpegdecodeUnsupprtedcopyflags = unchecked ((System.Int32)(3146203)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_NOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_NOTSUPPORTED</unmanaged-short>
        MessageIdJpegencodeNotSupported = unchecked ((System.Int32)(3146204)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_INVALIDSCANDATAOFFSET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_INVALIDSCANDATAOFFSET</unmanaged-short>
        MessageIdJpegencodeInvalidScandataoffset = unchecked ((System.Int32)(3146205)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_INVALIDCOMPONENTS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_INVALIDCOMPONENTS</unmanaged-short>
        MessageIdJpegencodeInvalidComponents = unchecked ((System.Int32)(3146206)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_SOURCENOT2D</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_SOURCENOT2D</unmanaged-short>
        MessageIdJpegencodeSourceNot2D = unchecked ((System.Int32)(3146207)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_TILEDRESOURCESUNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_TILEDRESOURCESUNSUPPORTED</unmanaged-short>
        MessageIdJpegencodeTiledresourcesunsupported = unchecked ((System.Int32)(3146208)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_GUARDRECTSUNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_GUARDRECTSUNSUPPORTED</unmanaged-short>
        MessageIdJpegencodeGuardrectsunsupported = unchecked ((System.Int32)(3146209)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_XSUBSAMPLEMISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_XSUBSAMPLEMISMATCH</unmanaged-short>
        MessageIdJpegencodeXsubsamplemismatch = unchecked ((System.Int32)(3146210)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_YSUBSAMPLEMISMATCH</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_YSUBSAMPLEMISMATCH</unmanaged-short>
        MessageIdJpegencodeYsubsamplemismatch = unchecked ((System.Int32)(3146211)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_FORMATUNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_FORMATUNSUPPORTED</unmanaged-short>
        MessageIdJpegencodeFormatUnsupported = unchecked ((System.Int32)(3146212)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_INVALIDSUBRESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_INVALIDSUBRESOURCE</unmanaged-short>
        MessageIdJpegencodeInvalidSubResource = unchecked ((System.Int32)(3146213)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_INVALIDMIPLEVEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_INVALIDMIPLEVEL</unmanaged-short>
        MessageIdJpegencodeInvalidMiplevel = unchecked ((System.Int32)(3146214)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_DIMENSIONSTOOLARGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_DIMENSIONSTOOLARGE</unmanaged-short>
        MessageIdJpegencodeDimensionstoolarge = unchecked ((System.Int32)(3146215)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_HAZARD</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_HAZARD</unmanaged-short>
        MessageIdJpegencodeHazard = unchecked ((System.Int32)(3146216)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERUSAGE</unmanaged-short>
        MessageIdJpegencodeUnsupportedDestinationBufferUsage = unchecked ((System.Int32)(3146217)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERMISCFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERMISCFLAGS</unmanaged-short>
        MessageIdJpegencodeUnsupportedDestinationBufferMiscFlags = unchecked ((System.Int32)(3146218)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDSRCTEXTUREUSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDSRCTEXTUREUSAGE</unmanaged-short>
        MessageIdJpegencodeUnsupportedSourceTextureUsage = unchecked ((System.Int32)(3146219)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_JPEGENCODE_BACKBUFFERNOTSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_JPEGENCODE_BACKBUFFERNOTSUPPORTED</unmanaged-short>
        MessageIdJpegencodeBackbuffernotsupported = unchecked ((System.Int32)(3146220)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_UNSUPPORTEDCONTEXTTTYPEFORQUERY</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_UNSUPPORTEDCONTEXTTTYPEFORQUERY</unmanaged-short>
        MessageIdCreateQueryOrpredicateUnsupportedContextTtypeforquery = unchecked ((System.Int32)(3146221)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_FLUSH1_INVALIDCONTEXTTYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_FLUSH1_INVALIDCONTEXTTYPE</unmanaged-short>
        MessageIdFlush1InvalidContextType = unchecked ((System.Int32)(3146222)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DEVICE_SETHARDWAREPROTECTION_INVALIDCONTEXT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DEVICE_SETHARDWAREPROTECTION_INVALIDCONTEXT</unmanaged-short>
        MessageIdDeviceSetHardwareprotectionInvalidContext = unchecked ((System.Int32)(3146223)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTHDRMETADATA_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTHDRMETADATA_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetOutputHdrmetadataNullParam = unchecked ((System.Int32)(3146224)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTHDRMETADATA_INVALIDSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTHDRMETADATA_INVALIDSIZE</unmanaged-short>
        MessageIdVideoProcessorSetOutputHdrmetadataInvalidSize = unchecked ((System.Int32)(3146225)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTHDRMETADATA_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTHDRMETADATA_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetOutputHdrmetadataNullParam = unchecked ((System.Int32)(3146226)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTHDRMETADATA_INVALIDSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTHDRMETADATA_INVALIDSIZE</unmanaged-short>
        MessageIdVideoProcessorGetOutputHdrmetadataInvalidSize = unchecked ((System.Int32)(3146227)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamHdrmetadataNullParam = unchecked ((System.Int32)(3146228)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorSetStreamHdrmetadataInvalidStream = unchecked ((System.Int32)(3146229)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_INVALIDSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_INVALIDSIZE</unmanaged-short>
        MessageIdVideoProcessorSetStreamHdrmetadataInvalidSize = unchecked ((System.Int32)(3146230)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_NULLPARAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_NULLPARAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamHdrmetadataNullParam = unchecked ((System.Int32)(3146231)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamHdrmetadataInvalidStream = unchecked ((System.Int32)(3146232)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_INVALIDSIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_INVALIDSIZE</unmanaged-short>
        MessageIdVideoProcessorGetStreamHdrmetadataInvalidSize = unchecked ((System.Int32)(3146233)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFRAMEFORMAT_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFRAMEFORMAT_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamFrameFormatInvalidStream = unchecked ((System.Int32)(3146234)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamColorSpaceInvalidStream = unchecked ((System.Int32)(3146235)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMOUTPUTRATE_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMOUTPUTRATE_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamOutputRateInvalidStream = unchecked ((System.Int32)(3146236)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSOURCERECT_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSOURCERECT_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamSourceRectangleInvalidStream = unchecked ((System.Int32)(3146237)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMDESTRECT_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMDESTRECT_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamDestinationRectangleInvalidStream = unchecked ((System.Int32)(3146238)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMALPHA_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMALPHA_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamAlphaInvalidStream = unchecked ((System.Int32)(3146239)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPALETTE_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPALETTE_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamPaletteInvalidStream = unchecked ((System.Int32)(3146240)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPIXELASPECTRATIO_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPIXELASPECTRATIO_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamPixelAspectRatioInvalidStream = unchecked ((System.Int32)(3146241)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMLUMAKEY_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMLUMAKEY_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamLumakeyInvalidStream = unchecked ((System.Int32)(3146242)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSTEREOFORMAT_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSTEREOFORMAT_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamStereoFormatInvalidStream = unchecked ((System.Int32)(3146243)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMAUTOPROCESSINGMODE_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMAUTOPROCESSINGMODE_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamAutoprocessingmodeInvalidStream = unchecked ((System.Int32)(3146244)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFILTER_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFILTER_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamFilterInvalidStream = unchecked ((System.Int32)(3146245)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMROTATION_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMROTATION_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamRotationInvalidStream = unchecked ((System.Int32)(3146246)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE1_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE1_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamColorSpace1InvalidStream = unchecked ((System.Int32)(3146247)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMMIRROR_INVALIDSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMMIRROR_INVALIDSTREAM</unmanaged-short>
        MessageIdVideoProcessorGetStreamMirrorInvalidStream = unchecked ((System.Int32)(3146248)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_FENCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_FENCE</unmanaged-short>
        MessageIdCreateFence = unchecked ((System.Int32)(3146249)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_FENCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_FENCE</unmanaged-short>
        MessageIdLiveFence = unchecked ((System.Int32)(3146250)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_FENCE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_FENCE</unmanaged-short>
        MessageIdDestroyFence = unchecked ((System.Int32)(3146251)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATE_SYNCHRONIZEDCHANNEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATE_SYNCHRONIZEDCHANNEL</unmanaged-short>
        MessageIdCreateSynchronizedchannel = unchecked ((System.Int32)(3146252)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_LIVE_SYNCHRONIZEDCHANNEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_LIVE_SYNCHRONIZEDCHANNEL</unmanaged-short>
        MessageIdLiveSynchronizedchannel = unchecked ((System.Int32)(3146253)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DESTROY_SYNCHRONIZEDCHANNEL</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DESTROY_SYNCHRONIZEDCHANNEL</unmanaged-short>
        MessageIdDestroySynchronizedchannel = unchecked ((System.Int32)(3146254)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_CREATEFENCE_INVALIDFLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_CREATEFENCE_INVALIDFLAGS</unmanaged-short>
        MessageIdCreateFenceInvalidFlags = unchecked ((System.Int32)(3146255)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_D3D11_3_MESSAGES_END</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_D3D11_3_MESSAGES_END</unmanaged-short>
        MessageIdD3D113MessagesEnd = unchecked ((System.Int32)(3146256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_D3D11_5_MESSAGES_START</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_D3D11_5_MESSAGES_START</unmanaged-short>
        MessageIdD3D115MessagesStart = unchecked ((System.Int32)(3146257)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_NEGOTIATECRYPTOSESSIONKEYEXCHANGEMT_INVALIDKEYEXCHANGETYPE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_NEGOTIATECRYPTOSESSIONKEYEXCHANGEMT_INVALIDKEYEXCHANGETYPE</unmanaged-short>
        MessageIdNegotiatecryptosessionkeyexchangemtInvalidKeyexchangetype = unchecked ((System.Int32)(3146258)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_NEGOTIATECRYPTOSESSIONKEYEXCHANGEMT_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_NEGOTIATECRYPTOSESSIONKEYEXCHANGEMT_NOT_SUPPORTED</unmanaged-short>
        MessageIdNegotiatecryptosessionkeyexchangemtNotSupported = unchecked ((System.Int32)(3146259)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_COMPONENT_COUNT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_COMPONENT_COUNT</unmanaged-short>
        MessageIdDecoderbeginframeInvalidHistogramComponentCount = unchecked ((System.Int32)(3146260)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_COMPONENT</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_COMPONENT</unmanaged-short>
        MessageIdDecoderbeginframeInvalidHistogramComponent = unchecked ((System.Int32)(3146261)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_SIZE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_SIZE</unmanaged-short>
        MessageIdDecoderbeginframeInvalidHistogramBufferSize = unchecked ((System.Int32)(3146262)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_USAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_USAGE</unmanaged-short>
        MessageIdDecoderbeginframeInvalidHistogramBufferUsage = unchecked ((System.Int32)(3146263)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_MISC_FLAGS</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_MISC_FLAGS</unmanaged-short>
        MessageIdDecoderbeginframeInvalidHistogramBufferMiscFlags = unchecked ((System.Int32)(3146264)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_OFFSET</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_OFFSET</unmanaged-short>
        MessageIdDecoderbeginframeInvalidHistogramBufferOffset = unchecked ((System.Int32)(3146265)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_MESSAGE_ID_D3D11_5_MESSAGES_END</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_ID_D3D11_5_MESSAGES_END</unmanaged-short>
        MessageIdD3D115MessagesEnd = unchecked ((System.Int32)(3146266))}

    /// <summary>
    /// <p>Debug message severity levels for an information queue.</p>
    /// </summary>
    /// <remarks>
    /// <p>Use these values to allow or deny message categories to pass through the storage and retrieval filters for an information queue (see <strong><see cref = "SharpDX.Direct3D11.InfoQueueFilter"/></strong>). This API is used by <strong>ID3D11InfoQueue::AddApplicationMessage</strong>.</p>
    /// </remarks>
    /// <doc-id>ff476187</doc-id>
    /// <unmanaged>D3D11_MESSAGE_SEVERITY</unmanaged>
    /// <unmanaged-short>D3D11_MESSAGE_SEVERITY</unmanaged-short>
    public enum MessageSeverity : System.Int32
    {
        /// <summary>
        /// <dd> <p>Defines some type of corruption which has occurred.</p> </dd>
        /// </summary>
        /// <doc-id>ff476187</doc-id>
        /// <unmanaged>D3D11_MESSAGE_SEVERITY_CORRUPTION</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_SEVERITY_CORRUPTION</unmanaged-short>
        Corruption = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Defines an error message.</p> </dd>
        /// </summary>
        /// <doc-id>ff476187</doc-id>
        /// <unmanaged>D3D11_MESSAGE_SEVERITY_ERROR</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_SEVERITY_ERROR</unmanaged-short>
        Error = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Defines a warning message.</p> </dd>
        /// </summary>
        /// <doc-id>ff476187</doc-id>
        /// <unmanaged>D3D11_MESSAGE_SEVERITY_WARNING</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_SEVERITY_WARNING</unmanaged-short>
        Warning = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Defines an information message.</p> </dd>
        /// </summary>
        /// <doc-id>ff476187</doc-id>
        /// <unmanaged>D3D11_MESSAGE_SEVERITY_INFO</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_SEVERITY_INFO</unmanaged-short>
        Information = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>Defines a message other than corruption, error, warning, or information.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476187</doc-id>
        /// <unmanaged>D3D11_MESSAGE_SEVERITY_MESSAGE</unmanaged>
        /// <unmanaged-short>D3D11_MESSAGE_SEVERITY_MESSAGE</unmanaged-short>
        Message = unchecked ((System.Int32)(4))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Flags that describe miscellaneous query behavior.</p>
    /// </summary>
    /// <remarks>
    /// <p>This flag is part of a query description (see <strong><see cref = "SharpDX.Direct3D11.QueryDescription"/></strong>).</p>
    /// </remarks>
    /// <doc-id>ff476196</doc-id>
    /// <unmanaged>D3D11_QUERY_MISC_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_QUERY_MISC_FLAG</unmanaged-short>
    public enum QueryFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>Tell the hardware that if it is not yet sure if something is hidden or not to draw it anyway. This is only used with an occlusion predicate. Predication data cannot be returned to your application via <strong>ID3D11DeviceContext::GetData</strong> when using this flag.</p> </dd>
        /// </summary>
        /// <doc-id>ff476196</doc-id>
        /// <unmanaged>D3D11_QUERY_MISC_PREDICATEHINT</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_MISC_PREDICATEHINT</unmanaged-short>
        Predicatehint = unchecked ((System.Int32)(1)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Query types.</p>
    /// </summary>
    /// <remarks>
    /// <p> Create a query with <strong>ID3D11Device::CreateQuery</strong>. </p>
    /// </remarks>
    /// <doc-id>ff476191</doc-id>
    /// <unmanaged>D3D11_QUERY</unmanaged>
    /// <unmanaged-short>D3D11_QUERY</unmanaged-short>
    public enum QueryType : System.Int32
    {
        /// <summary>
        /// <dd> <p> Determines whether or not the GPU is finished processing commands. When the GPU is finished processing commands <strong>ID3D11DeviceContext::GetData</strong> will return <see cref = "SharpDX.Result.Ok"/>, and pData will point to a <see cref = "SharpDX.Mathematics.Interop.RawBool"/> with a value of <strong>TRUE</strong>. When using this type of query, <strong>ID3D11DeviceContext::Begin</strong> is disabled. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_EVENT</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_EVENT</unmanaged-short>
        Event = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p> Get the number of samples that passed the depth and stencil tests in between <strong>ID3D11DeviceContext::Begin</strong> and <strong>ID3D11DeviceContext::End</strong>. <strong>ID3D11DeviceContext::GetData</strong> returns a UINT64. If a depth or stencil test is disabled, then each of those tests will be counted as a pass. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_OCCLUSION</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_OCCLUSION</unmanaged-short>
        Occlusion = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p> Get a timestamp value where <strong>ID3D11DeviceContext::GetData</strong> returns a UINT64. This kind of query is only useful if two timestamp queries are done in the middle of a D3D11_QUERY_TIMESTAMP_DISJOINT query. The difference of two timestamps can be used to determine how many ticks have elapsed, and the D3D11_QUERY_TIMESTAMP_DISJOINT query will determine if that difference is a reliable value and also has a value that shows how to convert the number of ticks into seconds. See <strong><see cref = "SharpDX.Direct3D11.QueryDataTimestampDisjoint"/></strong>. When using this type of query, <strong>ID3D11DeviceContext::Begin</strong> is disabled. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_TIMESTAMP</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_TIMESTAMP</unmanaged-short>
        Timestamp = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p> Determines whether or not a D3D11_QUERY_TIMESTAMP is returning reliable values, and also gives the frequency of the processor enabling you to convert the number of elapsed ticks into seconds. <strong>ID3D11DeviceContext::GetData</strong> will return a <strong><see cref = "SharpDX.Direct3D11.QueryDataTimestampDisjoint"/></strong>. This type of query should only be invoked once per frame or less. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_TIMESTAMP_DISJOINT</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_TIMESTAMP_DISJOINT</unmanaged-short>
        TimestampDisjoint = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p> Get pipeline statistics, such as the number of pixel shader invocations in between <strong>ID3D11DeviceContext::Begin</strong> and <strong>ID3D11DeviceContext::End</strong>. <strong>ID3D11DeviceContext::GetData</strong> will return a <strong><see cref = "SharpDX.Direct3D11.QueryDataPipelineStatistics"/></strong>. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_PIPELINE_STATISTICS</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_PIPELINE_STATISTICS</unmanaged-short>
        PipelineStatistics = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p> Similar to D3D11_QUERY_OCCLUSION, except <strong>ID3D11DeviceContext::GetData</strong> returns a <see cref = "SharpDX.Mathematics.Interop.RawBool"/> indicating whether or not any samples passed the depth and stencil tests - <strong>TRUE</strong> meaning at least one passed, <strong><see cref = "SharpDX.Result.False"/></strong> meaning none passed. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_OCCLUSION_PREDICATE</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_OCCLUSION_PREDICATE</unmanaged-short>
        OcclusionPredicate = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p> Get streaming output statistics, such as the number of primitives streamed out in between <strong>ID3D11DeviceContext::Begin</strong> and <strong>ID3D11DeviceContext::End</strong>. <strong>ID3D11DeviceContext::GetData</strong> will return a <strong><see cref = "SharpDX.Direct3D11.StreamOutputStatistics"/></strong> structure. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_SO_STATISTICS</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_SO_STATISTICS</unmanaged-short>
        StreamOutputStatistics = unchecked ((System.Int32)(6)),
        /// <summary>
        /// <dd> <p> Determines whether or not any of the streaming output buffers overflowed in between <strong>ID3D11DeviceContext::Begin</strong> and <strong>ID3D11DeviceContext::End</strong>. <strong>ID3D11DeviceContext::GetData</strong> returns a <see cref = "SharpDX.Mathematics.Interop.RawBool"/> - <strong>TRUE</strong> meaning there was an overflow, <strong><see cref = "SharpDX.Result.False"/></strong> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_SO_OVERFLOW_PREDICATE</unmanaged-short>
        StreamOutputOverflowPredicate = unchecked ((System.Int32)(7)),
        /// <summary>
        /// <dd> <p> Get streaming output statistics for stream 0, such as the number of primitives streamed out in between <strong>ID3D11DeviceContext::Begin</strong> and <strong>ID3D11DeviceContext::End</strong>. <strong>ID3D11DeviceContext::GetData</strong> will return a <strong><see cref = "SharpDX.Direct3D11.StreamOutputStatistics"/></strong> structure. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_SO_STATISTICS_STREAM0</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_SO_STATISTICS_STREAM0</unmanaged-short>
        StreamOutputStatisticsStream0 = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p> Determines whether or not the stream 0 output buffers overflowed in between <strong>ID3D11DeviceContext::Begin</strong> and <strong>ID3D11DeviceContext::End</strong>. <strong>ID3D11DeviceContext::GetData</strong> returns a <see cref = "SharpDX.Mathematics.Interop.RawBool"/> - <strong>TRUE</strong> meaning there was an overflow, <strong><see cref = "SharpDX.Result.False"/></strong> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0</unmanaged-short>
        StreamOutputOverflowPredicateStream0 = unchecked ((System.Int32)(9)),
        /// <summary>
        /// <dd> <p> Get streaming output statistics for stream 1, such as the number of primitives streamed out in between <strong>ID3D11DeviceContext::Begin</strong> and <strong>ID3D11DeviceContext::End</strong>. <strong>ID3D11DeviceContext::GetData</strong> will return a <strong><see cref = "SharpDX.Direct3D11.StreamOutputStatistics"/></strong> structure. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_SO_STATISTICS_STREAM1</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_SO_STATISTICS_STREAM1</unmanaged-short>
        StreamOutputStatisticsStream1 = unchecked ((System.Int32)(10)),
        /// <summary>
        /// <dd> <p> Determines whether or not the stream 1 output buffers overflowed in between <strong>ID3D11DeviceContext::Begin</strong> and <strong>ID3D11DeviceContext::End</strong>. <strong>ID3D11DeviceContext::GetData</strong> returns a <see cref = "SharpDX.Mathematics.Interop.RawBool"/> - <strong>TRUE</strong> meaning there was an overflow, <strong><see cref = "SharpDX.Result.False"/></strong> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1</unmanaged-short>
        StreamOutputOverflowPredicateStream1 = unchecked ((System.Int32)(11)),
        /// <summary>
        /// <dd> <p> Get streaming output statistics for stream 2, such as the number of primitives streamed out in between <strong>ID3D11DeviceContext::Begin</strong> and <strong>ID3D11DeviceContext::End</strong>. <strong>ID3D11DeviceContext::GetData</strong> will return a <strong><see cref = "SharpDX.Direct3D11.StreamOutputStatistics"/></strong> structure. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_SO_STATISTICS_STREAM2</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_SO_STATISTICS_STREAM2</unmanaged-short>
        StreamOutputStatisticsStream2 = unchecked ((System.Int32)(12)),
        /// <summary>
        /// <dd> <p> Determines whether or not the stream 2 output buffers overflowed in between <strong>ID3D11DeviceContext::Begin</strong> and <strong>ID3D11DeviceContext::End</strong>. <strong>ID3D11DeviceContext::GetData</strong> returns a <see cref = "SharpDX.Mathematics.Interop.RawBool"/> - <strong>TRUE</strong> meaning there was an overflow, <strong><see cref = "SharpDX.Result.False"/></strong> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2</unmanaged-short>
        StreamOutputOverflowPredicateStream2 = unchecked ((System.Int32)(13)),
        /// <summary>
        /// <dd> <p> Get streaming output statistics for stream 3, such as the number of primitives streamed out in between <strong>ID3D11DeviceContext::Begin</strong> and <strong>ID3D11DeviceContext::End</strong>. <strong>ID3D11DeviceContext::GetData</strong> will return a <strong><see cref = "SharpDX.Direct3D11.StreamOutputStatistics"/></strong> structure. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_SO_STATISTICS_STREAM3</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_SO_STATISTICS_STREAM3</unmanaged-short>
        StreamOutputStatisticsStream3 = unchecked ((System.Int32)(14)),
        /// <summary>
        /// <dd> <p> Determines whether or not the stream 3 output buffers overflowed in between <strong>ID3D11DeviceContext::Begin</strong> and <strong>ID3D11DeviceContext::End</strong>. <strong>ID3D11DeviceContext::GetData</strong> returns a <see cref = "SharpDX.Mathematics.Interop.RawBool"/> - <strong>TRUE</strong> meaning there was an overflow, <strong><see cref = "SharpDX.Result.False"/></strong> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow. </p> </dd>
        /// </summary>
        /// <doc-id>ff476191</doc-id>
        /// <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3</unmanaged>
        /// <unmanaged-short>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3</unmanaged-short>
        StreamOutputOverflowPredicateStream3 = unchecked ((System.Int32)(15))}

    /// <summary>
    /// <p>These flags identify the type of resource that will be viewed as a render target.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is used in <strong><see cref = "SharpDX.Direct3D11.RenderTargetViewDescription"/></strong> to create a render-target view.</p>
    /// </remarks>
    /// <doc-id>ff476206</doc-id>
    /// <unmanaged>D3D11_RTV_DIMENSION</unmanaged>
    /// <unmanaged-short>D3D11_RTV_DIMENSION</unmanaged-short>
    public enum RenderTargetViewDimension : System.Int32
    {
        /// <summary>
        /// <dd> <p>Do not use this value, as it will cause <strong>ID3D11Device::CreateRenderTargetView</strong> to fail.</p> </dd>
        /// </summary>
        /// <doc-id>ff476206</doc-id>
        /// <unmanaged>D3D11_RTV_DIMENSION_UNKNOWN</unmanaged>
        /// <unmanaged-short>D3D11_RTV_DIMENSION_UNKNOWN</unmanaged-short>
        Unknown = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as a buffer.</p> </dd>
        /// </summary>
        /// <doc-id>ff476206</doc-id>
        /// <unmanaged>D3D11_RTV_DIMENSION_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_RTV_DIMENSION_BUFFER</unmanaged-short>
        Buffer = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as a 1D texture.</p> </dd>
        /// </summary>
        /// <doc-id>ff476206</doc-id>
        /// <unmanaged>D3D11_RTV_DIMENSION_TEXTURE1D</unmanaged>
        /// <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE1D</unmanaged-short>
        Texture1D = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as an array of 1D textures.</p> </dd>
        /// </summary>
        /// <doc-id>ff476206</doc-id>
        /// <unmanaged>D3D11_RTV_DIMENSION_TEXTURE1DARRAY</unmanaged>
        /// <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE1DARRAY</unmanaged-short>
        Texture1DArray = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as a 2D texture.</p> </dd>
        /// </summary>
        /// <doc-id>ff476206</doc-id>
        /// <unmanaged>D3D11_RTV_DIMENSION_TEXTURE2D</unmanaged>
        /// <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE2D</unmanaged-short>
        Texture2D = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as an array of 2D textures.</p> </dd>
        /// </summary>
        /// <doc-id>ff476206</doc-id>
        /// <unmanaged>D3D11_RTV_DIMENSION_TEXTURE2DARRAY</unmanaged>
        /// <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE2DARRAY</unmanaged-short>
        Texture2DArray = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as a 2D texture with multisampling.</p> </dd>
        /// </summary>
        /// <doc-id>ff476206</doc-id>
        /// <unmanaged>D3D11_RTV_DIMENSION_TEXTURE2DMS</unmanaged>
        /// <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE2DMS</unmanaged-short>
        Texture2DMultisampled = unchecked ((System.Int32)(6)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as an array of 2D textures with multisampling.</p> </dd>
        /// </summary>
        /// <doc-id>ff476206</doc-id>
        /// <unmanaged>D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY</unmanaged>
        /// <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY</unmanaged-short>
        Texture2DMultisampledArray = unchecked ((System.Int32)(7)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as a 3D texture.</p> </dd>
        /// </summary>
        /// <doc-id>ff476206</doc-id>
        /// <unmanaged>D3D11_RTV_DIMENSION_TEXTURE3D</unmanaged>
        /// <unmanaged-short>D3D11_RTV_DIMENSION_TEXTURE3D</unmanaged-short>
        Texture3D = unchecked ((System.Int32)(8))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Options for the amount of information to report about a device object's lifetime.</p>
    /// </summary>
    /// <remarks>
    /// <p> This enumeration is used by <strong>ID3D11Debug::ReportLiveDeviceObjects</strong>. </p><p> Several inline functions exist to combine the options using operators, see the D3D11SDKLayers.h header file for details. </p>
    /// </remarks>
    /// <doc-id>ff476205</doc-id>
    /// <unmanaged>D3D11_RLDO_FLAGS</unmanaged>
    /// <unmanaged-short>D3D11_RLDO_FLAGS</unmanaged-short>
    public enum ReportingLevel : System.Int32
    {
        /// <summary>
        /// <dd> <p> Specifies to obtain a summary about a device object's lifetime. </p> </dd>
        /// </summary>
        /// <doc-id>ff476205</doc-id>
        /// <unmanaged>D3D11_RLDO_SUMMARY</unmanaged>
        /// <unmanaged-short>D3D11_RLDO_SUMMARY</unmanaged-short>
        Summary = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p> Specifies to obtain detailed information about a device object's lifetime. </p> </dd>
        /// </summary>
        /// <doc-id>ff476205</doc-id>
        /// <unmanaged>D3D11_RLDO_DETAIL</unmanaged>
        /// <unmanaged-short>D3D11_RLDO_DETAIL</unmanaged-short>
        Detail = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p> Do not use this enumeration constant.   It is for internal use only. </p> </dd>
        /// </summary>
        /// <doc-id>ff476205</doc-id>
        /// <unmanaged>D3D11_RLDO_IGNORE_INTERNAL</unmanaged>
        /// <unmanaged-short>D3D11_RLDO_IGNORE_INTERNAL</unmanaged-short>
        IgnoreInternal = unchecked ((System.Int32)(4)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Identifies the type of resource being used.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is used in <strong>ID3D11Resource::GetType</strong>. </p>
    /// </remarks>
    /// <doc-id>ff476202</doc-id>
    /// <unmanaged>D3D11_RESOURCE_DIMENSION</unmanaged>
    /// <unmanaged-short>D3D11_RESOURCE_DIMENSION</unmanaged-short>
    public enum ResourceDimension : System.Int32
    {
        /// <summary>
        /// <dd> <p>Resource is of unknown type.</p> </dd>
        /// </summary>
        /// <doc-id>ff476202</doc-id>
        /// <unmanaged>D3D11_RESOURCE_DIMENSION_UNKNOWN</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_DIMENSION_UNKNOWN</unmanaged-short>
        Unknown = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Resource is a buffer.</p> </dd>
        /// </summary>
        /// <doc-id>ff476202</doc-id>
        /// <unmanaged>D3D11_RESOURCE_DIMENSION_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_DIMENSION_BUFFER</unmanaged-short>
        Buffer = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Resource is a 1D texture.</p> </dd>
        /// </summary>
        /// <doc-id>ff476202</doc-id>
        /// <unmanaged>D3D11_RESOURCE_DIMENSION_TEXTURE1D</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_DIMENSION_TEXTURE1D</unmanaged-short>
        Texture1D = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Resource is a 2D texture.</p> </dd>
        /// </summary>
        /// <doc-id>ff476202</doc-id>
        /// <unmanaged>D3D11_RESOURCE_DIMENSION_TEXTURE2D</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_DIMENSION_TEXTURE2D</unmanaged-short>
        Texture2D = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>Resource is a 3D texture.</p> </dd>
        /// </summary>
        /// <doc-id>ff476202</doc-id>
        /// <unmanaged>D3D11_RESOURCE_DIMENSION_TEXTURE3D</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_DIMENSION_TEXTURE3D</unmanaged-short>
        Texture3D = unchecked ((System.Int32)(4))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Identifies options for resources.</p>
    /// </summary>
    /// <remarks>
    /// <p> This enumeration is used in <strong><see cref = "SharpDX.Direct3D11.BufferDescription"/></strong>, <strong><see cref = "SharpDX.Direct3D11.Texture1DDescription"/></strong>, <strong><see cref = "SharpDX.Direct3D11.Texture2DDescription"/></strong>, <strong><see cref = "SharpDX.Direct3D11.Texture3DDescription"/></strong>.  </p><p> These flags can be combined by bitwise OR. </p><p> The <strong><see cref = "SharpDX.Direct3D11.ResourceOptionFlags"/></strong> cannot be used when creating resources with <strong>D3D11_CPU_ACCESS</strong> flags. </p>
    /// </remarks>
    /// <doc-id>ff476203</doc-id>
    /// <unmanaged>D3D11_RESOURCE_MISC_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_RESOURCE_MISC_FLAG</unmanaged-short>
    public enum ResourceOptionFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p> Enables MIP map generation by using <strong>ID3D11DeviceContext::GenerateMips</strong> on a texture resource. The resource must be created with the <strong>bind flags</strong> that specify that the resource is a render target and a shader resource. </p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_GENERATE_MIPS</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_GENERATE_MIPS</unmanaged-short>
        GenerateMipMaps = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p> Enables resource data sharing between two or more Direct3D devices. The only resources that can be shared are 2D non-mipmapped textures. </p> <p><strong>D3D11_RESOURCE_MISC_SHARED</strong> and <strong>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</strong> are mutually exclusive. </p> <p><strong>WARP</strong> and <strong>REF</strong> devices do not support shared resources.  If you try to create a resource with this flag on either a <strong>WARP</strong> or <strong>REF</strong> device, the create method will return an <strong>E_OUTOFMEMORY</strong> error code. </p> <strong>Note</strong>?? Starting with Windows?8, <strong>WARP</strong> devices fully support shared resources.  ? <strong>Note</strong>?? Starting with Windows?8, we recommend that you enable resource data sharing between two or more Direct3D devices by using a combination of the <strong>D3D11_RESOURCE_MISC_SHARED_NTHANDLE</strong> and <strong>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</strong> flags instead.  ? </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_SHARED</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_SHARED</unmanaged-short>
        Shared = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p> Sets a resource to be a cube texture created from a Texture2DArray that contains 6 textures. </p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_TEXTURECUBE</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_TEXTURECUBE</unmanaged-short>
        TextureCube = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Enables instancing of GPU-generated content.</p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS</unmanaged-short>
        DrawIndirectArguments = unchecked ((System.Int32)(16)),
        /// <summary>
        /// <dd> <p> Enables a resource as a byte address buffer. </p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS</unmanaged-short>
        BufferAllowRawViews = unchecked ((System.Int32)(32)),
        /// <summary>
        /// <dd> <p> Enables a resource as a structured buffer. </p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_BUFFER_STRUCTURED</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_BUFFER_STRUCTURED</unmanaged-short>
        BufferStructured = unchecked ((System.Int32)(64)),
        /// <summary>
        /// <dd> <p> Enables a resource with MIP map clamping for use with <strong>ID3D11DeviceContext::SetResourceMinLOD</strong>. </p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_RESOURCE_CLAMP</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_RESOURCE_CLAMP</unmanaged-short>
        ResourceClamp = unchecked ((System.Int32)(128)),
        /// <summary>
        /// <dd> <p>Enables the resource  to be synchronized by using the <strong>IDXGIKeyedMutex::AcquireSync</strong> and  <strong>IDXGIKeyedMutex::ReleaseSync</strong> APIs.  The following Direct3D?11 resource creation  APIs, that take <strong><see cref = "SharpDX.Direct3D11.ResourceOptionFlags"/></strong> parameters, have been extended to support the new flag.</p> <ul> <li> <strong>ID3D11Device::CreateTexture1D</strong> </li> <li> <strong>ID3D11Device::CreateTexture2D</strong> </li> <li> <strong>ID3D11Device::CreateTexture3D</strong> </li> <li> <strong>ID3D11Device::CreateBuffer</strong> </li> </ul> <p>If you call any of these  methods with the <strong>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</strong> flag set, the interface returned will support the <strong><see cref = "SharpDX.DXGI.KeyedMutex"/></strong> interface.  You can retrieve a reference to the <strong><see cref = "SharpDX.DXGI.KeyedMutex"/></strong> interface from the resource by using <strong>IUnknown::QueryInterface</strong>.  The <strong><see cref = "SharpDX.DXGI.KeyedMutex"/></strong> interface implements the <strong>IDXGIKeyedMutex::AcquireSync</strong> and <strong>IDXGIKeyedMutex::ReleaseSync</strong> APIs to synchronize access to the surface. The device that creates the surface, and any other device that opens the surface by using <strong>OpenSharedResource</strong>, must call <strong>IDXGIKeyedMutex::AcquireSync</strong> before they issue any rendering commands to the surface. When those devices finish rendering, they must call <strong>IDXGIKeyedMutex::ReleaseSync</strong>. </p> <p><strong>D3D11_RESOURCE_MISC_SHARED</strong> and <strong>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</strong> are mutually exclusive. </p> <p><strong>WARP</strong> and <strong>REF</strong> devices do not support shared resources. If you try to create a resource with this flag on either a <strong>WARP</strong> or <strong>REF</strong> device, the create method will return an <strong>E_OUTOFMEMORY</strong> error code. </p> <strong>Note</strong>?? Starting with Windows?8, <strong>WARP</strong> devices fully support shared resources.  ? </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</unmanaged-short>
        SharedKeyedmutex = unchecked ((System.Int32)(256)),
        /// <summary>
        /// <dd> <p> Enables a resource compatible with GDI. You must set the <strong>D3D11_RESOURCE_MISC_GDI_COMPATIBLE</strong> flag  on surfaces that you use with GDI. Setting the <strong>D3D11_RESOURCE_MISC_GDI_COMPATIBLE</strong> flag allows GDI rendering on the surface via <strong>IDXGISurface1::GetDC</strong>. </p> <p>Consider the following programming tips for using D3D11_RESOURCE_MISC_GDI_COMPATIBLE when you create a texture or use that texture in a swap chain:</p> <ul> <li>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX and D3D11_RESOURCE_MISC_GDI_COMPATIBLE are mutually exclusive. Therefore, do not use them together.</li> <li>D3D11_RESOURCE_MISC_RESOURCE_CLAMP and D3D11_RESOURCE_MISC_GDI_COMPATIBLE are mutually exclusive. Therefore, do not use them together.</li> <li> You must bind the texture as a render target for the output-merger stage. For example, set the D3D11_BIND_RENDER_TARGET flag in the <strong>BindFlags</strong> member of the <strong><see cref = "SharpDX.Direct3D11.Texture2DDescription"/></strong> structure. </li> <li> You must set the maximum number of MIP map levels to 1. For example, set the <strong>MipLevels</strong> member of the <strong><see cref = "SharpDX.Direct3D11.Texture2DDescription"/></strong> structure to 1. </li> <li> You must specify that the texture requires read and write access by the GPU. For example, set the <strong>Usage</strong> member of the <strong><see cref = "SharpDX.Direct3D11.Texture2DDescription"/></strong> structure to D3D11_USAGE_DEFAULT. </li> <li> <p>You must set the texture format to one of the following types. </p> <ul> <li>DXGI_FORMAT_B8G8R8A8_UNORM</li> <li>DXGI_FORMAT_B8G8R8A8_TYPELESS</li> <li>DXGI_FORMAT_B8G8R8A8_UNORM_SRGB</li> </ul> For example, set the <strong>Format</strong> member of the <strong><see cref = "SharpDX.Direct3D11.Texture2DDescription"/></strong> structure to one of these  types. </li> <li> You cannot use D3D11_RESOURCE_MISC_GDI_COMPATIBLE with multisampling. Therefore, set the <strong>Count</strong> member of the <strong><see cref = "SharpDX.DXGI.SampleDescription"/></strong> structure to 1. Then, set the <strong>SampleDesc</strong> member of the <strong><see cref = "SharpDX.Direct3D11.Texture2DDescription"/></strong> structure to this <strong><see cref = "SharpDX.DXGI.SampleDescription"/></strong> structure. </li> </ul> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_GDI_COMPATIBLE</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_GDI_COMPATIBLE</unmanaged-short>
        GdiCompatible = unchecked ((System.Int32)(512)),
        /// <summary>
        /// <dd> <p>Set this flag to enable the use of NT HANDLE values when you create a shared resource.  By enabling this flag, you deprecate the use of existing HANDLE values.</p> <p> When you use this flag, you must combine it with the <strong>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</strong> flag by using a bitwise OR operation. The resulting value specifies a new shared resource type that directs the runtime to use NT HANDLE values for the shared resource. The runtime then must confirm that the shared resource  works on all hardware at the specified feature level. </p> <p>Without this flag set, the runtime does not strictly validate shared resource parameters (that is, formats, flags, usage, and so on). When the runtime does not validate shared resource parameters, behavior of much of the Direct3D   API might be undefined and might vary from driver to driver.  </p> <p><strong>Direct3D 11 and earlier:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_SHARED_NTHANDLE</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_SHARED_NTHANDLE</unmanaged-short>
        SharedNthandle = unchecked ((System.Int32)(2048)),
        /// <summary>
        /// <dd> <p>Set this flag to indicate that the resource might contain protected content; therefore, the operating system should  use the resource only when the driver and hardware support content protection.  If the driver and hardware do not support content protection and you try to create a resource with this flag, the resource creation fails.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_RESTRICTED_CONTENT</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_RESTRICTED_CONTENT</unmanaged-short>
        RestrictedContent = unchecked ((System.Int32)(4096)),
        /// <summary>
        /// <dd> <p>Set this flag to indicate that the operating system  restricts access to the shared surface. You can use this flag together with the D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER flag and only when you create a shared surface. The process that creates the shared resource can always open the shared resource.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE</unmanaged-short>
        RestrictSharedResource = unchecked ((System.Int32)(8192)),
        /// <summary>
        /// <dd> <p>Set this flag to indicate that the driver  restricts access to the shared surface. You can use this flag in conjunction with the D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE flag and only when you create a shared surface. The process that creates the shared resource can always open the shared resource.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER</unmanaged-short>
        RestrictSharedResourceDriver = unchecked ((System.Int32)(16384)),
        /// <summary>
        /// <dd> <p> Set this flag to indicate that the resource is guarded. Such a resource is returned by the <strong>IDCompositionSurface::BeginDraw</strong> (DirectComposition) and <strong>ISurfaceImageSourceNative::BeginDraw</strong> (Windows Runtime) APIs.  For these APIs, you provide a region of interest (ROI) on a surface to update. This surface isn't compatible with multiple render targets (MRT).</p> <p>A guarded resource automatically restricts all writes to the region that is related to one of the preceding APIs. Additionally, the resource enforces access to the ROI with these restrictions:</p> <ul> <li> Copy operations from the resource by using <strong>ID3D11DeviceContext::CopyResource</strong> or <strong>ID3D11DeviceContext::CopySubresourceRegion</strong> are restricted to only copy from the ROI. </li> <li>When a guarded resource is set as a render target, it must be the only target.</li> </ul> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.1.</p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_GUARDED</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_GUARDED</unmanaged-short>
        Guarded = unchecked ((System.Int32)(32768)),
        /// <summary>
        /// <dd> <p> Set this flag to indicate that the resource is a tile pool.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.2.</p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_TILE_POOL</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_TILE_POOL</unmanaged-short>
        TilePool = unchecked ((System.Int32)(131072)),
        /// <summary>
        /// <dd> <p> Set this flag to indicate that the resource is a tiled resource.</p> <p><strong>Direct3D 11:??</strong>This value is not supported until Direct3D 11.2.</p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_TILED</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_TILED</unmanaged-short>
        Tiled = unchecked ((System.Int32)(262144)),
        /// <summary>
        /// <dd> <p>Set this flag to indicate that the resource should be created such that it will be protected by the hardware.  Resource creation will fail if hardware content protection is not supported.</p> <p>This flag has the following restrictions:</p> <ul> <li> This flag cannot be used with the following <strong><see cref = "SharpDX.Direct3D11.ResourceUsage"/></strong> values:<ul> <li><strong>D3D11_USAGE_DYNAMIC</strong></li> <li><strong>D3D11_USAGE_STAGING</strong></li> </ul> </li> <li> This flag cannot be used with the following <strong><see cref = "SharpDX.Direct3D11.BindFlags"/></strong> values.<ul> <li><strong>D3D11_BIND_VERTEX_BUFFER</strong></li> <li><strong>D3D11_BIND_INDEX_BUFFER</strong></li> </ul> </li> <li>No CPU access flags can be specified.</li> </ul> <strong>Note</strong>??<p>Creating a texture using this flag does not automatically guarantee that hardware protection will be enabled for the underlying allocation. Some implementations require that the DRM components are first initialized prior to any guarantees of protection.</p>  ? <p><strong>Note</strong>?? This enumeration value is supported starting with Windows?10. </p> </dd>
        /// </summary>
        /// <doc-id>ff476203</doc-id>
        /// <unmanaged>D3D11_RESOURCE_MISC_HW_PROTECTED</unmanaged>
        /// <unmanaged-short>D3D11_RESOURCE_MISC_HW_PROTECTED</unmanaged-short>
        HwProtected = unchecked ((System.Int32)(524288)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Identifies expected resource use during rendering. The usage directly reflects whether a resource is accessible by the CPU and/or the graphics processing unit (GPU).</p>
    /// </summary>
    /// <remarks>
    /// <p>An application identifies the way a resource is intended to be used (its usage) in a resource description. There are several structures for creating resources including: <strong><see cref = "SharpDX.Direct3D11.Texture1DDescription"/></strong>, <strong><see cref = "SharpDX.Direct3D11.Texture2DDescription"/></strong>, <strong><see cref = "SharpDX.Direct3D11.Texture3DDescription"/></strong>, and <strong><see cref = "SharpDX.Direct3D11.BufferDescription"/></strong>.</p><table> <tr><td> <p>Differences between Direct3D 9 and Direct3D 10/11:</p> <p>In Direct3D 9, you specify the type of memory a resource should be created in at resource creation time (using D3DPOOL). It was an application's job to decide what memory pool would provide the best combination of functionality and performance.</p> <p>In Direct3D 10/11, an application no longer specifies what type of memory (the pool) to create a resource in. Instead, you specify the intended usage of the resource, and let the runtime (in concert with the driver and a memory manager) choose the type of memory that will achieve the best performance.</p> </td></tr> </table><p>?</p>
    /// </remarks>
    /// <doc-id>ff476259</doc-id>
    /// <unmanaged>D3D11_USAGE</unmanaged>
    /// <unmanaged-short>D3D11_USAGE</unmanaged-short>
    public enum ResourceUsage : System.Int32
    {
        /// <summary>
        /// <dd> <p>A resource that requires read and write access by the GPU. This is likely to be the most common usage choice.</p> </dd>
        /// </summary>
        /// <doc-id>ff476259</doc-id>
        /// <unmanaged>D3D11_USAGE_DEFAULT</unmanaged>
        /// <unmanaged-short>D3D11_USAGE_DEFAULT</unmanaged-short>
        Default = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>A resource that can only be read by the GPU. It cannot be written by the GPU, and cannot be accessed at all by the CPU. This type of resource must be initialized when it is created, since it cannot be changed after creation.</p> </dd>
        /// </summary>
        /// <doc-id>ff476259</doc-id>
        /// <unmanaged>D3D11_USAGE_IMMUTABLE</unmanaged>
        /// <unmanaged-short>D3D11_USAGE_IMMUTABLE</unmanaged-short>
        Immutable = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>A resource that is accessible by both the GPU (read only) and the CPU (write only). A dynamic resource is a good choice for a resource that will be updated by the CPU at least once per frame. To update a dynamic resource, use a <strong>Map</strong> method.</p> <p>For info about how to use dynamic resources, see How to: Use dynamic resources. </p> </dd>
        /// </summary>
        /// <doc-id>ff476259</doc-id>
        /// <unmanaged>D3D11_USAGE_DYNAMIC</unmanaged>
        /// <unmanaged-short>D3D11_USAGE_DYNAMIC</unmanaged-short>
        Dynamic = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>A resource that supports data transfer (copy) from the GPU to the CPU.</p> </dd>
        /// </summary>
        /// <doc-id>ff476259</doc-id>
        /// <unmanaged>D3D11_USAGE_STAGING</unmanaged>
        /// <unmanaged-short>D3D11_USAGE_STAGING</unmanaged-short>
        Staging = unchecked ((System.Int32)(3))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Describes the level of support for shader caching in the current graphics driver.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enum is used by the <strong>D3D_FEATURE_DATA_SHADER_CACHE</strong> structure.</p>
    /// </remarks>
    /// <doc-id>mt492476</doc-id>
    /// <unmanaged>D3D11_SHADER_CACHE_SUPPORT_FLAGS</unmanaged>
    /// <unmanaged-short>D3D11_SHADER_CACHE_SUPPORT_FLAGS</unmanaged-short>
    public enum ShaderCacheSupportFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>Indicates that the driver does not support shader caching.</p> </dd>
        /// </summary>
        /// <doc-id>mt492476</doc-id>
        /// <unmanaged>D3D11_SHADER_CACHE_SUPPORT_NONE</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_CACHE_SUPPORT_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Indicates that the driver supports an OS-managed shader cache that stores compiled shaders in memory during the current run of the application.</p> </dd>
        /// </summary>
        /// <doc-id>mt492476</doc-id>
        /// <unmanaged>D3D11_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE</unmanaged-short>
        AutomaticInprocCache = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Indicates that the driver supports an OS-managed shader cache that stores compiled shaders on disk to accelerate future runs of the application.</p> </dd>
        /// </summary>
        /// <doc-id>mt492476</doc-id>
        /// <unmanaged>D3D11_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE</unmanaged-short>
        AutomaticDiskCache = unchecked ((System.Int32)(2))}

    /// <summary>
    /// <strong>Note</strong>??This enumeration is supported by the Direct3D 11.1 runtime, which is available on Windows?8 and later operating systems.?<p>Values that specify minimum precision levels at shader stages.</p>
    /// </summary>
    /// <doc-id>hh404495</doc-id>
    /// <unmanaged>D3D11_SHADER_MIN_PRECISION_SUPPORT</unmanaged>
    /// <unmanaged-short>D3D11_SHADER_MIN_PRECISION_SUPPORT</unmanaged-short>
    public enum ShaderMinimumPrecisionSupport : System.Int32
    {
        /// <summary>
        /// <dd> <p>Minimum precision level is 10-bit.</p> </dd>
        /// </summary>
        /// <doc-id>hh404495</doc-id>
        /// <unmanaged>D3D11_SHADER_MIN_PRECISION_10_BIT</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_MIN_PRECISION_10_BIT</unmanaged-short>
        Bit10 = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Minimum precision level is 16-bit.</p> </dd>
        /// </summary>
        /// <doc-id>hh404495</doc-id>
        /// <unmanaged>D3D11_SHADER_MIN_PRECISION_16_BIT</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_MIN_PRECISION_16_BIT</unmanaged-short>
        Bit16 = unchecked ((System.Int32)(2))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Identifies how to view a buffer resource.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is used by <strong><see cref = "SharpDX.Direct3D11.ExtendedBufferResource"/></strong> </p>
    /// </remarks>
    /// <doc-id>ff476091</doc-id>
    /// <unmanaged>D3D11_BUFFEREX_SRV_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_BUFFEREX_SRV_FLAG</unmanaged-short>
    public enum ShaderResourceViewExtendedBufferFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>View the buffer as raw. For more info about raw viewing of buffers, see Raw Views of Buffers.</p> </dd>
        /// </summary>
        /// <doc-id>ff476091</doc-id>
        /// <unmanaged>D3D11_BUFFEREX_SRV_FLAG_RAW</unmanaged>
        /// <unmanaged-short>D3D11_BUFFEREX_SRV_FLAG_RAW</unmanaged-short>
        Raw = unchecked ((System.Int32)(1)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Options that specify how to perform shader debug tracking.</p>
    /// </summary>
    /// <remarks>
    /// <p> This enumeration is used by the following methods: </p><ul> <li> <strong>ID3D11RefDefaultTrackingOptions::SetTrackingOptions</strong> </li> <li> <strong>ID3D11RefTrackingOptions::SetTrackingOptions</strong> </li> <li> <strong>ID3D11TracingDevice::SetShaderTrackingOptions</strong> </li> <li> <strong>ID3D11TracingDevice::SetShaderTrackingOptionsByType</strong> </li> </ul><strong>Note</strong>?? This API requires the Windows Software Development Kit (SDK) for Windows?8.?
    /// </remarks>
    /// <doc-id>hh404501</doc-id>
    /// <unmanaged>D3D11_SHADER_TRACKING_OPTION</unmanaged>
    /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION</unmanaged-short>
    public enum ShaderTrackingOption : System.Int32
    {
        /// <summary>
        /// <dd> <p>No debug tracking is performed.</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_IGNORE</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_IGNORE</unmanaged-short>
        Ignore = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Track the reading of uninitialized data.</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_TRACK_UNINITIALIZED</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_TRACK_UNINITIALIZED</unmanaged-short>
        TrackUninitialized = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Track read-after-write hazards.</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_TRACK_RAW</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_TRACK_RAW</unmanaged-short>
        TrackRaw = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Track write-after-read hazards.</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_TRACK_WAR</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_TRACK_WAR</unmanaged-short>
        TrackWar = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Track write-after-write hazards.</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_TRACK_WAW</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_TRACK_WAW</unmanaged-short>
        TrackWaw = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p>Track that hazards are allowed in which data is written but the value does not change.</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_ALLOW_SAME</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_ALLOW_SAME</unmanaged-short>
        AllowSame = unchecked ((System.Int32)(16)),
        /// <summary>
        /// <dd> <p>Track that only one type of atomic operation is used on an address.</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY</unmanaged-short>
        TrackAtomicConsistency = unchecked ((System.Int32)(32)),
        /// <summary>
        /// <dd> <p>Track read-after-write hazards across thread groups.</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_TRACK_RAW_ACROSS_THREADGROUPS</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_TRACK_RAW_ACROSS_THREADGROUPS</unmanaged-short>
        TrackRawAcrossThreadgroups = unchecked ((System.Int32)(64)),
        /// <summary>
        /// <dd> <p>Track write-after-read hazards across thread groups.</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_TRACK_WAR_ACROSS_THREADGROUPS</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_TRACK_WAR_ACROSS_THREADGROUPS</unmanaged-short>
        TrackWarAcrossThreadgroups = unchecked ((System.Int32)(128)),
        /// <summary>
        /// <dd> <p>Track write-after-write hazards across thread groups.</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_TRACK_WAW_ACROSS_THREADGROUPS</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_TRACK_WAW_ACROSS_THREADGROUPS</unmanaged-short>
        TrackWawAcrossThreadgroups = unchecked ((System.Int32)(256)),
        /// <summary>
        /// <dd> <p>Track that only one type of atomic operation is used on an address across thread groups.</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY_ACROSS_THREADGROUPS</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_TRACK_ATOMIC_CONSISTENCY_ACROSS_THREADGROUPS</unmanaged-short>
        TrackAtomicConsistencyAcrossThreadgroups = unchecked ((System.Int32)(512)),
        /// <summary>
        /// <dd> <p>Track hazards that are specific to unordered access views (UAVs).</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_UAV_SPECIFIC_FLAGS</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_UAV_SPECIFIC_FLAGS</unmanaged-short>
        UnorderedAccessViewSpecificFlags = unchecked ((System.Int32)(960)),
        /// <summary>
        /// <dd> <p>Track all hazards.</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS</unmanaged-short>
        AllHazards = unchecked ((System.Int32)(1006)),
        /// <summary>
        /// <dd> <p>Track all hazards and track that hazards are allowed in which data is written but the value does not change.</p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS_ALLOWING_SAME</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_ALL_HAZARDS_ALLOWING_SAME</unmanaged-short>
        AllHazardsAllowingSame = unchecked ((System.Int32)(1022)),
        /// <summary>
        /// <dd> <p> All of the preceding tracking options are set except <strong>D3D11_SHADER_TRACKING_OPTION_IGNORE</strong>. </p> </dd>
        /// </summary>
        /// <doc-id>hh404501</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_OPTION_ALL_OPTIONS</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_OPTION_ALL_OPTIONS</unmanaged-short>
        AllOptions = unchecked ((System.Int32)(1023))}

    /// <summary>
    /// <p>Indicates which resource types to track.</p>
    /// </summary>
    /// <remarks>
    /// <p>The <strong>ID3D11TracingDevice::SetShaderTrackingOptionsByType</strong> or <strong>ID3D11RefDefaultTrackingOptions::SetTrackingOptions</strong> method tracks a specific type of resource.</p><strong>Note</strong>??This API requires the Windows Software Development Kit (SDK) for Windows?8.?
    /// </remarks>
    /// <doc-id>hh404503</doc-id>
    /// <unmanaged>D3D11_SHADER_TRACKING_RESOURCE_TYPE</unmanaged>
    /// <unmanaged-short>D3D11_SHADER_TRACKING_RESOURCE_TYPE</unmanaged-short>
    public enum ShaderTrackingResourceType : System.Int32
    {
        /// <summary>
        /// <dd> <p>No resource types are tracked.</p> </dd>
        /// </summary>
        /// <doc-id>hh404503</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_RESOURCE_TYPE_NONE</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_RESOURCE_TYPE_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Track device memory that is created with unordered access view (UAV) bind flags.</p> </dd>
        /// </summary>
        /// <doc-id>hh404503</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_RESOURCE_TYPE_UAV_DEVICEMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_RESOURCE_TYPE_UAV_DEVICEMEMORY</unmanaged-short>
        UnorderedAccessViewDevicememory = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Track device memory that is created without UAV bind flags.</p> </dd>
        /// </summary>
        /// <doc-id>hh404503</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_RESOURCE_TYPE_NON_UAV_DEVICEMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_RESOURCE_TYPE_NON_UAV_DEVICEMEMORY</unmanaged-short>
        NonUnorderedAccessViewDevicememory = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Track all device memory.</p> </dd>
        /// </summary>
        /// <doc-id>hh404503</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL_DEVICEMEMORY</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL_DEVICEMEMORY</unmanaged-short>
        AllDevicememory = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>Track all shaders that use group shared memory.</p> </dd>
        /// </summary>
        /// <doc-id>hh404503</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_RESOURCE_TYPE_GROUPSHARED_MEMORY</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_RESOURCE_TYPE_GROUPSHARED_MEMORY</unmanaged-short>
        GroupsharedMemory = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Track all device memory except device memory that is created without UAV bind flags.</p> </dd>
        /// </summary>
        /// <doc-id>hh404503</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL_SHARED_MEMORY</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL_SHARED_MEMORY</unmanaged-short>
        AllSharedMemory = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p>Track all device memory except device memory that is created with UAV bind flags.</p> </dd>
        /// </summary>
        /// <doc-id>hh404503</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_RESOURCE_TYPE_GROUPSHARED_NON_UAV</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_RESOURCE_TYPE_GROUPSHARED_NON_UAV</unmanaged-short>
        GroupsharedNonUnorderedAccessView = unchecked ((System.Int32)(6)),
        /// <summary>
        /// <dd> <p>Track all memory on the device.</p> </dd>
        /// </summary>
        /// <doc-id>hh404503</doc-id>
        /// <unmanaged>D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL</unmanaged>
        /// <unmanaged-short>D3D11_SHADER_TRACKING_RESOURCE_TYPE_ALL</unmanaged-short>
        All = unchecked ((System.Int32)(7))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>D3D11_SHARED_RESOURCE_TIER</unmanaged>
    /// <unmanaged-short>D3D11_SHARED_RESOURCE_TIER</unmanaged-short>
    public enum SharedResourceTier : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_SHARED_RESOURCE_TIER_0</unmanaged>
        /// <unmanaged-short>D3D11_SHARED_RESOURCE_TIER_0</unmanaged-short>
        Tier0 = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_SHARED_RESOURCE_TIER_1</unmanaged>
        /// <unmanaged-short>D3D11_SHARED_RESOURCE_TIER_1</unmanaged-short>
        Tier1 = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_SHARED_RESOURCE_TIER_2</unmanaged>
        /// <unmanaged-short>D3D11_SHARED_RESOURCE_TIER_2</unmanaged-short>
        Tier2 = unchecked ((System.Int32)(2))}

    /// <summary>
    /// <p>Specifies a multi-sample pattern type.</p>
    /// </summary>
    /// <remarks>
    /// <p>An app calls <strong>ID3D11Device::CheckMultisampleQualityLevels</strong> to get the number of quality levels available during multisampling. A 0 quality level means the hardware does not support multisampling for the particular format. If the number of quality levels is greater than 0 and the hardware supports the fixed sample patterns for the sample count, the app can request the fixed patterns by specifying quality level as either <strong>D3D11_STANDARD_MULTISAMPLE_PATTERN</strong> or <strong>D3D11_CENTER_MULTISAMPLE_PATTERN</strong>. The app can call <strong>ID3D11Device::CheckFormatSupport</strong> to check for support of the standard fixed patterns. If the hardware only supports the fixed patterns but no additional vendor-specific patterns, the runtime can report the number of quality levels as 1, and the hardware can pretend 0 quality level behaves the same as quality level equal to D3D11_STANDARD_MULTISAMPLE_PATTERN.</p><p>The runtime defines the following standard sample patterns for 1(trivial),  2, 4, 8, and 16 sample counts. Hardware must support 1, 4, and 8 sample counts. Hardware vendors can expose more sample counts beyond these. However, if vendors support 2, 4(required), 8(required), or 16, they must also support the corresponding standard pattern or center pattern for each of those sample counts.</p><p></p><p></p><p></p>
    /// </remarks>
    /// <doc-id>ff476218</doc-id>
    /// <unmanaged>D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS</unmanaged>
    /// <unmanaged-short>D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS</unmanaged-short>
    public enum StandardMultisampleQualityLevels : System.Int32
    {
        /// <summary>
        /// <dd> <p>Pre-defined multi-sample patterns required for Direct3D?11 and Direct3D?10.1 hardware.</p> </dd>
        /// </summary>
        /// <doc-id>ff476218</doc-id>
        /// <unmanaged>D3D11_STANDARD_MULTISAMPLE_PATTERN</unmanaged>
        /// <unmanaged-short>D3D11_STANDARD_MULTISAMPLE_PATTERN</unmanaged-short>
        StandardMultisamplePattern = unchecked ((System.Int32)(-1)),
        /// <summary>
        /// <dd> <p>Pattern where all of the samples are located at the pixel center.</p> </dd>
        /// </summary>
        /// <doc-id>ff476218</doc-id>
        /// <unmanaged>D3D11_CENTER_MULTISAMPLE_PATTERN</unmanaged>
        /// <unmanaged-short>D3D11_CENTER_MULTISAMPLE_PATTERN</unmanaged-short>
        CenterMultisamplePattern = unchecked ((System.Int32)(-2))}

    /// <summary>
    /// <p>The stencil operations that can be performed during depth-stencil testing.</p>
    /// </summary>
    /// <doc-id>ff476219</doc-id>
    /// <unmanaged>D3D11_STENCIL_OP</unmanaged>
    /// <unmanaged-short>D3D11_STENCIL_OP</unmanaged-short>
    public enum StencilOperation : System.Int32
    {
        /// <summary>
        /// <dd> <p>Keep the existing stencil data.</p> </dd>
        /// </summary>
        /// <doc-id>ff476219</doc-id>
        /// <unmanaged>D3D11_STENCIL_OP_KEEP</unmanaged>
        /// <unmanaged-short>D3D11_STENCIL_OP_KEEP</unmanaged-short>
        Keep = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Set the stencil data to 0.</p> </dd>
        /// </summary>
        /// <doc-id>ff476219</doc-id>
        /// <unmanaged>D3D11_STENCIL_OP_ZERO</unmanaged>
        /// <unmanaged-short>D3D11_STENCIL_OP_ZERO</unmanaged-short>
        Zero = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Set the stencil data to the reference value set by calling <strong>ID3D11DeviceContext::OMSetDepthStencilState</strong>.</p> </dd>
        /// </summary>
        /// <doc-id>ff476219</doc-id>
        /// <unmanaged>D3D11_STENCIL_OP_REPLACE</unmanaged>
        /// <unmanaged-short>D3D11_STENCIL_OP_REPLACE</unmanaged-short>
        Replace = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>Increment the stencil value by 1, and clamp the result.</p> </dd>
        /// </summary>
        /// <doc-id>ff476219</doc-id>
        /// <unmanaged>D3D11_STENCIL_OP_INCR_SAT</unmanaged>
        /// <unmanaged-short>D3D11_STENCIL_OP_INCR_SAT</unmanaged-short>
        IncrementAndClamp = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Decrement the stencil value by 1, and clamp the result.</p> </dd>
        /// </summary>
        /// <doc-id>ff476219</doc-id>
        /// <unmanaged>D3D11_STENCIL_OP_DECR_SAT</unmanaged>
        /// <unmanaged-short>D3D11_STENCIL_OP_DECR_SAT</unmanaged-short>
        DecrementAndClamp = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p>Invert the stencil data.</p> </dd>
        /// </summary>
        /// <doc-id>ff476219</doc-id>
        /// <unmanaged>D3D11_STENCIL_OP_INVERT</unmanaged>
        /// <unmanaged-short>D3D11_STENCIL_OP_INVERT</unmanaged-short>
        Invert = unchecked ((System.Int32)(6)),
        /// <summary>
        /// <dd> <p>Increment the stencil value by 1, and wrap the result if necessary.</p> </dd>
        /// </summary>
        /// <doc-id>ff476219</doc-id>
        /// <unmanaged>D3D11_STENCIL_OP_INCR</unmanaged>
        /// <unmanaged-short>D3D11_STENCIL_OP_INCR</unmanaged-short>
        Increment = unchecked ((System.Int32)(7)),
        /// <summary>
        /// <dd> <p>Decrement the stencil value by 1, and wrap the result if necessary.</p> </dd>
        /// </summary>
        /// <doc-id>ff476219</doc-id>
        /// <unmanaged>D3D11_STENCIL_OP_DECR</unmanaged>
        /// <unmanaged-short>D3D11_STENCIL_OP_DECR</unmanaged-short>
        Decrement = unchecked ((System.Int32)(8))}

    /// <summary>
    /// <p>Identify a technique for resolving texture coordinates that are outside of the boundaries of a texture.</p>
    /// </summary>
    /// <doc-id>ff476256</doc-id>
    /// <unmanaged>D3D11_TEXTURE_ADDRESS_MODE</unmanaged>
    /// <unmanaged-short>D3D11_TEXTURE_ADDRESS_MODE</unmanaged-short>
    public enum TextureAddressMode : System.Int32
    {
        /// <summary>
        /// <dd> <p>Tile the texture at every (u,v) integer junction. For example, for u values between 0 and 3, the texture is repeated three times.</p> </dd>
        /// </summary>
        /// <doc-id>ff476256</doc-id>
        /// <unmanaged>D3D11_TEXTURE_ADDRESS_WRAP</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURE_ADDRESS_WRAP</unmanaged-short>
        Wrap = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Flip the texture at every (u,v) integer junction. For u values between 0 and 1, for example, the texture is addressed normally; between 1 and 2, the texture is flipped (mirrored); between 2 and 3, the texture is normal again; and so on. </p> </dd>
        /// </summary>
        /// <doc-id>ff476256</doc-id>
        /// <unmanaged>D3D11_TEXTURE_ADDRESS_MIRROR</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURE_ADDRESS_MIRROR</unmanaged-short>
        Mirror = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Texture coordinates outside the range [0.0, 1.0] are set to the texture color at 0.0 or 1.0, respectively.</p> </dd>
        /// </summary>
        /// <doc-id>ff476256</doc-id>
        /// <unmanaged>D3D11_TEXTURE_ADDRESS_CLAMP</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURE_ADDRESS_CLAMP</unmanaged-short>
        Clamp = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>Texture coordinates outside the range [0.0, 1.0] are set to the border color specified in <strong><see cref = "SharpDX.Direct3D11.SamplerStateDescription"/></strong> or HLSL code.</p> </dd>
        /// </summary>
        /// <doc-id>ff476256</doc-id>
        /// <unmanaged>D3D11_TEXTURE_ADDRESS_BORDER</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURE_ADDRESS_BORDER</unmanaged-short>
        Border = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Similar to D3D11_TEXTURE_ADDRESS_MIRROR and D3D11_TEXTURE_ADDRESS_CLAMP. Takes the absolute value of the texture coordinate (thus, mirroring around 0), and then clamps to the maximum value.</p> </dd>
        /// </summary>
        /// <doc-id>ff476256</doc-id>
        /// <unmanaged>D3D11_TEXTURE_ADDRESS_MIRROR_ONCE</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURE_ADDRESS_MIRROR_ONCE</unmanaged-short>
        MirrorOnce = unchecked ((System.Int32)(5))}

    /// <summary>
    /// <p>The different faces of a cube texture.</p>
    /// </summary>
    /// <doc-id>ff476255</doc-id>
    /// <unmanaged>D3D11_TEXTURECUBE_FACE</unmanaged>
    /// <unmanaged-short>D3D11_TEXTURECUBE_FACE</unmanaged-short>
    public enum TextureCubeFace : System.Int32
    {
        /// <summary>
        /// <dd> <p>Positive X face.</p> </dd>
        /// </summary>
        /// <doc-id>ff476255</doc-id>
        /// <unmanaged>D3D11_TEXTURECUBE_FACE_POSITIVE_X</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURECUBE_FACE_POSITIVE_X</unmanaged-short>
        PositiveX = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Negative X face.</p> </dd>
        /// </summary>
        /// <doc-id>ff476255</doc-id>
        /// <unmanaged>D3D11_TEXTURECUBE_FACE_NEGATIVE_X</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURECUBE_FACE_NEGATIVE_X</unmanaged-short>
        NegativeX = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Positive Y face.</p> </dd>
        /// </summary>
        /// <doc-id>ff476255</doc-id>
        /// <unmanaged>D3D11_TEXTURECUBE_FACE_POSITIVE_Y</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURECUBE_FACE_POSITIVE_Y</unmanaged-short>
        PositiveY = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Negative Y face.</p> </dd>
        /// </summary>
        /// <doc-id>ff476255</doc-id>
        /// <unmanaged>D3D11_TEXTURECUBE_FACE_NEGATIVE_Y</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURECUBE_FACE_NEGATIVE_Y</unmanaged-short>
        NegativeY = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>Positive Z face.</p> </dd>
        /// </summary>
        /// <doc-id>ff476255</doc-id>
        /// <unmanaged>D3D11_TEXTURECUBE_FACE_POSITIVE_Z</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURECUBE_FACE_POSITIVE_Z</unmanaged-short>
        PositiveZ = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Negative Z face.</p> </dd>
        /// </summary>
        /// <doc-id>ff476255</doc-id>
        /// <unmanaged>D3D11_TEXTURECUBE_FACE_NEGATIVE_Z</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURECUBE_FACE_NEGATIVE_Z</unmanaged-short>
        NegativeZ = unchecked ((System.Int32)(5))}

    /// <summary>
    /// <p>Specifies texture layout options.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration controls the swizzle pattern of default textures and enable map support on default textures.  Callers must query <strong><see cref = "SharpDX.Direct3D11.FeatureDataD3D11Options2"/></strong> to ensure that each option is supported.</p><p>The standard swizzle formats applies within each page-sized chunk, and pages are laid out in linear order with respect to one another.  A 16-bit interleave pattern defines the conversion from pre-swizzled intra-page location to the post-swizzled location.  </p><p>To demonstrate, consider the 32bpp swizzle format above.  This is represented by the following interleave masks, where bits on the left are most-significant.</p><code>UINT xBytesMask = 1010 1010 1000 1111
    /// UINT yMask =      0101 0101 0111 0000
    /// </code><p>To compute the swizzled address, the following code could be used (where the _pdep_u32 instruction is supported):</p><code>UINT swizzledOffset = resourceBaseOffset + _pdep_u32(xOffset, xBytesMask) +  _pdep_u32(yOffset, yBytesMask);
    /// </code>
    /// </remarks>
    /// <doc-id>dn899168</doc-id>
    /// <unmanaged>D3D11_TEXTURE_LAYOUT</unmanaged>
    /// <unmanaged-short>D3D11_TEXTURE_LAYOUT</unmanaged-short>
    public enum TextureLayout : System.Int32
    {
        /// <summary>
        /// <dd> <p>The texture layout is undefined, and is selected by the driver.</p> </dd>
        /// </summary>
        /// <doc-id>dn899168</doc-id>
        /// <unmanaged>D3D11_TEXTURE_LAYOUT_UNDEFINED</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURE_LAYOUT_UNDEFINED</unmanaged-short>
        Undefined = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Data for the texture is stored in row major (sometimes called pitch-linear) order.</p> </dd>
        /// </summary>
        /// <doc-id>dn899168</doc-id>
        /// <unmanaged>D3D11_TEXTURE_LAYOUT_ROW_MAJOR</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURE_LAYOUT_ROW_MAJOR</unmanaged-short>
        RowMajor = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>A default texture uses the standardized swizzle pattern.</p> </dd>
        /// </summary>
        /// <doc-id>dn899168</doc-id>
        /// <unmanaged>D3D11_TEXTURE_LAYOUT_64K_STANDARD_SWIZZLE</unmanaged>
        /// <unmanaged-short>D3D11_TEXTURE_LAYOUT_64K_STANDARD_SWIZZLE</unmanaged-short>
        StandardSwizzle64kb = unchecked ((System.Int32)(2))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Identifies how to copy a tile.</p>
    /// </summary>
    /// <doc-id>dn280439</doc-id>
    /// <unmanaged>D3D11_TILE_COPY_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_TILE_COPY_FLAG</unmanaged-short>
    public enum TileCopyFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>Indicates that the GPU isn't currently referencing any of the  portions of destination memory being written.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>dn280439</doc-id>
        /// <unmanaged>D3D11_TILE_COPY_NO_OVERWRITE</unmanaged>
        /// <unmanaged-short>D3D11_TILE_COPY_NO_OVERWRITE</unmanaged-short>
        NoOverwrite = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Indicates that the <strong>ID3D11DeviceContext2::CopyTiles</strong> operation involves copying a linear buffer to a swizzled tiled resource. This means to copy tile data from the 
        /// specified buffer location, reading tiles sequentially,
        /// to the specified tile region (in x,y,z order if the region is a box), swizzling to optimal hardware memory layout as needed.
        /// In this <strong>ID3D11DeviceContext2::CopyTiles</strong> call, you specify the source data with the  <em>pBuffer</em> parameter and the destination with the <em>pTiledResource</em> parameter.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>dn280439</doc-id>
        /// <unmanaged>D3D11_TILE_COPY_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE</unmanaged>
        /// <unmanaged-short>D3D11_TILE_COPY_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE</unmanaged-short>
        LinearBufferToSwizzledTiledResource = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Indicates that the <strong>ID3D11DeviceContext2::CopyTiles</strong> operation involves copying a swizzled tiled resource to a linear buffer. This means to copy tile data from the tile region, reading tiles sequentially (in x,y,z order if the region is a box),
        /// to the specified buffer location, deswizzling to linear memory layout as needed.
        /// In this <strong>ID3D11DeviceContext2::CopyTiles</strong> call, you specify the source data with the <em>pTiledResource</em> parameter and the destination with the  <em>pBuffer</em> parameter.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>dn280439</doc-id>
        /// <unmanaged>D3D11_TILE_COPY_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_TILE_COPY_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER</unmanaged-short>
        SwizzledTiledResourceToLinearBuffer = unchecked ((System.Int32)(4)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Indicates the tier level at which tiled resources are supported.</p>
    /// </summary>
    /// <doc-id>dn280435</doc-id>
    /// <unmanaged>D3D11_TILED_RESOURCES_TIER</unmanaged>
    /// <unmanaged-short>D3D11_TILED_RESOURCES_TIER</unmanaged-short>
    public enum TiledResourcesTier : System.Int32
    {
        /// <summary>
        /// <dd> <p>Tiled resources are not supported.</p> </dd>
        /// </summary>
        /// <doc-id>dn280435</doc-id>
        /// <unmanaged>D3D11_TILED_RESOURCES_NOT_SUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_TILED_RESOURCES_NOT_SUPPORTED</unmanaged-short>
        NotSupported = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p> Tier_1 tiled resources are supported.</p> <p> The device supports calls to <strong>CreateTexture2D</strong> and so on with the <strong>D3D11_RESOURCE_MISC_TILED</strong> flag. </p> <p> The device supports calls to <strong>CreateBuffer</strong> with the <strong>D3D11_RESOURCE_MISC_TILE_POOL</strong> flag. </p> <p> If you access tiles (read or write) that are <strong><c>null</c></strong>-mapped, you get undefined behavior, which includes device-removed.  Apps can map all tiles to a single "default" tile to avoid this condition. </p> </dd>
        /// </summary>
        /// <doc-id>dn280435</doc-id>
        /// <unmanaged>D3D11_TILED_RESOURCES_TIER_1</unmanaged>
        /// <unmanaged-short>D3D11_TILED_RESOURCES_TIER_1</unmanaged-short>
        Tier1 = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p> Tier_2 tiled resources are supported. </p> <p> Superset of Tier_1 functionality, which includes this additional support: </p> <ul> <li> On Tier_1, if the size of a texture mipmap level is an integer multiple of the standard tile shape for its format, it is guaranteed to be nonpacked. On Tier_2, this guarantee is expanded to include mipmap levels whose size is at least one standard tile shape. For more info, see <strong><see cref = "SharpDX.Direct3D11.PackedMipDescription"/></strong>. </li> <li> Shader instructions are available for clamping level-of-detail (LOD) and for obtaining status about the shader operation. For info about one of these shader instructions, see <strong>Sample(S,float,int,float,uint)</strong>. </li> <li> Reading from <strong><c>null</c></strong>-mapped tiles treat that sampled value as zero.  Writes to <strong><c>null</c></strong>-mapped tiles are discarded. </li> </ul> </dd>
        /// </summary>
        /// <doc-id>dn280435</doc-id>
        /// <unmanaged>D3D11_TILED_RESOURCES_TIER_2</unmanaged>
        /// <unmanaged-short>D3D11_TILED_RESOURCES_TIER_2</unmanaged-short>
        Tier2 = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p> Tier_3 tiled resources are supported. </p> <p> Superset of Tier_2 functionality, Tier 3 is essentially Tier 2 but with the additional support of Texture3D for Tiled Resources.</p> </dd>
        /// </summary>
        /// <doc-id>dn280435</doc-id>
        /// <unmanaged>D3D11_TILED_RESOURCES_TIER_3</unmanaged>
        /// <unmanaged-short>D3D11_TILED_RESOURCES_TIER_3</unmanaged-short>
        Tier3 = unchecked ((System.Int32)(3))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Identifies how to perform a tile-mapping operation.</p>
    /// </summary>
    /// <doc-id>dn280440</doc-id>
    /// <unmanaged>D3D11_TILE_MAPPING_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_TILE_MAPPING_FLAG</unmanaged-short>
    public enum TileMappingFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>Indicates that no overwriting of tiles occurs in the tile-mapping operation.</p> </dd>
        /// </summary>
        /// <doc-id>dn280440</doc-id>
        /// <unmanaged>D3D11_TILE_MAPPING_NO_OVERWRITE</unmanaged>
        /// <unmanaged-short>D3D11_TILE_MAPPING_NO_OVERWRITE</unmanaged-short>
        NoOverwrite = unchecked ((System.Int32)(1)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Specifies a range of tile mappings to use with <strong>ID3D11DeviceContext2::UpdateTiles</strong>.</p>
    /// </summary>
    /// <doc-id>dn280441</doc-id>
    /// <unmanaged>D3D11_TILE_RANGE_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_TILE_RANGE_FLAG</unmanaged-short>
    public enum TileRangeFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>dn280441</doc-id>
        /// <unmanaged>D3D11_TILE_RANGE_NULL</unmanaged>
        /// <unmanaged-short>D3D11_TILE_RANGE_NULL</unmanaged-short>
        Null = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>dn280441</doc-id>
        /// <unmanaged>D3D11_TILE_RANGE_SKIP</unmanaged>
        /// <unmanaged-short>D3D11_TILE_RANGE_SKIP</unmanaged-short>
        Skip = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>dn280441</doc-id>
        /// <unmanaged>D3D11_TILE_RANGE_REUSE_SINGLE_TILE</unmanaged>
        /// <unmanaged-short>D3D11_TILE_RANGE_REUSE_SINGLE_TILE</unmanaged-short>
        ReuseSingleTile = unchecked ((System.Int32)(4)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    [System.FlagsAttribute]
    /// <summary>
    /// <p>Identifies unordered-access view options for a buffer resource.</p>
    /// </summary>
    /// <doc-id>ff476096</doc-id>
    /// <unmanaged>D3D11_BUFFER_UAV_FLAG</unmanaged>
    /// <unmanaged-short>D3D11_BUFFER_UAV_FLAG</unmanaged-short>
    public enum UnorderedAccessViewBufferFlags : System.Int32
    {
        /// <summary>
        /// <dd> <p>Resource contains raw, unstructured data.  Requires the UAV format to be DXGI_FORMAT_R32_TYPELESS. For more info about raw viewing of buffers, see Raw Views of Buffers.</p> </dd>
        /// </summary>
        /// <doc-id>ff476096</doc-id>
        /// <unmanaged>D3D11_BUFFER_UAV_FLAG_RAW</unmanaged>
        /// <unmanaged-short>D3D11_BUFFER_UAV_FLAG_RAW</unmanaged-short>
        Raw = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Allow data to be appended to the end of the buffer.  <strong>D3D11_BUFFER_UAV_FLAG_APPEND</strong> flag must also be used for  any view that will be used as a AppendStructuredBuffer or a ConsumeStructuredBuffer.  Requires the UAV format to be DXGI_FORMAT_UNKNOWN.</p> </dd>
        /// </summary>
        /// <doc-id>ff476096</doc-id>
        /// <unmanaged>D3D11_BUFFER_UAV_FLAG_APPEND</unmanaged>
        /// <unmanaged-short>D3D11_BUFFER_UAV_FLAG_APPEND</unmanaged-short>
        Append = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Adds a counter to the unordered-access-view buffer.  <strong>D3D11_BUFFER_UAV_FLAG_COUNTER</strong> can only be used on a UAV that is a  RWStructuredBuffer and it enables the functionality needed for the <strong>IncrementCounter</strong> and <strong>DecrementCounter</strong> methods in HLSL.  Requires the UAV format to be DXGI_FORMAT_UNKNOWN.</p> </dd>
        /// </summary>
        /// <doc-id>ff476096</doc-id>
        /// <unmanaged>D3D11_BUFFER_UAV_FLAG_COUNTER</unmanaged>
        /// <unmanaged-short>D3D11_BUFFER_UAV_FLAG_COUNTER</unmanaged-short>
        Counter = unchecked ((System.Int32)(4)),
        /// <summary>
        /// None
        /// </summary>
        /// <unmanaged>None</unmanaged>
        /// <unmanaged-short>None</unmanaged-short>
        None = unchecked ((System.Int32)(0))}

    /// <summary>
    /// <p>Unordered-access view options.</p>
    /// </summary>
    /// <remarks>
    /// <p> This enumeration is used by a unordered access-view description (see <strong><see cref = "SharpDX.Direct3D11.UnorderedAccessViewDescription"/></strong>). </p>
    /// </remarks>
    /// <doc-id>ff476257</doc-id>
    /// <unmanaged>D3D11_UAV_DIMENSION</unmanaged>
    /// <unmanaged-short>D3D11_UAV_DIMENSION</unmanaged-short>
    public enum UnorderedAccessViewDimension : System.Int32
    {
        /// <summary>
        /// <dd> <p>The view type is unknown.</p> </dd>
        /// </summary>
        /// <doc-id>ff476257</doc-id>
        /// <unmanaged>D3D11_UAV_DIMENSION_UNKNOWN</unmanaged>
        /// <unmanaged-short>D3D11_UAV_DIMENSION_UNKNOWN</unmanaged-short>
        Unknown = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>View the resource as a buffer.</p> </dd>
        /// </summary>
        /// <doc-id>ff476257</doc-id>
        /// <unmanaged>D3D11_UAV_DIMENSION_BUFFER</unmanaged>
        /// <unmanaged-short>D3D11_UAV_DIMENSION_BUFFER</unmanaged-short>
        Buffer = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>View the resource as a 1D texture.</p> </dd>
        /// </summary>
        /// <doc-id>ff476257</doc-id>
        /// <unmanaged>D3D11_UAV_DIMENSION_TEXTURE1D</unmanaged>
        /// <unmanaged-short>D3D11_UAV_DIMENSION_TEXTURE1D</unmanaged-short>
        Texture1D = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>View the resource as a 1D texture array.</p> </dd>
        /// </summary>
        /// <doc-id>ff476257</doc-id>
        /// <unmanaged>D3D11_UAV_DIMENSION_TEXTURE1DARRAY</unmanaged>
        /// <unmanaged-short>D3D11_UAV_DIMENSION_TEXTURE1DARRAY</unmanaged-short>
        Texture1DArray = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>View the resource as a 2D texture.</p> </dd>
        /// </summary>
        /// <doc-id>ff476257</doc-id>
        /// <unmanaged>D3D11_UAV_DIMENSION_TEXTURE2D</unmanaged>
        /// <unmanaged-short>D3D11_UAV_DIMENSION_TEXTURE2D</unmanaged-short>
        Texture2D = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>View the resource as a 2D texture array.</p> </dd>
        /// </summary>
        /// <doc-id>ff476257</doc-id>
        /// <unmanaged>D3D11_UAV_DIMENSION_TEXTURE2DARRAY</unmanaged>
        /// <unmanaged-short>D3D11_UAV_DIMENSION_TEXTURE2DARRAY</unmanaged-short>
        Texture2DArray = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p>View the resource as a 3D texture array.</p> </dd>
        /// </summary>
        /// <doc-id>ff476257</doc-id>
        /// <unmanaged>D3D11_UAV_DIMENSION_TEXTURE3D</unmanaged>
        /// <unmanaged-short>D3D11_UAV_DIMENSION_TEXTURE3D</unmanaged-short>
        Texture3D = unchecked ((System.Int32)(8))}

    /// <summary>
    /// <p>Specifies how to access a resource that is used in a video decoding output view.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is used with the <strong><see cref = "SharpDX.Direct3D11.VideoDecoderOutputViewDescription"/></strong> structure.</p>
    /// </remarks>
    /// <doc-id>hh447636</doc-id>
    /// <unmanaged>D3D11_VDOV_DIMENSION</unmanaged>
    /// <unmanaged-short>D3D11_VDOV_DIMENSION</unmanaged-short>
    public enum VdovDimension : System.Int32
    {
        /// <summary>
        /// <dd> <p>Not a valid value.</p> </dd>
        /// </summary>
        /// <doc-id>hh447636</doc-id>
        /// <unmanaged>D3D11_VDOV_DIMENSION_UNKNOWN</unmanaged>
        /// <unmanaged-short>D3D11_VDOV_DIMENSION_UNKNOWN</unmanaged-short>
        Unknown = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as a 2D texture.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447636</doc-id>
        /// <unmanaged>D3D11_VDOV_DIMENSION_TEXTURE2D</unmanaged>
        /// <unmanaged-short>D3D11_VDOV_DIMENSION_TEXTURE2D</unmanaged-short>
        Texture2D = unchecked ((System.Int32)(1))}

    /// <summary>
    /// <p>Specifies a type of compressed buffer for decoding.</p>
    /// </summary>
    /// <doc-id>hh447642</doc-id>
    /// <unmanaged>D3D11_VIDEO_DECODER_BUFFER_TYPE</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_TYPE</unmanaged-short>
    public enum VideoDecoderBufferType : System.Int32
    {
        /// <summary>
        /// <dd> <p>Picture decoding parameter buffer.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447642</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_BUFFER_PICTURE_PARAMETERS</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_PICTURE_PARAMETERS</unmanaged-short>
        PictureParameters = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Macroblock control command buffer.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447642</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_BUFFER_MACROBLOCK_CONTROL</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_MACROBLOCK_CONTROL</unmanaged-short>
        MacroblockControl = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Residual difference block data buffer.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447642</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_BUFFER_RESIDUAL_DIFFERENCE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_RESIDUAL_DIFFERENCE</unmanaged-short>
        ResidualDifference = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Deblocking filter control command buffer.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447642</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_BUFFER_DEBLOCKING_CONTROL</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_DEBLOCKING_CONTROL</unmanaged-short>
        DeblockingControl = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>Inverse quantization matrix buffer.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447642</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_BUFFER_INVERSE_QUANTIZATION_MATRIX</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_INVERSE_QUANTIZATION_MATRIX</unmanaged-short>
        InverseQuantizationMatrix = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Slice-control buffer.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447642</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL</unmanaged-short>
        SliceControl = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p>Bitstream data buffer.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447642</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_BUFFER_BITSTREAM</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_BITSTREAM</unmanaged-short>
        Bitstream = unchecked ((System.Int32)(6)),
        /// <summary>
        /// <dd> <p>Motion vector buffer.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447642</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_BUFFER_MOTION_VECTOR</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_MOTION_VECTOR</unmanaged-short>
        MotionVector = unchecked ((System.Int32)(7)),
        /// <summary>
        /// <dd> <p>Film grain synthesis data buffer.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>hh447642</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_BUFFER_FILM_GRAIN</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_BUFFER_FILM_GRAIN</unmanaged-short>
        FilmGrain = unchecked ((System.Int32)(8))}

    /// <summary>
    /// <p>Specifies capabilities of the video decoder.</p>
    /// </summary>
    /// <doc-id>dn894120</doc-id>
    /// <unmanaged>D3D11_VIDEO_DECODER_CAPS</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_DECODER_CAPS</unmanaged-short>
    public enum VideoDecoderCaps : System.Int32
    {
        /// <summary>
        /// <dd> <p>Indicates that the graphics driver supports at least a subset of downsampling operations.</p> </dd>
        /// </summary>
        /// <doc-id>dn894120</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE</unmanaged-short>
        Downsample = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Indicates that the decoding hardware cannot support the decode operation in real-time. Decoding is still supported for transcoding scenarios. With this capability, it is possible that decoding can occur in real-time if downsampling is enabled.
        /// </p> </dd>
        /// </summary>
        /// <doc-id>dn894120</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_CAPS_NON_REAL_TIME</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_CAPS_NON_REAL_TIME</unmanaged-short>
        NonRealTime = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Indicates that the driver supports changing down sample parameters after the initial down sample parameters have been applied. For more information, see <strong>ID3D11VideoContext1::DecoderUpdateDownsampling</strong>.</p> </dd>
        /// </summary>
        /// <doc-id>dn894120</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE_DYNAMIC</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE_DYNAMIC</unmanaged-short>
        DownsampleDynamic = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>dn894120</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE_REQUIRED</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE_REQUIRED</unmanaged-short>
        DownsampleRequired = unchecked ((System.Int32)(8)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>dn894120</doc-id>
        /// <unmanaged>D3D11_VIDEO_DECODER_CAPS_UNSUPPORTED</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_CAPS_UNSUPPORTED</unmanaged-short>
        Unsupported = unchecked ((System.Int32)(16))}

    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT</unmanaged-short>
    public enum VideoDecoderHistogramComponent : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_Y</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_Y</unmanaged-short>
        Y = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_U</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_U</unmanaged-short>
        U = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_V</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_V</unmanaged-short>
        V = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_R</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_R</unmanaged-short>
        R = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_G</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_G</unmanaged-short>
        G = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_B</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_B</unmanaged-short>
        B = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_A</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_A</unmanaged-short>
        A = unchecked ((System.Int32)(3))}

    [System.FlagsAttribute]
    /// <summary>
    /// No documentation.
    /// </summary>
    /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS</unmanaged-short>
    public enum VideoDecoderHistogramComponentFlags : System.Int32
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_NONE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(0)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_Y</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_Y</unmanaged-short>
        Y = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_U</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_U</unmanaged-short>
        U = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_V</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_V</unmanaged-short>
        V = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_R</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_R</unmanaged-short>
        R = unchecked ((System.Int32)(1)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_G</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_G</unmanaged-short>
        G = unchecked ((System.Int32)(2)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_B</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_B</unmanaged-short>
        B = unchecked ((System.Int32)(4)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <unmanaged>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_A</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAG_A</unmanaged-short>
        A = unchecked ((System.Int32)(8))}

    /// <summary>
    /// <p>Describes how a video stream is interlaced.</p>
    /// </summary>
    /// <doc-id>hh447647</doc-id>
    /// <unmanaged>D3D11_VIDEO_FRAME_FORMAT</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_FRAME_FORMAT</unmanaged-short>
    public enum VideoFrameFormat : System.Int32
    {
        /// <summary>
        /// <dd> <p>Frames are progressive.</p> </dd>
        /// </summary>
        /// <doc-id>hh447647</doc-id>
        /// <unmanaged>D3D11_VIDEO_FRAME_FORMAT_PROGRESSIVE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_FRAME_FORMAT_PROGRESSIVE</unmanaged-short>
        Progressive = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Frames are interlaced. The top field of each frame is displayed first. </p> </dd>
        /// </summary>
        /// <doc-id>hh447647</doc-id>
        /// <unmanaged>D3D11_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST</unmanaged-short>
        InterlacedTopFieldFirst = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Frame are interlaced. The bottom field of each frame is displayed first.</p> </dd>
        /// </summary>
        /// <doc-id>hh447647</doc-id>
        /// <unmanaged>D3D11_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST</unmanaged-short>
        InterlacedBottomFieldFirst = unchecked ((System.Int32)(2))}

    /// <summary>
    /// <p>Specifies the alpha fill mode for video processing.</p>
    /// </summary>
    /// <doc-id>hh447648</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE</unmanaged-short>
    public enum VideoProcessorAlphaFillMode : System.Int32
    {
        /// <summary>
        /// <dd> <p>Alpha values inside the target rectangle are set to opaque. </p> </dd>
        /// </summary>
        /// <doc-id>hh447648</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_OPAQUE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_OPAQUE</unmanaged-short>
        Opaque = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Alpha values inside the target rectangle are set to the alpha value specified in the background color. To set the background color, call the <strong>ID3D11VideoContext::VideoProcessorSetOutputBackgroundColor</strong> method.</p> </dd>
        /// </summary>
        /// <doc-id>hh447648</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_BACKGROUND</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_BACKGROUND</unmanaged-short>
        Background = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Existing alpha values remain unchanged in the output surface.</p> </dd>
        /// </summary>
        /// <doc-id>hh447648</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_DESTINATION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_DESTINATION</unmanaged-short>
        Destination = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Alpha values are taken from an  input stream, scaled, and copied to the corresponding destination rectangle for that stream. The input stream is specified in the <em>StreamIndex</em> parameter of the <strong>ID3D11VideoContext::VideoProcessorSetOutputAlphaFillMode</strong> method. </p> <p>If the input stream does not have alpha data, the video processor sets the alpha values in the target rectangle to opaque. If the input stream is disabled or the source rectangle is empty, the alpha values in the target rectangle are not modified.</p> </dd>
        /// </summary>
        /// <doc-id>hh447648</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM</unmanaged-short>
        SourceStream = unchecked ((System.Int32)(3))}

    /// <summary>
    /// <p>Specifies the automatic image processing capabilities of the video processor.</p>
    /// </summary>
    /// <doc-id>hh447649</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS</unmanaged-short>
    public enum VideoProcessorAutoStreamCaps : System.Int32
    {
        /// <summary>
        /// <dd> <p>Denoise.</p> </dd>
        /// </summary>
        /// <doc-id>hh447649</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DENOISE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DENOISE</unmanaged-short>
        Denoise = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Deringing.</p> </dd>
        /// </summary>
        /// <doc-id>hh447649</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DERINGING</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DERINGING</unmanaged-short>
        Deringing = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Edge enhancement.</p> </dd>
        /// </summary>
        /// <doc-id>hh447649</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_EDGE_ENHANCEMENT</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_EDGE_ENHANCEMENT</unmanaged-short>
        EdgeEnhancement = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Color correction.</p> </dd>
        /// </summary>
        /// <doc-id>hh447649</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_COLOR_CORRECTION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_COLOR_CORRECTION</unmanaged-short>
        ColorCorrection = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p>Flesh-tone mapping.</p> </dd>
        /// </summary>
        /// <doc-id>hh447649</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_FLESH_TONE_MAPPING</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_FLESH_TONE_MAPPING</unmanaged-short>
        FleshToneMapping = unchecked ((System.Int32)(16)),
        /// <summary>
        /// <dd> <p>Image stabilization.</p> </dd>
        /// </summary>
        /// <doc-id>hh447649</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_IMAGE_STABILIZATION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_IMAGE_STABILIZATION</unmanaged-short>
        ImageStabilization = unchecked ((System.Int32)(32)),
        /// <summary>
        /// <dd> <p>Enhanced image resolution.</p> </dd>
        /// </summary>
        /// <doc-id>hh447649</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_SUPER_RESOLUTION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_SUPER_RESOLUTION</unmanaged-short>
        SuperResolution = unchecked ((System.Int32)(64)),
        /// <summary>
        /// <dd> <p>Anamorphic scaling.</p> </dd>
        /// </summary>
        /// <doc-id>hh447649</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_ANAMORPHIC_SCALING</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_ANAMORPHIC_SCALING</unmanaged-short>
        AnamorphicScaling = unchecked ((System.Int32)(128))}

    /// <summary>
    /// <p>Specifies flags that indicate the most efficient methods for performing video processing operations. </p>
    /// </summary>
    /// <doc-id>dn894122</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINTS</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINTS</unmanaged-short>
    public enum VideoProcessorBehaviorHints : System.Int32
    {
        /// <summary>
        /// <dd> <p>Multi-plane overlay hardware can perform the rotation operation more efficiently than the <strong>ID3D11VideoContext::VideoProcessorBlt</strong> method.</p> </dd>
        /// </summary>
        /// <doc-id>dn894122</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_ROTATION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_ROTATION</unmanaged-short>
        MultiplaneOverlayRotation = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Multi-plane overlay hardware can perform the scaling operation more efficiently than the <strong>ID3D11VideoContext::VideoProcessorBlt</strong> method.</p> </dd>
        /// </summary>
        /// <doc-id>dn894122</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_RESIZE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_RESIZE</unmanaged-short>
        MultiplaneOverlayResize = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Multi-plane overlay hardware can perform the colorspace conversion operation more efficiently than the <strong>ID3D11VideoContext::VideoProcessorBlt</strong> method.</p> </dd>
        /// </summary>
        /// <doc-id>dn894122</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_COLOR_SPACE_CONVERSION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_COLOR_SPACE_CONVERSION</unmanaged-short>
        MultiplaneOverlayColorSpaceConversion = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>The video processor output data should be at least triple buffered for optimal performance.</p> </dd>
        /// </summary>
        /// <doc-id>dn894122</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_TRIPLE_BUFFER_OUTPUT</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_TRIPLE_BUFFER_OUTPUT</unmanaged-short>
        TripleBufferOutput = unchecked ((System.Int32)(8))}

    /// <summary>
    /// <p>Defines video processing capabilities for a Microsoft Direct3D?11 video processor.</p>
    /// </summary>
    /// <doc-id>hh447654</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS</unmanaged-short>
    public enum VideoProcessorDeviceCaps : System.Int32
    {
        /// <summary>
        /// <dd> <p>The video processor can blend video content in linear color space. Most video content is gamma corrected, resulting in nonlinear values. This capability flag means that the video processor converts colors to linear space before blending, which produces better results.</p> </dd>
        /// </summary>
        /// <doc-id>hh447654</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_LINEAR_SPACE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_LINEAR_SPACE</unmanaged-short>
        LinearSpace = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The video processor supports the xvYCC color space for YCbCr data. </p> </dd>
        /// </summary>
        /// <doc-id>hh447654</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_xvYCC</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_xvYCC</unmanaged-short>
        XvYCC = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>The video processor can perform range conversion when the input and output are both RGB but use different color ranges (0-255 or 16-235, for 8-bit RGB). </p> </dd>
        /// </summary>
        /// <doc-id>hh447654</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_RGB_RANGE_CONVERSION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_RGB_RANGE_CONVERSION</unmanaged-short>
        RgbRangeConversion = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>The video processor can apply a matrix conversion to YCbCr values when the input and output are both YCbCr. For example, the driver can convert colors from BT.601 to BT.709. </p> </dd>
        /// </summary>
        /// <doc-id>hh447654</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION</unmanaged-short>
        YCbCrMatrixConversion = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p>The video processor supports YUV nominal range . </p> <p>Supported in Windows?8.1 and later.</p> </dd>
        /// </summary>
        /// <doc-id>hh447654</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_NOMINAL_RANGE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_NOMINAL_RANGE</unmanaged-short>
        NominalRange = unchecked ((System.Int32)(16))}

    /// <summary>
    /// <p>Defines features that a Microsoft Direct3D?11 video processor can support. </p>
    /// </summary>
    /// <doc-id>hh447655</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS</unmanaged-short>
    public enum VideoProcessorFeatureCaps : System.Int32
    {
        /// <summary>
        /// <dd> <p>The video processor can set alpha values on the output pixels. For more information, see <strong>ID3D11VideoContext::VideoProcessorSetOutputAlphaFillMode</strong>.</p> </dd>
        /// </summary>
        /// <doc-id>hh447655</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_FILL</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_FILL</unmanaged-short>
        AlphaFill = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The video processor can downsample the video output. For more information, see <strong>ID3D11VideoContext::VideoProcessorSetOutputConstriction</strong>.</p> </dd>
        /// </summary>
        /// <doc-id>hh447655</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_CONSTRICTION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_CONSTRICTION</unmanaged-short>
        Constriction = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>The video processor can perform luma keying. For more information, see <strong>ID3D11VideoContext::VideoProcessorSetStreamLumaKey</strong>.</p> </dd>
        /// </summary>
        /// <doc-id>hh447655</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LUMA_KEY</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LUMA_KEY</unmanaged-short>
        LumaKey = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>The video processor can apply alpha values from color palette entries. </p> </dd>
        /// </summary>
        /// <doc-id>hh447655</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_PALETTE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_PALETTE</unmanaged-short>
        AlphaPalette = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p>The driver does not support full video processing capabilities. If this capability flag is set, the video processor has the following limitations:</p> <ul> <li>A maximum of two streams are supported:<ul> <li>The first stream must be either NV12 or YUY2.</li> <li>The second stream must be AYUV, AI44, or IA44.</li> </ul> </li> <li>Image adjustment (proc amp) controls are applied to the entire video processing blit, rather than per stream.</li> <li>Support for per-stream planar alpha is not reliable. (Per-pixel alpha is supported, however.)</li> </ul> </dd>
        /// </summary>
        /// <doc-id>hh447655</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LEGACY</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LEGACY</unmanaged-short>
        Legacy = unchecked ((System.Int32)(16)),
        /// <summary>
        /// <dd> <p>The video processor can support 3D stereo video. For more information, see <strong>ID3D11VideoContext::VideoProcessorSetStreamStereoFormat</strong>.</p> <p>All drivers setting this caps must support the following stereo formats: <strong>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL</strong>, <strong>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL</strong>, and <strong>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE</strong>.</p> </dd>
        /// </summary>
        /// <doc-id>hh447655</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_STEREO</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_STEREO</unmanaged-short>
        Stereo = unchecked ((System.Int32)(32)),
        /// <summary>
        /// <dd> <p>The driver can rotate the input data either 90, 180, or 270 degrees clockwise as part of the video processing operation.</p> </dd>
        /// </summary>
        /// <doc-id>hh447655</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ROTATION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ROTATION</unmanaged-short>
        Rotation = unchecked ((System.Int32)(64)),
        /// <summary>
        /// <dd> <p>The driver supports the <strong>VideoProcessorSetStreamAlpha</strong> call.</p> </dd>
        /// </summary>
        /// <doc-id>hh447655</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_STREAM</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_STREAM</unmanaged-short>
        AlphaStream = unchecked ((System.Int32)(128)),
        /// <summary>
        /// <dd> <p>The driver supports the <strong>VideoProcessorSetStreamPixelAspectRatio</strong> call.</p> </dd>
        /// </summary>
        /// <doc-id>hh447655</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_PIXEL_ASPECT_RATIO</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_PIXEL_ASPECT_RATIO</unmanaged-short>
        PixelAspectRatio = unchecked ((System.Int32)(256)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>hh447655</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_MIRROR</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_MIRROR</unmanaged-short>
        Mirror = unchecked ((System.Int32)(512)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>hh447655</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_SHADER_USAGE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_SHADER_USAGE</unmanaged-short>
        ShaderUsage = unchecked ((System.Int32)(1024)),
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>hh447655</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_METADATA_HDR10</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_METADATA_HDR10</unmanaged-short>
        MetadataHdr10 = unchecked ((System.Int32)(2048))}

    /// <summary>
    /// <p>Identifies a video processor filter.</p>
    /// </summary>
    /// <doc-id>hh447656</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER</unmanaged-short>
    public enum VideoProcessorFilter : System.Int32
    {
        /// <summary>
        /// <dd> <p>Brightness filter.</p> </dd>
        /// </summary>
        /// <doc-id>hh447656</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_BRIGHTNESS</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_BRIGHTNESS</unmanaged-short>
        Brightness = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Contrast filter.</p> </dd>
        /// </summary>
        /// <doc-id>hh447656</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CONTRAST</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CONTRAST</unmanaged-short>
        Contrast = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Hue filter.</p> </dd>
        /// </summary>
        /// <doc-id>hh447656</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_HUE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_HUE</unmanaged-short>
        Hue = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Saturation filter.</p> </dd>
        /// </summary>
        /// <doc-id>hh447656</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_SATURATION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_SATURATION</unmanaged-short>
        Saturation = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>Noise reduction filter.</p> </dd>
        /// </summary>
        /// <doc-id>hh447656</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_NOISE_REDUCTION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_NOISE_REDUCTION</unmanaged-short>
        NoiseReduction = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Edge enhancement filter.</p> </dd>
        /// </summary>
        /// <doc-id>hh447656</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_EDGE_ENHANCEMENT</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_EDGE_ENHANCEMENT</unmanaged-short>
        EdgeEnhancement = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p>Anamorphic scaling filter.</p> </dd>
        /// </summary>
        /// <doc-id>hh447656</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_ANAMORPHIC_SCALING</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_ANAMORPHIC_SCALING</unmanaged-short>
        AnamorphicScaling = unchecked ((System.Int32)(6)),
        /// <summary>
        /// <dd> <p>Stereo adjustment filter. When stereo 3D video is enabled, this filter adjusts the offset between the left and right views, allowing the user to reduce potential eye strain. </p> <p>The filter value indicates the amount by which the left and right views are adjusted.  A positive value shifts the images away from each other: the left image toward the left, and the right image toward the right. A negative value shifts the images in the opposite directions, closer to each other.</p> </dd>
        /// </summary>
        /// <doc-id>hh447656</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_STEREO_ADJUSTMENT</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_STEREO_ADJUSTMENT</unmanaged-short>
        StereoAdjustment = unchecked ((System.Int32)(7))}

    /// <summary>
    /// <p>Defines image filter capabilities for a Microsoft Direct3D?11 video processor.</p>
    /// </summary>
    /// <remarks>
    /// <p>These capability flags indicate support for the image filters defined by the <strong><see cref = "SharpDX.Direct3D11.VideoProcessorFilter"/></strong> enumeration. To apply a particular filter, call the <strong>ID3D11VideoContext::VideoProcessorSetStreamFilter</strong> method.</p>
    /// </remarks>
    /// <doc-id>hh447671</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS</unmanaged-short>
    public enum VideoProcessorFilterCaps : System.Int32
    {
        /// <summary>
        /// <dd> <p>The video processor can adjust the brightness level. </p> </dd>
        /// </summary>
        /// <doc-id>hh447671</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_BRIGHTNESS</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_BRIGHTNESS</unmanaged-short>
        Brightness = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The video processor can adjust the contrast level. </p> </dd>
        /// </summary>
        /// <doc-id>hh447671</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_CONTRAST</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_CONTRAST</unmanaged-short>
        Contrast = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>The video processor can adjust hue. </p> </dd>
        /// </summary>
        /// <doc-id>hh447671</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_HUE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_HUE</unmanaged-short>
        Hue = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>The video processor can adjust the saturation level. </p> </dd>
        /// </summary>
        /// <doc-id>hh447671</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_SATURATION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_SATURATION</unmanaged-short>
        Saturation = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p>The video processor can perform noise reduction. </p> </dd>
        /// </summary>
        /// <doc-id>hh447671</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_NOISE_REDUCTION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_NOISE_REDUCTION</unmanaged-short>
        NoiseReduction = unchecked ((System.Int32)(16)),
        /// <summary>
        /// <dd> <p>The video processor can perform edge enhancement. </p> </dd>
        /// </summary>
        /// <doc-id>hh447671</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_EDGE_ENHANCEMENT</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_EDGE_ENHANCEMENT</unmanaged-short>
        EdgeEnhancement = unchecked ((System.Int32)(32)),
        /// <summary>
        /// <dd> <p>The video processor can perform anamorphic scaling. Anamorphic scaling can be used to stretch 4:3 content to a widescreen 16:9 aspect ratio. </p> </dd>
        /// </summary>
        /// <doc-id>hh447671</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_ANAMORPHIC_SCALING</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_ANAMORPHIC_SCALING</unmanaged-short>
        AnamorphicScaling = unchecked ((System.Int32)(64)),
        /// <summary>
        /// <dd> <p>For stereo 3D video, the video processor can adjust the offset between the left and right views, allowing the user to reduce potential eye strain.</p> </dd>
        /// </summary>
        /// <doc-id>hh447671</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_STEREO_ADJUSTMENT</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_STEREO_ADJUSTMENT</unmanaged-short>
        StereoAdjustment = unchecked ((System.Int32)(128))}

    /// <summary>
    /// <p>Defines capabilities related to input formats for a Microsoft Direct3D?11 video processor.</p>
    /// </summary>
    /// <remarks>
    /// <p>These flags define video processing capabilities that usually are not needed, and that video devices are therefore not required to support.</p><p> The first three flags relate to RGB support for functions that are normally applied to YCbCr video: deinterlacing, color adjustment, and luma keying. A device that supports these functions for YCbCr is not required  to support them for RGB input. Supporting RGB input for these functions  is  an additional capability, reflected by these constants. Note that the driver might convert the input to another color space, perform the indicated function, and then convert the result back to RGB. </p><p>Similarly, a device that supports deinterlacing is not required to support deinterlacing of palettized formats. This capability is indicated by the <strong>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_PALETTE_INTERLACED</strong> flag.</p>
    /// </remarks>
    /// <doc-id>hh447658</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS</unmanaged-short>
    public enum VideoProcessorFormatCaps : System.Int32
    {
        /// <summary>
        /// <dd> <p>The video processor can deinterlace an input stream that contains interlaced RGB video. </p> </dd>
        /// </summary>
        /// <doc-id>hh447658</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_INTERLACED</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_INTERLACED</unmanaged-short>
        RgbInterlaced = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The video processor can perform color adjustment on RGB video.</p> </dd>
        /// </summary>
        /// <doc-id>hh447658</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_PROCAMP</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_PROCAMP</unmanaged-short>
        RgbProcamp = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>The video processor can perform luma keying on RGB video.</p> </dd>
        /// </summary>
        /// <doc-id>hh447658</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_LUMA_KEY</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_LUMA_KEY</unmanaged-short>
        RgbLumaKey = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>The video processor can deinterlace input streams with palettized color formats.</p> </dd>
        /// </summary>
        /// <doc-id>hh447658</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_PALETTE_INTERLACED</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_PALETTE_INTERLACED</unmanaged-short>
        PaletteInterlaced = unchecked ((System.Int32)(8))}

    /// <summary>
    /// <p>Specifies how a video format can be used for video processing.</p>
    /// </summary>
    /// <doc-id>hh447659</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT</unmanaged-short>
    public enum VideoProcessorFormatSupport : System.Int32
    {
        /// <summary>
        /// <dd> <p>The format can be used as the input to the video processor.</p> </dd>
        /// </summary>
        /// <doc-id>hh447659</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_INPUT</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_INPUT</unmanaged-short>
        Input = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The format can be used as the output from the video processor.</p> </dd>
        /// </summary>
        /// <doc-id>hh447659</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_OUTPUT</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_OUTPUT</unmanaged-short>
        Output = unchecked ((System.Int32)(2))}

    /// <summary>
    /// <p>Specifies the inverse telecine (IVTC) capabilities of a video processor. </p>
    /// </summary>
    /// <doc-id>hh447661</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS</unmanaged-short>
    public enum VideoProcessorItelecineCaps : System.Int32
    {
        /// <summary>
        /// <dd> <p>The video processor can reverse 3:2 pulldown.</p> </dd>
        /// </summary>
        /// <doc-id>hh447661</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32</unmanaged-short>
        Value32 = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The video processor can reverse 2:2 pulldown.</p> </dd>
        /// </summary>
        /// <doc-id>hh447661</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_22</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_22</unmanaged-short>
        Value22 = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>The video processor can reverse 2:2:2:4 pulldown.</p> </dd>
        /// </summary>
        /// <doc-id>hh447661</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2224</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2224</unmanaged-short>
        Value2224 = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>The video processor can reverse 2:3:3:2 pulldown.</p> </dd>
        /// </summary>
        /// <doc-id>hh447661</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2332</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2332</unmanaged-short>
        Value2332 = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p>The video processor can reverse 3:2:3:2:2 pulldown.</p> </dd>
        /// </summary>
        /// <doc-id>hh447661</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32322</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32322</unmanaged-short>
        Value32322 = unchecked ((System.Int32)(16)),
        /// <summary>
        /// <dd> <p>The video processor can reverse 5:5 pulldown.</p> </dd>
        /// </summary>
        /// <doc-id>hh447661</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_55</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_55</unmanaged-short>
        Value55 = unchecked ((System.Int32)(32)),
        /// <summary>
        /// <dd> <p>The video processor can reverse 6:4 pulldown.</p> </dd>
        /// </summary>
        /// <doc-id>hh447661</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_64</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_64</unmanaged-short>
        Value64 = unchecked ((System.Int32)(64)),
        /// <summary>
        /// <dd> <p>The video processor can reverse 8:7 pulldown.</p> </dd>
        /// </summary>
        /// <doc-id>hh447661</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_87</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_87</unmanaged-short>
        Value87 = unchecked ((System.Int32)(128)),
        /// <summary>
        /// <dd> <p>The video processor can reverse 2:2:2:2:2:2:2:2:2:2:2:3 pulldown.</p> </dd>
        /// </summary>
        /// <doc-id>hh447661</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_222222222223</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_222222222223</unmanaged-short>
        Value222222222223 = unchecked ((System.Int32)(256)),
        /// <summary>
        /// <dd> <p>The video processor can reverse other telecine modes not listed here.</p> </dd>
        /// </summary>
        /// <doc-id>hh447661</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_OTHER</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_OTHER</unmanaged-short>
        Other = unchecked ((System.Int32)(-2147483648))}

    /// <summary>
    /// <p>Specifies values for the luminance range of YUV data.</p>
    /// </summary>
    /// <doc-id>dn280649</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE</unmanaged-short>
    public enum VideoProcessorNominalRange : System.Int32
    {
        /// <summary>
        /// <dd> <p>Driver defaults are used, which should be Studio luminance range [16-235],</p> </dd>
        /// </summary>
        /// <doc-id>dn280649</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_UNDEFINED</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_UNDEFINED</unmanaged-short>
        Undefined = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Studio luminance range [16-235]</p> </dd>
        /// </summary>
        /// <doc-id>dn280649</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_16_235</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_16_235</unmanaged-short>
        Range_16_235 = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Full luminance range [0-255]</p> </dd>
        /// </summary>
        /// <doc-id>dn280649</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_0_255</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_0_255</unmanaged-short>
        Range_0_255 = unchecked ((System.Int32)(2))}

    /// <summary>
    /// <p>Specifies the rate at which the video processor produces output frames from an input stream.</p>
    /// </summary>
    /// <doc-id>hh447662</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE</unmanaged-short>
    public enum VideoProcessorOutputRate : System.Int32
    {
        /// <summary>
        /// <dd> <p>The output is the normal frame rate. </p> </dd>
        /// </summary>
        /// <doc-id>hh447662</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_NORMAL</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_NORMAL</unmanaged-short>
        Normal = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>The output is half the frame rate. </p> </dd>
        /// </summary>
        /// <doc-id>hh447662</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_HALF</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_HALF</unmanaged-short>
        Half = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The output is a custom frame rate.</p> </dd>
        /// </summary>
        /// <doc-id>hh447662</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM</unmanaged-short>
        Custom = unchecked ((System.Int32)(2))}

    /// <summary>
    /// <p>Specifies video processing capabilities that relate to deinterlacing, inverse telecine (IVTC), and frame-rate conversion.</p>
    /// </summary>
    /// <doc-id>hh447664</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS</unmanaged-short>
    public enum VideoProcessorProcessorCaps : System.Int32
    {
        /// <summary>
        /// <dd> <p>The video processor can perform blend deinterlacing. </p> <p>In blend deinterlacing, the two fields from an interlaced frame are blended into a single progressive frame. A video processor uses blend deinterlacing when it deinterlaces at half rate, as when converting 60i to 30p. Blend deinterlacing does not require reference frames.</p> </dd>
        /// </summary>
        /// <doc-id>hh447664</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BLEND</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BLEND</unmanaged-short>
        DeinterlaceBlend = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The video processor can perform bob deinterlacing.</p> <p>In bob deinterlacing, missing field lines are interpolated from the lines above and below. Bob deinterlacing does not require reference frames.</p> </dd>
        /// </summary>
        /// <doc-id>hh447664</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BOB</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BOB</unmanaged-short>
        DeinterlaceBob = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>The video processor can perform adaptive deinterlacing.</p> <p>Adaptive deinterlacing uses spatial or temporal interpolation, and switches between the two on a field-by-field basis, depending on the amount of motion. If the video processor does not receive enough reference frames to perform adaptive deinterlacing, it falls back to bob deinterlacing.</p> </dd>
        /// </summary>
        /// <doc-id>hh447664</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE</unmanaged-short>
        DeinterlaceAdaptive = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>The video processor can perform motion-compensated deinterlacing. </p> <p>Motion-compensated deinterlacing uses motion vectors to recreate missing lines. If the video processor does not receive enough reference frames to perform motion-compensated deinterlacing, it falls back to bob deinterlacing. </p> </dd>
        /// </summary>
        /// <doc-id>hh447664</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION</unmanaged-short>
        DeinterlaceMotionCompensation = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p>The video processor can perform inverse telecine (IVTC). </p> <p>If the video processor supports this capability, the <strong>ITelecineCaps</strong> member of the <strong><see cref = "SharpDX.Direct3D11.VideoProcessorRateConversionCaps"/></strong> structure specifies which IVTC modes are supported. </p> </dd>
        /// </summary>
        /// <doc-id>hh447664</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_INVERSE_TELECINE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_INVERSE_TELECINE</unmanaged-short>
        InverseTelecine = unchecked ((System.Int32)(16)),
        /// <summary>
        /// <dd> <p>The video processor can convert the frame rate by interpolating frames. </p> </dd>
        /// </summary>
        /// <doc-id>hh447664</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_FRAME_RATE_CONVERSION</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_FRAME_RATE_CONVERSION</unmanaged-short>
        FrameRateConversion = unchecked ((System.Int32)(32))}

    /// <summary>
    /// <p>Specifies the video rotation states.</p>
    /// </summary>
    /// <doc-id>jj160515</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ROTATION</unmanaged-short>
    public enum VideoProcessorRotation : System.Int32
    {
        /// <summary>
        /// <dd> <p>The video is not rotated.</p> </dd>
        /// </summary>
        /// <doc-id>jj160515</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION_IDENTITY</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ROTATION_IDENTITY</unmanaged-short>
        Identity = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>The video is rotated 90 degrees clockwise.</p> </dd>
        /// </summary>
        /// <doc-id>jj160515</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION_90</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ROTATION_90</unmanaged-short>
        Rotation90 = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The video is rotated 180 degrees clockwise.</p> </dd>
        /// </summary>
        /// <doc-id>jj160515</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION_180</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ROTATION_180</unmanaged-short>
        Rotation180 = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>The video is rotated 270 degrees clockwise.</p> </dd>
        /// </summary>
        /// <doc-id>jj160515</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION_270</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_ROTATION_270</unmanaged-short>
        Rotation270 = unchecked ((System.Int32)(3))}

    /// <summary>
    /// <p>Defines stereo 3D capabilities for a Microsoft Direct3D?11 video processor.</p>
    /// </summary>
    /// <doc-id>hh447667</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_CAPS</unmanaged-short>
    public enum VideoProcessorStereoCaps : System.Int32
    {
        /// <summary>
        /// <dd> <p>The video processor supports the <strong>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET</strong> format.</p> </dd>
        /// </summary>
        /// <doc-id>hh447667</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_MONO_OFFSET</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_MONO_OFFSET</unmanaged-short>
        MonoOffset = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The video processor supports the <strong>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED</strong> format.</p> </dd>
        /// </summary>
        /// <doc-id>hh447667</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_ROW_INTERLEAVED</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_ROW_INTERLEAVED</unmanaged-short>
        RowInterleaved = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>The video processor supports the <strong>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED</strong> format.</p> </dd>
        /// </summary>
        /// <doc-id>hh447667</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_COLUMN_INTERLEAVED</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_COLUMN_INTERLEAVED</unmanaged-short>
        ColumnInterleaved = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>The video processor supports the <strong>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD</strong> format.</p> </dd>
        /// </summary>
        /// <doc-id>hh447667</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_CHECKERBOARD</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_CHECKERBOARD</unmanaged-short>
        CheckerBoard = unchecked ((System.Int32)(8)),
        /// <summary>
        /// <dd> <p>The video processor can flip one or both views. For more information, see <strong><see cref = "SharpDX.Direct3D11.VideoProcessorStereoFlipMode"/></strong>.</p> </dd>
        /// </summary>
        /// <doc-id>hh447667</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_FLIP_MODE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_FLIP_MODE</unmanaged-short>
        FlipMode = unchecked ((System.Int32)(16))}

    /// <summary>
    /// <p>For stereo 3D video, specifies whether the data in frame 0 or frame 1 is flipped, either horizontally or vertically. </p>
    /// </summary>
    /// <doc-id>hh447668</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE</unmanaged-short>
    public enum VideoProcessorStereoFlipMode : System.Int32
    {
        /// <summary>
        /// <dd> <p>Neither frame is flipped.</p> </dd>
        /// </summary>
        /// <doc-id>hh447668</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_NONE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_NONE</unmanaged-short>
        None = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>The data in frame 0 is flipped.</p> </dd>
        /// </summary>
        /// <doc-id>hh447668</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME0</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME0</unmanaged-short>
        Frame0 = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The data in frame 1 is flipped.</p> </dd>
        /// </summary>
        /// <doc-id>hh447668</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME1</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME1</unmanaged-short>
        Frame1 = unchecked ((System.Int32)(2))}

    /// <summary>
    /// <p>Specifies the layout in memory of a stereo 3D video frame.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration designates the two stereo views as "frame 0" and "frame 1". The <em>LeftViewFrame0</em> parameter of the <strong>VideoProcessorSetStreamStereoFormat</strong> method specifies which view is the left view, and which is the right view.</p><p>For packed formats, if the source rectangle clips part of the surface, the driver interprets the rectangle in logical coordinates relative to the stereo view,  rather than absolute pixel coordinates. The result is that frame 0 and frame 1 are clipped proportionately.</p><p>To query whether the device supports stereo 3D video, call <strong>ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps</strong> and check for the <strong>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_STEREO</strong> flag in the <strong>FeatureCaps</strong> member of the <strong><see cref = "SharpDX.Direct3D11.VideoProcessorCaps"/></strong> structure. If this capability flag is present, it means that the driver supports all of the stereo formats that are not  listed as optional. To find out which optional formats are supported, call <strong>GetVideoProcessorCaps</strong> and check the <strong>StereoCaps</strong> member of the structure.</p>
    /// </remarks>
    /// <doc-id>hh447669</doc-id>
    /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT</unmanaged-short>
    public enum VideoProcessorStereoFormat : System.Int32
    {
        /// <summary>
        /// <dd> <p>The sample does not contain stereo data.  If the stereo format is not specified, this value is the default.</p> </dd>
        /// </summary>
        /// <doc-id>hh447669</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO</unmanaged-short>
        Mono = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Frame 0 and frame 1 are packed side-by-side, as shown in the following diagram.</p> <p></p> <p>All drivers that support stereo video must support this format.</p> </dd>
        /// </summary>
        /// <doc-id>hh447669</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL</unmanaged-short>
        Horizontal = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Frame 0 and frame 1 are packed top-to-bottom, as shown in the following diagram.</p> <p></p> <p>All drivers that support stereo video must support this format.</p> </dd>
        /// </summary>
        /// <doc-id>hh447669</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL</unmanaged-short>
        Vertical = unchecked ((System.Int32)(2)),
        /// <summary>
        /// <dd> <p>Frame 0 and frame 1 are placed in separate resources or in separate texture array elements within the same resource.</p> <p>All drivers that support stereo video must support this format.</p> </dd>
        /// </summary>
        /// <doc-id>hh447669</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE</unmanaged-short>
        Separate = unchecked ((System.Int32)(3)),
        /// <summary>
        /// <dd> <p>The sample contains non-stereo data. However, the driver should create a left/right output of this sample using a specified offset.  The offset is specified in the <em>MonoOffset</em> parameter of the <strong>ID3D11VideoContext::VideoProcessorSetStreamStereoFormat</strong> method. </p> <p>This format is primarily intended for subtitles and other subpicture data, where the entire sample is presented on the same plane.</p> <p>Support for this stereo format is optional.</p> </dd>
        /// </summary>
        /// <doc-id>hh447669</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET</unmanaged-short>
        MonoOffset = unchecked ((System.Int32)(4)),
        /// <summary>
        /// <dd> <p>Frame 0 and frame 1 are packed into interleaved rows, as shown in the following diagram.</p> <p></p> <p>Support for this stereo format is optional.</p> </dd>
        /// </summary>
        /// <doc-id>hh447669</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED</unmanaged-short>
        RowInterleaved = unchecked ((System.Int32)(5)),
        /// <summary>
        /// <dd> <p>Frame 0 and frame 1 are packed into interleaved columns, as shown in the following diagram.</p> <p></p> <p>Support for this stereo format is optional.</p> </dd>
        /// </summary>
        /// <doc-id>hh447669</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED</unmanaged-short>
        ColumnInterleaved = unchecked ((System.Int32)(6)),
        /// <summary>
        /// <dd> <p>Frame 0 and frame 1 are packed in a checkerboard format, as shown in the following diagram.</p> <p></p> <p>Support for this stereo format is optional.</p> </dd>
        /// </summary>
        /// <doc-id>hh447669</doc-id>
        /// <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD</unmanaged-short>
        CheckerBoard = unchecked ((System.Int32)(7))}

    /// <summary>
    /// <p>Specifies the intended use for a video processor.</p>
    /// </summary>
    /// <doc-id>hh447673</doc-id>
    /// <unmanaged>D3D11_VIDEO_USAGE</unmanaged>
    /// <unmanaged-short>D3D11_VIDEO_USAGE</unmanaged-short>
    public enum VideoUsage : System.Int32
    {
        /// <summary>
        /// <dd> <p>Normal video playback. The graphics driver should expose a set of capabilities that are appropriate for real-time video playback. </p> </dd>
        /// </summary>
        /// <doc-id>hh447673</doc-id>
        /// <unmanaged>D3D11_VIDEO_USAGE_PLAYBACK_NORMAL</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_USAGE_PLAYBACK_NORMAL</unmanaged-short>
        PlaybackNormal = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>Optimal speed. The graphics driver should expose a minimal set of capabilities that are optimized for performance. </p> <p>Use this setting if you want better performance and can accept some reduction in video quality. For example, you might use this setting in power-saving mode or to play video thumbnails. </p> </dd>
        /// </summary>
        /// <doc-id>hh447673</doc-id>
        /// <unmanaged>D3D11_VIDEO_USAGE_OPTIMAL_SPEED</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_USAGE_OPTIMAL_SPEED</unmanaged-short>
        OptimalSpeed = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>Optimal quality. The grahics driver should expose its maximum set of capabilities.</p> <p>Specify this setting to get the best video quality possible. It is appropriate for tasks such as video editing, when quality is more important than speed. It is not appropriate for real-time playback. </p> </dd>
        /// </summary>
        /// <doc-id>hh447673</doc-id>
        /// <unmanaged>D3D11_VIDEO_USAGE_OPTIMAL_QUALITY</unmanaged>
        /// <unmanaged-short>D3D11_VIDEO_USAGE_OPTIMAL_QUALITY</unmanaged-short>
        OptimalQuality = unchecked ((System.Int32)(2))}

    /// <summary>
    /// <p>Specifies how to access a resource that is used in a video processor input view.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is used with the <strong><see cref = "SharpDX.Direct3D11.VideoProcessorInputViewDescription"/></strong> structure.</p>
    /// </remarks>
    /// <doc-id>hh447674</doc-id>
    /// <unmanaged>D3D11_VPIV_DIMENSION</unmanaged>
    /// <unmanaged-short>D3D11_VPIV_DIMENSION</unmanaged-short>
    public enum VpivDimension : System.Int32
    {
        /// <summary>
        /// <dd> <p>Not a valid value.</p> </dd>
        /// </summary>
        /// <doc-id>hh447674</doc-id>
        /// <unmanaged>D3D11_VPIV_DIMENSION_UNKNOWN</unmanaged>
        /// <unmanaged-short>D3D11_VPIV_DIMENSION_UNKNOWN</unmanaged-short>
        Unknown = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as a 2D texture.</p> </dd>
        /// </summary>
        /// <doc-id>hh447674</doc-id>
        /// <unmanaged>D3D11_VPIV_DIMENSION_TEXTURE2D</unmanaged>
        /// <unmanaged-short>D3D11_VPIV_DIMENSION_TEXTURE2D</unmanaged-short>
        Texture2D = unchecked ((System.Int32)(1))}

    /// <summary>
    /// <p>Specifies how to access a resource that is used in a video processor output view.</p>
    /// </summary>
    /// <remarks>
    /// <p>This enumeration is used with the <strong><see cref = "SharpDX.Direct3D11.VideoProcessorOutputViewDescription"/></strong> structure.</p>
    /// </remarks>
    /// <doc-id>hh447675</doc-id>
    /// <unmanaged>D3D11_VPOV_DIMENSION</unmanaged>
    /// <unmanaged-short>D3D11_VPOV_DIMENSION</unmanaged-short>
    public enum VpovDimension : System.Int32
    {
        /// <summary>
        /// <dd> <p>Not a valid value.</p> </dd>
        /// </summary>
        /// <doc-id>hh447675</doc-id>
        /// <unmanaged>D3D11_VPOV_DIMENSION_UNKNOWN</unmanaged>
        /// <unmanaged-short>D3D11_VPOV_DIMENSION_UNKNOWN</unmanaged-short>
        Unknown = unchecked ((System.Int32)(0)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as a 2D texture.</p> </dd>
        /// </summary>
        /// <doc-id>hh447675</doc-id>
        /// <unmanaged>D3D11_VPOV_DIMENSION_TEXTURE2D</unmanaged>
        /// <unmanaged-short>D3D11_VPOV_DIMENSION_TEXTURE2D</unmanaged-short>
        Texture2D = unchecked ((System.Int32)(1)),
        /// <summary>
        /// <dd> <p>The resource will be accessed as an array of 2D textures.</p> </dd>
        /// </summary>
        /// <doc-id>hh447675</doc-id>
        /// <unmanaged>D3D11_VPOV_DIMENSION_TEXTURE2DARRAY</unmanaged>
        /// <unmanaged-short>D3D11_VPOV_DIMENSION_TEXTURE2DARRAY</unmanaged-short>
        Texture2DArray = unchecked ((System.Int32)(2))}
}